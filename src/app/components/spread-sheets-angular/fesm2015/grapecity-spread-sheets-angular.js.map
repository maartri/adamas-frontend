{"version":3,"file":"grapecity-spread-sheets-angular.js","sources":["../../src/column.component.ts","../../src/worksheet.component.ts","../../src/spreadSheets.component.ts","../../src/spreadSheets.module.ts","../../grapecity-spread-sheets-angular.ts"],"sourcesContent":["/*import_begin*/\r\nimport { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport * as GC from '@grapecity/spread-sheets';\r\n/*import_end*/\r\n\r\n/*code_begin*/\r\n@Component({\r\n  selector: 'gc-column',\r\n  template: `\r\n        <ng-content></ng-content>\r\n    `,\r\n})\r\nexport class ColumnComponent implements OnChanges {\r\n  private changes: any = {};\r\n  private sheet?: GC.Spread.Sheets.Worksheet;\r\n  private index?: number;\r\n\r\n  // indicate all inputs\r\n  @Input() public width?: number;\r\n  @Input() public dataField?: string;\r\n  @Input() public headerText?: string;\r\n  @Input() public visible?: boolean;\r\n  @Input() public resizable?: boolean;\r\n  @Input() public autoFit?: boolean;\r\n  @Input() public style?: GC.Spread.Sheets.Style;\r\n  @Input() public cellType?: GC.Spread.Sheets.CellTypes.Base;\r\n  @Input() public headerStyle?: GC.Spread.Sheets.Style;\r\n  @Input() public formatter: any;\r\n\r\n  public onAttached(sheet: GC.Spread.Sheets.Worksheet, index: number): void {\r\n    this.sheet = sheet;\r\n    this.index = index;\r\n    this.onColumnChanged();\r\n  }\r\n\r\n  private onColumnChanged() {\r\n    if (this.sheet) {\r\n      const sheet = this.sheet;\r\n      sheet.suspendPaint();\r\n      sheet.suspendEvent();\r\n      const changes = this.changes;\r\n      for (const changeName in changes) {\r\n        let newValue = changes[changeName].currentValue;\r\n        if (newValue === null || newValue === void 0) {\r\n          continue;\r\n        }\r\n        switch (changeName) {\r\n          case 'width':\r\n            newValue = parseInt(newValue, 10);\r\n            sheet.setColumnWidth(this.index as number, newValue);\r\n            break;\r\n          case 'visible':\r\n            sheet.setColumnVisible(this.index as number, newValue);\r\n            break;\r\n          case 'resizable':\r\n            sheet.setColumnResizable(this.index as number, newValue);\r\n            break;\r\n          case 'autoFit':\r\n            if (newValue) {\r\n              sheet.autoFitColumn(this.index as number);\r\n            }\r\n            break;\r\n          case 'style':\r\n            sheet.setStyle(-1, this.index as number, newValue);\r\n            break;\r\n          case 'headerStyle':\r\n            sheet.setStyle(-1, this.index as number, newValue, GC.Spread.Sheets.SheetArea.colHeader);\r\n            break;\r\n          case 'cellType':\r\n            sheet.setCellType(-1, this.index as number, newValue);\r\n            break;\r\n          case 'formatter':\r\n            sheet.setFormatter(-1, this.index as number, newValue, GC.Spread.Sheets.SheetArea.viewport);\r\n            break;\r\n        }\r\n      }\r\n      sheet.resumeEvent();\r\n      sheet.resumePaint();\r\n    }\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    this.changes = {};\r\n    const changesCache = this.changes;\r\n    for (const changeName in changes) {\r\n      changesCache[changeName] = changes[changeName];\r\n    }\r\n    this.onColumnChanged();\r\n  }\r\n}\r\n/*code_end*/\r\n","/*import_begin*/\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ContentChildren,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  QueryList, SimpleChanges,\r\n} from '@angular/core';\r\n/*import_end*/\r\nimport { ColumnComponent } from './column.component';\r\nimport * as GC from '@grapecity/spread-sheets';\r\n/*code_begin*/\r\n@Component({\r\n  selector: 'gc-worksheet',\r\n  template: `\r\n        <ng-content></ng-content>\r\n    `,\r\n})\r\nexport class WorksheetComponent implements OnChanges, AfterViewInit {\r\n  private sheet: GC.Spread.Sheets.Worksheet;\r\n  @ContentChildren(ColumnComponent)\r\n  public columns?: QueryList<ColumnComponent>;\r\n\r\n  // indicate all inputs\r\n  @Input() public rowCount?: number;\r\n  @Input() public colCount?: number;\r\n  @Input() public dataSource: any;\r\n  @Input() public name?: string;\r\n  @Input() public frozenColumnCount?: number;\r\n  @Input() public frozenRowCount?: number;\r\n  @Input() public frozenTrailingRowCount?: number;\r\n  @Input() public frozenTrailingColumnCount?: number;\r\n  @Input() public allowCellOverflow?: boolean;\r\n  @Input() public frozenlineColor?: string;\r\n  @Input() public sheetTabColor?: string;\r\n  @Input() public selectionPolicy?: number;\r\n  @Input() public selectionUnit?: number;\r\n  @Input() public zoom?: number;\r\n  @Input() public currentTheme?: string;\r\n  @Input() public clipBoardOptions?: number;\r\n  @Input() public rowHeaderVisible?: boolean;\r\n  @Input() public colHeaderVisible?: boolean;\r\n  @Input() public rowHeaderAutoText?: number;\r\n  @Input() public colHeaderAutoText?: number;\r\n  @Input() public rowHeaderAutoTextIndex?: number;\r\n  @Input() public colHeaderAutoTextIndex?: number;\r\n  @Input() public isProtected?: boolean;\r\n  @Input() public showRowOutline?: boolean;\r\n  @Input() public showColumnOutline?: boolean;\r\n  @Input() public selectionBackColor?: string;\r\n  @Input() public selectionBorderColor?: string;\r\n  @Input() public defaultStyle?: GC.Spread.Sheets.Style;\r\n  @Input() public rowOutlineInfo?: any[];\r\n  @Input() public columnOutlineInfo?: any[];\r\n  @Input() public autoGenerateColumns?: boolean;\r\n\r\n  constructor() {\r\n    this.sheet = new GC.Spread.Sheets.Worksheet('');\r\n  }\r\n\r\n  public onAttached(): void {\r\n    const sheet = this.sheet;\r\n    const columns = (this.columns as QueryList<ColumnComponent>);\r\n    sheet.suspendPaint();\r\n    sheet.suspendEvent();\r\n    if (this.dataSource) {\r\n      sheet.setDataSource(this.dataSource);\r\n      columns.forEach((columnComponent: ColumnComponent, index: number) => {\r\n        if (columnComponent.dataField) {\r\n          sheet.bindColumn(index, {\r\n            name: columnComponent.dataField,\r\n            displayName: columnComponent.headerText,\r\n          });\r\n        }\r\n      });\r\n    }\r\n    if (columns.length > 0) {\r\n      sheet.setColumnCount(columns.length);\r\n      columns.forEach((columnComponent: ColumnComponent, index: number) => {\r\n        columnComponent.onAttached(this.sheet, index);\r\n      });\r\n    }\r\n    sheet.resumeEvent();\r\n    sheet.resumePaint();\r\n  }\r\n  public getSheet() {\r\n    return this.sheet;\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    const sheet = this.sheet;\r\n    sheet.suspendPaint();\r\n    sheet.suspendEvent();\r\n    for (const changeName in changes) {\r\n      const newValue = changes[changeName].currentValue;\r\n      if (newValue === null || newValue === void 0) {\r\n        continue;\r\n      }\r\n      switch (changeName) {\r\n        case 'rowCount':\r\n          sheet.setRowCount(newValue);\r\n          break;\r\n        case 'colCount':\r\n          sheet.setColumnCount(newValue);\r\n          break;\r\n        case 'name':\r\n          sheet.name(newValue);\r\n          break;\r\n        case 'frozenColumnCount':\r\n          sheet.frozenColumnCount(newValue);\r\n          break;\r\n        case 'frozenRowCount':\r\n          sheet.frozenRowCount(newValue);\r\n          break;\r\n        case 'frozenTrailingRowCount':\r\n          sheet.frozenTrailingRowCount(newValue);\r\n          break;\r\n        case 'frozenTrailingColumnCount':\r\n          sheet.frozenTrailingColumnCount(newValue);\r\n          break;\r\n        case 'selectionPolicy':\r\n          sheet.selectionPolicy(newValue);\r\n          break;\r\n        case 'selectionUnit':\r\n          sheet.selectionUnit(newValue);\r\n          break;\r\n        case 'zoom':\r\n          sheet.zoom(newValue);\r\n          break;\r\n        case 'currentTheme':\r\n          sheet.currentTheme(newValue);\r\n          break;\r\n        case 'defaultStyle':\r\n          sheet.setDefaultStyle(newValue);\r\n          break;\r\n        case 'rowOutlineInfo':\r\n          newValue.forEach((item: any) => {\r\n            sheet.rowOutlines.group(item.index, item.count);\r\n          });\r\n          sheet.repaint();\r\n          break;\r\n        case 'columnOutlineInfo':\r\n          newValue.forEach((item: any) => {\r\n            sheet.columnOutlines.group(item.index, item.count);\r\n          });\r\n          sheet.repaint();\r\n          break;\r\n        case 'showRowOutline':\r\n          sheet.showRowOutline(newValue);\r\n          break;\r\n        case 'showColumnOutline':\r\n          sheet.showColumnOutline(newValue);\r\n          break;\r\n        case 'dataSource':\r\n          sheet.setDataSource(newValue);\r\n          break;\r\n        case 'autoGenerateColumns':\r\n          sheet[changeName] = newValue;\r\n        default:\r\n          (sheet.options as any)[changeName] = newValue;\r\n      }\r\n    }\r\n    sheet.resumeEvent();\r\n    sheet.resumePaint();\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    (this.columns as QueryList<ColumnComponent>).changes.subscribe(() => { this.onAttached(); });\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    const sheet = this.sheet;\r\n    const spread = sheet ? sheet.getParent() : null;\r\n    if (spread) {\r\n      const sheetIndex = spread.getSheetIndex(sheet.name());\r\n      if (sheetIndex !== void 0) {\r\n        spread.removeSheet(sheetIndex);\r\n      }\r\n    }\r\n  }\r\n}\r\n/*code_end*/\r\n","/*import_begin*/\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList, SimpleChanges,\r\n} from '@angular/core';\r\n/*import_end*/\r\n\r\nimport { WorksheetComponent } from './worksheet.component';\r\nimport * as GC from '@grapecity/spread-sheets';\r\n/*code_begin*/\r\n@Component({\r\n  selector: 'gc-spread-sheets',\r\n  template: `\r\n        <div [ngStyle]=\"style\" [ngClass]=\"hostClass\">\r\n            <ng-content></ng-content>\r\n        </div>\r\n    `,\r\n})\r\nexport class SpreadSheetsComponent implements OnChanges, AfterViewInit, OnDestroy {\r\n  private spread?: GC.Spread.Sheets.Workbook;\r\n  private spreadOptions?: any[];\r\n\r\n  public style = {\r\n    width: '800px',\r\n    height: '600px',\r\n  };\r\n\r\n  // indicate all options\r\n  @Input() public allowUserResize?: boolean;\r\n  @Input() public allowUserZoom?: boolean;\r\n  @Input() public allowUserEditFormula?: boolean;\r\n  @Input() public allowUserDragFill?: boolean;\r\n  @Input() public allowUserDragDrop?: boolean;\r\n  @Input() public allowUserDragMerge?: boolean;\r\n  @Input() public allowUndo?: boolean;\r\n  @Input() public allowSheetReorder?: boolean;\r\n  @Input() public allowContextMenu?: boolean;\r\n  @Input() public allowUserDeselect?: boolean;\r\n  @Input() public allowCopyPasteExcelStyle?: boolean;\r\n  @Input() public allowExtendPasteRange?: boolean;\r\n  @Input() public cutCopyIndicatorVisible?: boolean;\r\n  @Input() public cutCopyIndicatorBorderColor?: string;\r\n  @Input() public copyPasteHeaderOptions?: number;\r\n  @Input() public defaultDragFillType?: number;\r\n  @Input() public enableFormulaTextbox?: boolean;\r\n  @Input() public highlightInvalidData?: boolean;\r\n  @Input() public newTabVisible?: boolean;\r\n  @Input() public tabStripVisible?: boolean;\r\n  @Input() public tabEditable?: boolean;\r\n  @Input() public tabStripRatio?: number;\r\n  @Input() public tabNavigationVisible?: boolean;\r\n  @Input() public autoFitType?: number;\r\n  @Input() public referenceStyle?: number;\r\n  @Input() public backColor?: string;\r\n  @Input() public grayAreaBackColor?: string;\r\n  @Input() public resizeZeroIndicator?: number;\r\n  @Input() public showVerticalScrollbar?: boolean;\r\n  @Input() public showHorizontalScrollbar?: boolean;\r\n  @Input() public scrollbarMaxAlign?: boolean;\r\n  @Input() public scrollIgnoreHidden?: boolean;\r\n  @Input() public hostStyle?: any; // used for get styles form parent host DIV\r\n  @Input() public hostClass?: string;\r\n  @Input() public hideSelection?: boolean;\r\n  @Input() public name?: string;\r\n  @Input() public backgroundImage?: string;\r\n  @Input() public backgroundImageLayout?: number;\r\n  @Input() public showScrollTip?: number;\r\n  @Input() public showResizeTip?: number;\r\n  @Input() public showDragDropTip?: boolean;\r\n  @Input() public showDragFillTip?: boolean;\r\n  @Input() public showDragFillSmartTag?: boolean;\r\n  @Input() public scrollbarShowMax?: boolean;\r\n  @Input() public useTouchLayout?: boolean;\r\n\r\n  // outputs events\r\n  @Output() public workbookInitialized = new EventEmitter<any>();\r\n  @Output() public validationError = new EventEmitter<any>();\r\n  @Output() public cellClick = new EventEmitter<any>();\r\n  @Output() public cellDoubleClick = new EventEmitter<any>();\r\n  @Output() public enterCell = new EventEmitter<any>();\r\n  @Output() public leaveCell = new EventEmitter<any>();\r\n  @Output() public valueChanged = new EventEmitter<any>();\r\n  @Output() public topRowChanged = new EventEmitter<any>();\r\n  @Output() public leftColumnChanged = new EventEmitter<any>();\r\n  @Output() public invalidOperation = new EventEmitter<any>();\r\n  @Output() public rangeFiltering = new EventEmitter<any>();\r\n  @Output() public rangeFiltered = new EventEmitter<any>();\r\n  @Output() public tableFiltering = new EventEmitter<any>();\r\n  @Output() public tableFiltered = new EventEmitter<any>();\r\n  @Output() public rangeSorting = new EventEmitter<any>();\r\n  @Output() public rangeSorted = new EventEmitter<any>();\r\n  @Output() public clipboardChanging = new EventEmitter<any>();\r\n  @Output() public clipboardChanged = new EventEmitter<any>();\r\n  @Output() public clipboardPasting = new EventEmitter<any>();\r\n  @Output() public clipboardPasted = new EventEmitter<any>();\r\n  @Output() public columnWidthChanging = new EventEmitter<any>();\r\n  @Output() public columnWidthChanged = new EventEmitter<any>();\r\n  @Output() public rowHeightChanging = new EventEmitter<any>();\r\n  @Output() public rowHeightChanged = new EventEmitter<any>();\r\n  @Output() public dragDropBlock = new EventEmitter<any>();\r\n  @Output() public dragDropBlockCompleted = new EventEmitter<any>();\r\n  @Output() public dragFillBlock = new EventEmitter<any>();\r\n  @Output() public dragFillBlockCompleted = new EventEmitter<any>();\r\n  @Output() public editStarting = new EventEmitter<any>();\r\n  @Output() public editChange = new EventEmitter<any>();\r\n  @Output() public editEnding = new EventEmitter<any>();\r\n  @Output() public editEnd = new EventEmitter<any>();\r\n  @Output() public editEnded = new EventEmitter<any>();\r\n  @Output() public rangeGroupStateChanging = new EventEmitter<any>();\r\n  @Output() public rangeGroupStateChanged = new EventEmitter<any>();\r\n  @Output() public selectionChanging = new EventEmitter<any>();\r\n  @Output() public selectionChanged = new EventEmitter<any>();\r\n  @Output() public sheetTabClick = new EventEmitter<any>();\r\n  @Output() public sheetTabDoubleClick = new EventEmitter<any>();\r\n  @Output() public sheetNameChanging = new EventEmitter<any>();\r\n  @Output() public sheetNameChanged = new EventEmitter<any>();\r\n  @Output() public userZooming = new EventEmitter<any>();\r\n  @Output() public userFormulaEntered = new EventEmitter<any>();\r\n  @Output() public cellChanged = new EventEmitter<any>();\r\n  @Output() public columnChanged = new EventEmitter<any>();\r\n  @Output() public rowChanged = new EventEmitter<any>();\r\n  @Output() public activeSheetChanging = new EventEmitter<any>();\r\n  @Output() public activeSheetChanged = new EventEmitter<any>();\r\n  @Output() public sparklineChanged = new EventEmitter<any>();\r\n  @Output() public rangeChanged = new EventEmitter<any>();\r\n  @Output() public buttonClicked = new EventEmitter<any>();\r\n  @Output() public editorStatusChanged = new EventEmitter<any>();\r\n  @Output() public floatingObjectChanged = new EventEmitter<any>();\r\n  @Output() public floatingObjectSelectionChanged = new EventEmitter<any>();\r\n  @Output() public pictureChanged = new EventEmitter<any>();\r\n  @Output() public floatingObjectRemoving = new EventEmitter<any>();\r\n  @Output() public floatingObjectRemoved = new EventEmitter<any>();\r\n  @Output() public pictureSelectionChanged = new EventEmitter<any>();\r\n  @Output() public floatingObjectLoaded = new EventEmitter<any>();\r\n  @Output() public touchToolStripOpening = new EventEmitter<any>();\r\n  @Output() public commentChanged = new EventEmitter<any>();\r\n  @Output() public commentRemoving = new EventEmitter<any>();\r\n  @Output() public commentRemoved = new EventEmitter<any>();\r\n  @Output() public slicerChanged = new EventEmitter<any>();\r\n\r\n  @ContentChildren(WorksheetComponent)\r\n  public sheets?: QueryList<WorksheetComponent>;\r\n\r\n  constructor(private elRef: ElementRef) {\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    const elRef = this.elRef;\r\n    const dom = elRef.nativeElement as HTMLElement;\r\n    const hostElement = dom.querySelector('div');\r\n    this.spread = new GC.Spread.Sheets.Workbook(hostElement, { sheetCount: 0 });\r\n    this.setSpreadOptions();\r\n    this.initSheets();\r\n    (this.sheets as QueryList<WorksheetComponent>).changes.subscribe((changes) => {\r\n      this.onSheetsChanged(changes);\r\n    }); // may change sheets using bingidng.\r\n    this.bindCustomEvent(this.spread);\r\n    this.workbookInitialized.emit({ spread: this.spread });\r\n  }\r\n\r\n  private onSheetsChanged(sheetComponents: QueryList<WorksheetComponent>) {\r\n    const spread = (this.spread as GC.Spread.Sheets.Workbook);\r\n    spread.suspendPaint();\r\n    if (sheetComponents) {\r\n      sheetComponents.forEach((sheetComponent: WorksheetComponent, index: number) => {\r\n        const sheet = sheetComponent.getSheet();\r\n        if (sheet && !sheet.getParent()) {\r\n          spread.addSheet(index, sheetComponent.getSheet());\r\n          sheetComponent.onAttached();\r\n        }\r\n      });\r\n    }\r\n    spread.resumePaint();\r\n  }\r\n\r\n  private initSheets() {\r\n    const sheets = this.sheets as QueryList<WorksheetComponent>;\r\n    const spread = this.spread as GC.Spread.Sheets.Workbook;\r\n    spread.clearSheets();\r\n    sheets.forEach((sheetComponent, index) => {\r\n      spread.addSheet(index, sheetComponent.getSheet());\r\n      sheetComponent.onAttached();\r\n    });\r\n    // when there is no sheet, add default sheet to spread\r\n    if (sheets.length === 0) {\r\n      spread.addSheet(0, new GC.Spread.Sheets.Worksheet(''));\r\n    }\r\n  }\r\n\r\n  private bindCustomEvent(spread: GC.Spread.Sheets.Workbook) {\r\n    const customEventNameSpace = '.ng';\r\n    const events = ['ValidationError', 'CellClick', 'CellDoubleClick', 'EnterCell',\r\n      'LeaveCell', 'ValueChanged', 'TopRowChanged', 'LeftColumnChanged',\r\n      'InvalidOperation', 'RangeFiltering', 'RangeFiltered', 'TableFiltering',\r\n      'TableFiltered', 'RangeSorting', 'RangeSorted', 'ClipboardChanging',\r\n      'ClipboardChanged', 'ClipboardPasting', 'ClipboardPasted', 'ColumnWidthChanging',\r\n      'ColumnWidthChanged', 'RowHeightChanging', 'RowHeightChanged', 'DragDropBlock',\r\n      'DragDropBlockCompleted', 'DragFillBlock', 'DragFillBlockCompleted', 'EditStarting',\r\n      'EditChange', 'EditEnding', 'EditEnd', 'EditEnded', 'RangeGroupStateChanging',\r\n      'RangeGroupStateChanged', 'SelectionChanging', 'SelectionChanged', 'SheetTabClick',\r\n      'SheetTabDoubleClick', 'SheetNameChanging', 'SheetNameChanged',\r\n      'UserZooming', 'UserFormulaEntered', 'CellChanged', 'ColumnChanged',\r\n      'RowChanged', 'ActiveSheetChanging', 'ActiveSheetChanged',\r\n      'SparklineChanged',\r\n      'RangeChanged', 'ButtonClicked', 'EditorStatusChanged',\r\n      'FloatingObjectChanged', 'FloatingObjectSelectionChanged', 'PictureChanged',\r\n      'FloatingObjectRemoving', 'FloatingObjectRemoved', 'PictureSelectionChanged',\r\n      'FloatingObjectLoaded', 'TouchToolStripOpening', 'CommentChanged', 'CommentRemoving', 'CommentRemoved', 'SlicerChanged'];\r\n    events.forEach((event) => {\r\n      spread.bind(event + customEventNameSpace, (event: any, data: any) => {\r\n        const eventType = event.type;\r\n        const camelCaseEvent = eventType[0].toLowerCase() + eventType.substr(1);\r\n        (this as any)[camelCaseEvent].emit(data);\r\n      });\r\n    });\r\n  }\r\n\r\n  public setSpreadOptions() {\r\n    const spread = this.spread as GC.Spread.Sheets.Workbook;\r\n    if (!this.spread) {\r\n      return;\r\n    }\r\n    spread.suspendEvent();\r\n    spread.suspendPaint();\r\n    const options = this.spreadOptions;\r\n    options && options.forEach((option) => {\r\n      if (option.name === 'name') {\r\n        spread.name = option.value;\r\n      } else {\r\n        (spread.options as any)[option.name] = option.value;\r\n      }\r\n    });\r\n    spread.resumePaint();\r\n    spread.resumeEvent();\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    const options = [];\r\n    for (const changeName in changes) {\r\n      const newValue = changes[changeName].currentValue;\r\n      if (newValue !== null && newValue !== void 0) {\r\n        switch (changeName) {\r\n          case 'hostStyle':\r\n            this.style = newValue;\r\n            break;\r\n          case 'hostClass':\r\n            break;\r\n          default:\r\n            options.push({ name: changeName, value: newValue });\r\n        }\r\n      }\r\n    }\r\n    this.spreadOptions = options;\r\n    this.setSpreadOptions();\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    (this.spread as GC.Spread.Sheets.Workbook).destroy();\r\n  }\r\n}\r\n/*code_end*/\r\n","/*import_begin*/\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ColumnComponent } from './column.component';\r\n/*import_end*/\r\nimport { SpreadSheetsComponent } from './spreadSheets.component';\r\nimport { WorksheetComponent } from './worksheet.component';\r\n\r\n/*code_begin*/\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [SpreadSheetsComponent, WorksheetComponent, ColumnComponent],\r\n  exports: [SpreadSheetsComponent, WorksheetComponent, ColumnComponent],\r\n})\r\nexport class SpreadSheetsModule {\r\n}\r\n/*code_end*/\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {ColumnComponent as ɵc} from './src/column.component';\nexport {SpreadSheetsComponent as ɵa} from './src/spreadSheets.component';\nexport {WorksheetComponent as ɵb} from './src/worksheet.component';"],"names":["GC.Spread"],"mappings":"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"}