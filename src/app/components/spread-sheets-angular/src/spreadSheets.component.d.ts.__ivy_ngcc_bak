import { AfterViewInit, ElementRef, EventEmitter, OnChanges, OnDestroy, QueryList, SimpleChanges } from '@angular/core';
import { WorksheetComponent } from './worksheet.component';
export declare class SpreadSheetsComponent implements OnChanges, AfterViewInit, OnDestroy {
    private elRef;
    private spread?;
    private spreadOptions?;
    style: {
        width: string;
        height: string;
    };
    allowUserResize?: boolean;
    allowUserZoom?: boolean;
    allowUserEditFormula?: boolean;
    allowUserDragFill?: boolean;
    allowUserDragDrop?: boolean;
    allowUserDragMerge?: boolean;
    allowUndo?: boolean;
    allowSheetReorder?: boolean;
    allowContextMenu?: boolean;
    allowUserDeselect?: boolean;
    allowCopyPasteExcelStyle?: boolean;
    allowExtendPasteRange?: boolean;
    cutCopyIndicatorVisible?: boolean;
    cutCopyIndicatorBorderColor?: string;
    copyPasteHeaderOptions?: number;
    defaultDragFillType?: number;
    enableFormulaTextbox?: boolean;
    highlightInvalidData?: boolean;
    newTabVisible?: boolean;
    tabStripVisible?: boolean;
    tabEditable?: boolean;
    tabStripRatio?: number;
    tabNavigationVisible?: boolean;
    autoFitType?: number;
    referenceStyle?: number;
    backColor?: string;
    grayAreaBackColor?: string;
    resizeZeroIndicator?: number;
    showVerticalScrollbar?: boolean;
    showHorizontalScrollbar?: boolean;
    scrollbarMaxAlign?: boolean;
    scrollIgnoreHidden?: boolean;
    hostStyle?: any;
    hostClass?: string;
    hideSelection?: boolean;
    name?: string;
    backgroundImage?: string;
    backgroundImageLayout?: number;
    showScrollTip?: number;
    showResizeTip?: number;
    showDragDropTip?: boolean;
    showDragFillTip?: boolean;
    showDragFillSmartTag?: boolean;
    scrollbarShowMax?: boolean;
    useTouchLayout?: boolean;
    workbookInitialized: EventEmitter<any>;
    validationError: EventEmitter<any>;
    cellClick: EventEmitter<any>;
    cellDoubleClick: EventEmitter<any>;
    enterCell: EventEmitter<any>;
    leaveCell: EventEmitter<any>;
    valueChanged: EventEmitter<any>;
    topRowChanged: EventEmitter<any>;
    leftColumnChanged: EventEmitter<any>;
    invalidOperation: EventEmitter<any>;
    rangeFiltering: EventEmitter<any>;
    rangeFiltered: EventEmitter<any>;
    tableFiltering: EventEmitter<any>;
    tableFiltered: EventEmitter<any>;
    rangeSorting: EventEmitter<any>;
    rangeSorted: EventEmitter<any>;
    clipboardChanging: EventEmitter<any>;
    clipboardChanged: EventEmitter<any>;
    clipboardPasting: EventEmitter<any>;
    clipboardPasted: EventEmitter<any>;
    columnWidthChanging: EventEmitter<any>;
    columnWidthChanged: EventEmitter<any>;
    rowHeightChanging: EventEmitter<any>;
    rowHeightChanged: EventEmitter<any>;
    dragDropBlock: EventEmitter<any>;
    dragDropBlockCompleted: EventEmitter<any>;
    dragFillBlock: EventEmitter<any>;
    dragFillBlockCompleted: EventEmitter<any>;
    editStarting: EventEmitter<any>;
    editChange: EventEmitter<any>;
    editEnding: EventEmitter<any>;
    editEnd: EventEmitter<any>;
    editEnded: EventEmitter<any>;
    rangeGroupStateChanging: EventEmitter<any>;
    rangeGroupStateChanged: EventEmitter<any>;
    selectionChanging: EventEmitter<any>;
    selectionChanged: EventEmitter<any>;
    sheetTabClick: EventEmitter<any>;
    sheetTabDoubleClick: EventEmitter<any>;
    sheetNameChanging: EventEmitter<any>;
    sheetNameChanged: EventEmitter<any>;
    userZooming: EventEmitter<any>;
    userFormulaEntered: EventEmitter<any>;
    cellChanged: EventEmitter<any>;
    columnChanged: EventEmitter<any>;
    rowChanged: EventEmitter<any>;
    activeSheetChanging: EventEmitter<any>;
    activeSheetChanged: EventEmitter<any>;
    sparklineChanged: EventEmitter<any>;
    rangeChanged: EventEmitter<any>;
    buttonClicked: EventEmitter<any>;
    editorStatusChanged: EventEmitter<any>;
    floatingObjectChanged: EventEmitter<any>;
    floatingObjectSelectionChanged: EventEmitter<any>;
    pictureChanged: EventEmitter<any>;
    floatingObjectRemoving: EventEmitter<any>;
    floatingObjectRemoved: EventEmitter<any>;
    pictureSelectionChanged: EventEmitter<any>;
    floatingObjectLoaded: EventEmitter<any>;
    touchToolStripOpening: EventEmitter<any>;
    commentChanged: EventEmitter<any>;
    commentRemoving: EventEmitter<any>;
    commentRemoved: EventEmitter<any>;
    slicerChanged: EventEmitter<any>;
    sheets?: QueryList<WorksheetComponent>;
    constructor(elRef: ElementRef);
    ngAfterViewInit(): void;
    private onSheetsChanged;
    private initSheets;
    private bindCustomEvent;
    setSpreadOptions(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
}
