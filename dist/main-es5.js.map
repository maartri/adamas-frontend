{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/action/action.component.ts","webpack:///src/app/components/action/action.component.html","webpack:///src/app/components/add-referral/add-referral.component.ts","webpack:///src/app/components/add-referral/add-referral.component.html","webpack:///src/app/components/breadcrumbs/breadcrumbs.component.ts","webpack:///src/app/components/breadcrumbs/breadcrumbs.component.html","webpack:///src/app/components/calendar/calendar.component.ts","webpack:///src/app/components/calendar/calendar.component.html","webpack:///src/app/components/component.module.ts","webpack:///src/app/components/contacts-details/contacts-details.component.ts","webpack:///src/app/components/contacts-details/contacts-details.component.html","webpack:///src/app/components/dm-calendar/dm-calendar.component.ts","webpack:///src/app/components/dm-calendar/dm-calendar.component.html","webpack:///src/app/components/header-nav/header-nav.component.ts","webpack:///src/app/components/header-nav/header-nav.component.html","webpack:///src/app/components/image-cropper/image-cropper.component.ts","webpack:///src/app/components/image-cropper/image-cropper.component.html","webpack:///src/app/components/index.ts","webpack:///src/app/components/interval-design/interval-design.component.ts","webpack:///src/app/components/interval-design/interval-design.component.html","webpack:///src/app/components/media/media.component.ts","webpack:///src/app/components/media/media.component.html","webpack:///src/app/components/phonefax/phonefax.component.ts","webpack:///src/app/components/phonefax/phonefax.component.html","webpack:///src/app/components/profile-page.ts","webpack:///src/app/components/profile-page.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/recipient-popup/recipient-popup.component.ts","webpack:///src/app/components/recipient-popup/recipient-popup.component.html","webpack:///src/app/components/refer-in/refer-in.component.ts","webpack:///src/app/components/refer-in/refer-in.component.html","webpack:///src/app/components/search-list/search-list.component.ts","webpack:///src/app/components/search-list/search-list.component.html","webpack:///src/app/components/search-timesheet/search-timesheet.component.ts","webpack:///src/app/components/search-timesheet/search-timesheet.component.html","webpack:///src/app/components/staff-popup/staff-popup.component.ts","webpack:///src/app/components/staff-popup/staff-popup.component.html","webpack:///src/app/components/suburb.ts","webpack:///src/app/components/suburb.html","webpack:///src/app/components/upload-file/upload-file.component.ts","webpack:///src/app/components/upload-file/upload-file.component.html","webpack:///src/app/directives/click-outside.directive.ts","webpack:///src/app/directives/index.ts","webpack:///src/app/directives/numeric.directive.ts","webpack:///src/app/icons-provider.module.ts","webpack:///src/app/pages/admin/attendance.ts","webpack:///src/app/pages/admin/attendance.html","webpack:///src/app/pages/admin/daymanager.ts","webpack:///src/app/pages/admin/daymanager.html","webpack:///src/app/pages/admin/home.ts","webpack:///src/app/pages/admin/home.html","webpack:///src/app/pages/admin/homev2.ts","webpack:///src/app/pages/admin/homev2.html","webpack:///src/app/pages/admin/index.ts","webpack:///src/app/pages/admin/landing.ts","webpack:///src/app/pages/admin/landing.html","webpack:///src/app/pages/admin/recipient-views/casenote.ts","webpack:///src/app/pages/admin/recipient-views/casenote.html","webpack:///src/app/pages/admin/recipient-views/contacts.ts","webpack:///src/app/pages/admin/recipient-views/contacts.html","webpack:///src/app/pages/admin/recipient-views/history.ts","webpack:///src/app/pages/admin/recipient-views/history.html","webpack:///src/app/pages/admin/recipient-views/incident.ts","webpack:///src/app/pages/admin/recipient-views/incident.html","webpack:///src/app/pages/admin/recipient-views/index.ts","webpack:///src/app/pages/admin/recipient-views/intake-views/alerts.ts","webpack:///src/app/pages/admin/recipient-views/intake-views/alerts.html","webpack:///src/app/pages/admin/recipient-views/intake-views/branches.ts","webpack:///src/app/pages/admin/recipient-views/intake-views/branches.html","webpack:///src/app/pages/admin/recipient-views/intake-views/consents.ts","webpack:///src/app/pages/admin/recipient-views/intake-views/consents.html","webpack:///src/app/pages/admin/recipient-views/intake-views/funding.ts","webpack:///src/app/pages/admin/recipient-views/intake-views/funding.html","webpack:///src/app/pages/admin/recipient-views/intake-views/goals.ts","webpack:///src/app/pages/admin/recipient-views/intake-views/goals.html","webpack:///src/app/pages/admin/recipient-views/intake-views/groups.ts","webpack:///src/app/pages/admin/recipient-views/intake-views/groups.html","webpack:///src/app/pages/admin/recipient-views/intake-views/index.ts","webpack:///src/app/pages/admin/recipient-views/intake-views/plans.ts","webpack:///src/app/pages/admin/recipient-views/intake-views/plans.html","webpack:///src/app/pages/admin/recipient-views/intake-views/services.ts","webpack:///src/app/pages/admin/recipient-views/intake-views/services.html","webpack:///src/app/pages/admin/recipient-views/intake-views/staff.ts","webpack:///src/app/pages/admin/recipient-views/intake-views/staff.html","webpack:///src/app/pages/admin/recipient-views/intake.ts","webpack:///src/app/pages/admin/recipient-views/intake.html","webpack:///src/app/pages/admin/recipient-views/opnote.ts","webpack:///src/app/pages/admin/recipient-views/opnote.html","webpack:///src/app/pages/admin/recipient-views/pension.ts","webpack:///src/app/pages/admin/recipient-views/pension.html","webpack:///src/app/pages/admin/recipient-views/perm-roster.ts","webpack:///src/app/pages/admin/recipient-views/perm-roster.html","webpack:///src/app/pages/admin/recipient-views/personal.ts","webpack:///src/app/pages/admin/recipient-views/personal.html","webpack:///src/app/pages/admin/recipient-views/quotes.ts","webpack:///src/app/pages/admin/recipient-views/quotes.html","webpack:///src/app/pages/admin/recipient-views/reminders.ts","webpack:///src/app/pages/admin/recipient-views/reminders.html","webpack:///src/app/pages/admin/recipients.ts","webpack:///src/app/pages/admin/recipients.html","webpack:///src/app/pages/admin/reports.ts","webpack:///src/app/pages/admin/reports.html","webpack:///src/app/pages/admin/rosters.ts","webpack:///src/app/pages/admin/rosters.html","webpack:///src/app/pages/admin/sessions.ts","webpack:///src/app/pages/admin/sessions.html","webpack:///src/app/pages/admin/side-main-menu.ts","webpack:///src/app/pages/admin/side-main-menu.html","webpack:///src/app/pages/admin/staff-views/attendance.ts","webpack:///src/app/pages/admin/staff-views/attendance.html","webpack:///src/app/pages/admin/staff-views/competencies.ts","webpack:///src/app/pages/admin/staff-views/competencies.html","webpack:///src/app/pages/admin/staff-views/contact.ts","webpack:///src/app/pages/admin/staff-views/contact.html","webpack:///src/app/pages/admin/staff-views/document.ts","webpack:///src/app/pages/admin/staff-views/document.html","webpack:///src/app/pages/admin/staff-views/groupings.ts","webpack:///src/app/pages/admin/staff-views/groupings.html","webpack:///src/app/pages/admin/staff-views/hrnote.ts","webpack:///src/app/pages/admin/staff-views/hrnote.html","webpack:///src/app/pages/admin/staff-views/incident.ts","webpack:///src/app/pages/admin/staff-views/incident.html","webpack:///src/app/pages/admin/staff-views/index.ts","webpack:///src/app/pages/admin/staff-views/leave.ts","webpack:///src/app/pages/admin/staff-views/leave.html","webpack:///src/app/pages/admin/staff-views/opnote.ts","webpack:///src/app/pages/admin/staff-views/opnote.html","webpack:///src/app/pages/admin/staff-views/pay.ts","webpack:///src/app/pages/admin/staff-views/pay.html","webpack:///src/app/pages/admin/staff-views/personal.ts","webpack:///src/app/pages/admin/staff-views/personal.html","webpack:///src/app/pages/admin/staff-views/position.ts","webpack:///src/app/pages/admin/staff-views/position.html","webpack:///src/app/pages/admin/staff-views/reminder.ts","webpack:///src/app/pages/admin/staff-views/reminder.html","webpack:///src/app/pages/admin/staff-views/training.ts","webpack:///src/app/pages/admin/staff-views/training.html","webpack:///src/app/pages/admin/staff.ts","webpack:///src/app/pages/admin/staff.html","webpack:///src/app/pages/admin/timesheet.ts","webpack:///src/app/pages/admin/timesheet.html","webpack:///src/app/pages/client/booking.ts","webpack:///src/app/pages/client/booking.html","webpack:///src/app/pages/client/calendar.ts","webpack:///src/app/pages/client/calendar.html","webpack:///src/app/pages/client/document.ts","webpack:///src/app/pages/client/document.html","webpack:///src/app/pages/client/history.ts","webpack:///src/app/pages/client/history.html","webpack:///src/app/pages/client/home.ts","webpack:///src/app/pages/client/home.html","webpack:///src/app/pages/client/index.ts","webpack:///src/app/pages/client/notes.ts","webpack:///src/app/pages/client/notes.html","webpack:///src/app/pages/client/package.ts","webpack:///src/app/pages/client/package.html","webpack:///src/app/pages/client/preferences.ts","webpack:///src/app/pages/client/preferences.html","webpack:///src/app/pages/client/profile.ts","webpack:///src/app/pages/client/profile.html","webpack:///src/app/pages/client/shift.ts","webpack:///src/app/pages/client/shift.html","webpack:///src/app/pages/extra/extra.ts","webpack:///src/app/pages/extra/extra.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/provider/calendar.ts","webpack:///src/app/pages/provider/calendar.html","webpack:///src/app/pages/provider/document.ts","webpack:///src/app/pages/provider/document.html","webpack:///src/app/pages/provider/history.ts","webpack:///src/app/pages/provider/history.html","webpack:///src/app/pages/provider/home.ts","webpack:///src/app/pages/provider/home.html","webpack:///src/app/pages/provider/index.ts","webpack:///src/app/pages/provider/leave.ts","webpack:///src/app/pages/provider/leave.html","webpack:///src/app/pages/provider/package.ts","webpack:///src/app/pages/provider/package.html","webpack:///src/app/pages/provider/profile.ts","webpack:///src/app/pages/provider/profile.html","webpack:///src/app/pipes/pipes.ts","webpack:///src/app/services/auth.candeactivateguard.ts","webpack:///src/app/services/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/cache.service.ts","webpack:///src/app/services/client.service.ts","webpack:///src/app/services/email.service.ts","webpack:///src/app/services/executable.service.ts","webpack:///src/app/services/global.service.ts","webpack:///src/app/services/index.ts","webpack:///src/app/services/job.service.ts","webpack:///src/app/services/landing.service.ts","webpack:///src/app/services/list.service.ts","webpack:///src/app/services/login.guard.ts","webpack:///src/app/services/login.service.ts","webpack:///src/app/services/member.service.ts","webpack:///src/app/services/report.service.ts","webpack:///src/app/services/script.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/services/share.service.ts","webpack:///src/app/services/staff.service.ts","webpack:///src/app/services/timesheet.service.ts","webpack:///src/app/services/upload.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","routes","path","component","children","redirectTo","pathMatch","canActivate","canActivateChild","canDeactivate","AppRoutingModule","forRoot","imports","PAGE_COMPONENTS","AppComponent","isCollapsed","selector","templateUrl","styleUrls","tokenGetter","localStorage","getItem","registerPlugins","AppModule","provide","useValue","useClass","Window","window","timeOut","positionClass","preventDuplicates","autoDismiss","maxOpened","config","whitelistedDomains","useFactory","withComponents","declarations","providers","schemas","bootstrap","ActionComponent","formBuilder","globalS","timeS","visible","notesIsOpen","claimVariationOpen","travelClaimOpen","rosterNoteOpen","recordIncidentOpen","isConfirmLoading","token","decode","buildForm","optionForm","group","notes","index","whatNote","value","iParameters","RecipientCode","data","recipient","OperatorID","nameid","Note","NoteType","addclientnote","subscribe","sToast","handleCancel","AddReferralComponent","clientS","listS","verifyAccount","open","type","openRefer","genderArr","typesArr","titlesArr","addressType","contactType","current","dateFormat","clearFormArray","formArray","length","removeAt","resetGroup","pipe","referralGroup","valid","generatedAccount","generateAccount","isAccountNoUnique","next","accountTaken","patchValue","accountNo","changes","property","firstChange","currentValue","gender","dob","required","title","lastname","firstname","middlename","tempaccountName","appendName","organisation","addresses","createAddress","contacts","createContact","branch","agencyDefinedGroup","recipientCoordinator","referral","confirmation","populateDropdowns","get","valueChanges","x","processOutput","appendAccount","toUpperCase","disable","enable","isStrIncluded","obj","errorStr","loading","event","key","match","isEmpty","fname","trim","lname","birthdate","format","_account","tName","aName","getcontacttype","transform","description","getaddresstype","getlistbranches","branches","getmanagers","managers","getserviceregion","agencies","controls","setValue","manager","filterContacts","filterAddress","console","log","emit","address","contact","view","arr","filteredResults","filter","contacttype","a","contactsFormArray","push","address1","suburb","addressForm","i","isNameDataValidated","account","fg","acceptOnlyLetters","reset","BreadcrumbsComponent","router","activatedRoute","breadcrumbs","isAdmin","events","removeHomeRoutes","createBreadCrumb","root","role","finalRoutes","removeIndexes","route","url","label","parseInt","splice","forEach","replace","c","child","routeURL","snapshot","join","admin","navigate","client","provider","toHome","$event","currDateMoment","Date","colors","red","primary","secondary","blue","yellow","CalendarComponent","staffS","unsubscribe$","Month","CalendarView","viewDate","timeArray","dayLimit","isVisible","toggleAdminFees","roles","loadDate","refresh","activeDayIsOpen","user","getmobilefuturelimit","dateChanged","search","complete","date","newStart","newEnd","start","end","handleEvent","action","modalData","rosterData","status","recordNo","color","draggable","resizable","beforeStart","afterEnd","eventToDelete","datalist","isToggleAdmin","initialLoad","totalColors","sTime","shift_Start","eTime","shift_End","serviceType","carerCode","designateColor","clientCode","service","carer","startTime","endTime","billUnit","billRate","_status","_type","startDate","endDate","getroster","RosterType","AccountNo","StartDate","EndDate","temporaryEvents","filterDate","err","days","minuteInterval","hourSegments","toggle","num","setTimeout","closeOpenMonthViewDay","setView","changeDetection","OnPush","styles","static","ComponentModule","noop","ContactsDetailsComponent","cd","http","unsubscribe","onTouchedCallback","onChangeCallback","kinsArray","contactGroups","modalOpen","postLoading","kindetailsGroup","listOrder","name","email","address2","suburbcode","postcode","phone1","phone2","mobile","fax","oni1","oni2","ecode","creator","recordNumber","inputForm","staff","getcontactskinstaff","selected","showDetails","markForCheck","detectChanges","kin","getcontactskinstaffdetails","contactName","state","equipmentCode","innerValue","searchKin","fn","sub","getPostCodeAndSuburb","pcode","details","updatecontactskinstaffdetails","rs","test","split","dirty","postcontactskinstaffdetails","deletecontactskin","multi","useExisting","showDetail","stopPropagation","DmCalendarComponent","elem","ngZone","renderer","document","someChange","toBeSelected","isClicked","fixedHeader","optionIsClicked","copyPaste","showOptions","highlighted","paste","daymanager","akonani","detach","paramsSubscription$","dayView","indexOf","calculateDays","removeEventListener","documentMouseUp","nativeElement","elemMouseUp","reattach","runOutsideAngular","deselect","addEventListener","isFirstChange","highLightCopyWrappers","alertChange","show","rosterContainers","getElementsByClassName","roster","addClass","removeClass","rostersThatDay","len","carercode","diary","showOptionEvent","isSelected","isValid","subtract","add","button","target","classList","contains","getAttribute","element","sDate","eDate","getdaymanager","activity","Activity","temp","tempArr","dataTransfer","getData","appendChild","getElementById","draggedObject","Staff","sample","setAttribute","setData","preventDefault","coordinates","clientX","clientY","math","Math","round","sqrt","pow","previousDate","futureDate","Document","HeaderNavComponent","loginS","logout","uniqueID","onClickOutside","ImageCropperComponent","imgBLOB","imageDestination","image","initCropper","cropper","zoomable","scalable","autoCrop","background","autoCropArea","minContainerWidth","minContainerHeight","aspectRatio","viewMode","cropBoxMovable","cropBoxResizable","ready","cropImage","cropstart","crop","cropend","cnvs","getCroppedCanvas","imageSmoothingQuality","imageSmoothingEnabled","fillColor","canvas","toBlob","blob","formData","FormData","append","sourceCanvas","createElement","context","getContext","width","height","drawImage","globalCompositeOperation","beginPath","arc","min","PI","fill","file","load","FileReader","destroy","fr","onloadend","src","result","readAsDataURL","errorUrl","IntervalDesignComponent","createMultipleWeekFormats","quoteDetailsGroup","timeSlots","noOfLoop","addTimeSlot","slot","createTimeSlot","monday","time","quantity","trunc","tuesday","wednesday","thursday","friday","saturday","sunday","loopRoster","noOfLoops","MediaComponent","uploadS","sanitizer","getMedia","videoplayer","play","personID","files","mediaList","clientGroup","fileBlob","item","media","mediaDisplay","mediaText","program","inputChange$","PhonefaxComponent","isMobile","error","contactNo","isMobileType","firstFourNo","lastFourNo","writeValue","validateNumber","select","clearAll","areaCode","whatInput","_firstFourNo","focus","_lastFourNo","includes","isNaN","slice","changeEvent","PROFILEPAGE_VALUE_ACCESSOR","ProfilePage","nzMessageService","editModalOpen","contactsArray","addressArray","years","months","casemanagers","subscriptionArray","editProfileDrawer","addAddressDrawer","addContactDrawer","titles","buildForms","POPULATE_DATE_DROPDOWNS","contactForm","personId","pcodesuburb","userForm","surnameOrg","preferredName","firstName","middleNames","year","month","day","file1","file2","subCategory","serviceRegion","casemanager","caldStatus","indigStatus","primaryDisability","note","jobCategory","adminCategory","team","gridNo","dLicense","mvReg","nReg","isEmail","isRosterable","isCaseLoad","stf_Department","rating","searchOf","filterYear","dateOfBirth","filterMonth","filterDay","recipient_Coordinator","agencyIdReportingCode","urNumber","ubdMap","lastName","pan_Manager","category","staffGroup","staffTeam","dLicence","vRegistration","nRegistration","cstda_Indiginous","cstda_DisabilityGroup","contactIssues","emailTimesheet","caseManager","getprofile","patchTheseValuesInForm","getUserData","casestaff","getaddress","getcontacts","getcasestaff","v","deleteaddress","RecordNumber","PersonID","success","pathForm","deletecontact","pf","Type","Detail","na","Suburb","PostCode","Stat","Description","Address1","formatDate","updateusername","processSubscriptions","closeDrawer","updateuseraddress","formatAddress","updateusercontact","formatContact","POPULATE_ADDRESS","POPULATE_CONTACTS","markAsDirty","updateValueAndValidity","addcontact","addaddress","postCode","stat","detail","getlistcasemanagers","editProfileOpen","addAddressOpen","addContactOpen","editProfile","addAddress","addContact","ProfileComponent","message","settings","ds","showUpload","profileStaffModal","profileStaffOptionsModal","profileStaffPreferredModal","tabIndex","profileRecipientOptionsModal","changeProfilePictureModal","caldStatuses","showMailManagerBtn","emailManagerOpen","emailManagerNoEmailShowNotif","loadPhoto","_settings","POPULATE_OTHER_DROPDOWNS","contactIssueGroup","resetEmailCoordinator","emailCoordinatorGroup","subject","content","caseManagerDetails","find","addressBuilder","contactBuilder","getimages","directory","filePhoto","showAvatar","defaultURL","imgSrc","bypassSecurityTrustUrl","specialConsiderations","ratingStr","updatedisabilitystatus","convertRatingToString","setErrors","wToast","getliststaffgroup","getliststaffadmin","getliststaffteam","getlistdisabilities","getlistindigstatus","dropDowns","branchesArr","jobCategoryArr","adminCategoryArr","teamArr","managerArr","serviceRegionArr","disabilitiesArr","indigenousArr","emailData","Subject","Content","RecipientName","CCAddresses","FromAddresses","ToAddresses","Name","Address","nzDuration","onClose","messageFinal","messageId","postemailcoordinator","remove","sqlId","updatealertsissues","issueType","markAsPristine","fileLen","imgBlobData","uploadProfilePicture","RecipientPopupComponent","destroy$","searchText","recipientSearchList","counterRecipient","isDataLoaded","selectedValue","pageIndex","selectList","getrecipientsearch","RowNo","GETLIST","_","currentPage","selectedUser","ngModelChange","nzOnSearch","openModal","nzPageIndexChange","ReferInComponent","handleOk","SearchListComponent","lists","sysmgr","searchRecipient","searchStaff","initLoad","getstaff","User","SearchString","accountName","getrecipients","searchModel","change","SearchTimesheetComponent","getfilteredstaff","IncludeActive","Status","getfiltteredrecipient","sel","option","switch","StaffPopupComponent","getqualifiedstaff","BookDate","StartTime","EndTime","EndLimit","Gender","Competencys","CompetenciesCount","original","age","km","ratingNo","selectedStaff","SuburbComponent","placeholder","searchStream","searchResult$","finalSuburb","getsuburb","Postcode","SuburbName","_subscription$","isLoading","loadComponent","_value","UPLOADFILE_VALUE_ACCESSOR","UploadFileComponent","msg","acceptedTypes","defaultFileList","fileList2","loadedFiles","loadDocument","customReq","reportProgress","withCredentials","request","UploadProgress","total","percent","loaded","onProgress","onSuccess","body","onError","fileList","loadFiles","getFileDocuments","docID","filename","deleteFileDocuments","originalLocation","downloadFileDocuments","Extension","FileName","DocPath","URL","createObjectURL","link","href","download","click","revokeObjectURL","urlPath","handleChange","ClickOutsideDirective","_elRef","listening","clickOutside","subscription","onGlobalClick","MouseEvent","isDescendant","parent","node","parentNode","NumberDirective","el","keyCode","ctrlKey","metaKey","shiftKey","icons","IconsProviderModule","AttendanceAdmin","DayManagerAdmin","dayViewArr","reload","pasted","HomeAdmin","HomeV2Admin","ISTAFF_BYPASS","LandingAdmin","RecipientCasenoteAdmin","sharedS","modalService","checked","isDisabled","alist","blist","clist","mlist","recipientStrArr","getPicked","changeEmitted$","isCurrentRoute","getNotes","getSelect","getcasenotes","list","IsRTF2TextRequired","detailOriginal","tableData","autoLogout","emailMessage","excludeShiftAlerts","inAppMessage","logDisplay","pin","rosterPublish","shiftChange","smsMessage","caseFormGroup","publishToApp","restrictions","restrictionsStr","alarmDate","whocode","discipline","careDomain","acceptOnlyNumeric","confirm","nzTitle","nzContent","nzOkText","nzOnOk","save","nzCancelText","nzOnCancel","getmanagerop","getdisciplineop","getcaredomainop","getprogramop","IsFormValid","cleanDate","VALIDATE_AND_FIX_DATETIMEZONE_ANOMALY","listStringify","postcasenotes","tempStr","array","showAddModal","RecipientContactsAdmin","RecipientHistoryAdmin","gethistory","RecipientIncidentAdmin","getincidents","updatetimeandattendance","AutoLogout","EmailMessage","ExcludeShiftAlerts","InAppMessage","LogDisplay","Pin","RosterPublish","ShiftChange","SmsMessage","Id","IntakeAlerts","gethealthalerts","getrosteralerts","getspecificcompetencies","alertGroup","safetyAlert","rosterAlert","competencies","addOREdit","IntakeBranches","default","getbranches","listDropDown","getintakebranches","postbranches","updatebranches","deletebranches","IntakeConsents","IntakeFunding","getfunding","IntakeGoals","getgoals","goals","IntakeGroups","getgrouptypes","getgrouppreferences","groupTypes","groupPreferences","IntakePlans","getplans","plans","IntakeServices","getintakeservices","IntakeStaff","excludedStaff","includedStaff","getexcludedstaff","getincludedstaff","RecipientIntakeAdmin","RecipientOpnoteAdmin","dlist","getopnotes","getcategoryop","privateFlag","restricts","addOrEdit","postopnotes","updateopnotes","whoCode","detailDate","craetor","extraDetail2","determineRadioButtonValue","deleteopnotes","RecipientPensionAdmin","getinsurance","medicareNumber","medicareExpiry","medicareRecipientID","pensionStatus","concessionNumber","dvaNumber","ambulanceType","haccDvaCardHolderStatus","haccdvaCardholderStatus","dvaBenefits","pensionVoracity","ambulance","dateofDeath","dateOfDeath","willAvailable","whereWillHeld","funeralArrangements","getpension","getpensionall","getcardstatus","pensionForm","deletespension","input","updateinsurance","postpension","updatepension","RecipientPermrosterAdmin","getpermroster","RecipientPersonalAdmin","transformedUser","RecipientQuotesAdmin","displayLast","archivedDocs","acceptedQuotes","getlistquotes","DisplayLast","IncludeArchived","IncludeAccepted","RecipientRemindersAdmin","dayInt","dayStr","followUpEmail","recurring","recurrInt","recurrStr","reminderDate","dueDate","staffAlert","getremindersrecipient","getlistrecipientreminders","pattern","date1","date2","remGroup","eToast","reminder","postremindersrecipient","updateremindersrecipient","deleteremindersrecipient","RecipientsAdmin","activeRoute","nzSelectedIndex","isFirstLoad","newReferralModal","saveModal","quoteModal","newOtherModal","emitChange","emitOnSearchListNext","profileData","openReferInModal","listChange","openReferModal","inputFormDefault","statesArr","allState","allBranches","serviceRegionsArr","allServiceRegion","managersArr","allManager","programsArr","allPrograms","fundersArr","allFunders","outletsArr","allOutlets","svcprovidersArr","allSvcProviders","staffgroupsArr","allGroups","staffArr","allStaff","ReportsAdmin","fb","isVisibleTop","State","Branches","Area","Managers","Funders","ProviderID","listOfControl","fundingRegionsArr","dropDownArray","Array","serviceRegions","programs","drawerVisible","listOfOption","multipleValue","toString","getreportcriterialist","listType","includeInactive","getcstdaoutlets","srcElement","btnid","reportRender","tryDoctype","idbtn","s_States","s_Branches","s_Managers","s_ServiceRegions","s_Programs","s_StfGroup","startdate","strdate","enddate","endate","Refeeral_list","ActivePackage_list","RecipientRoster","SuspendedRecipient","VoucherSummary","PackageUsage","RecipientTimeLength","UnallocatedBookings","TransportSummary","RefferalsduringPeriod","RecipientMasterRoster","ActiveRecipientList","InActiveRecipientList","AdmissiionDuringPeriod","DischargeDuringPeriod","AbsentClientStatus","CareerList","BillingCliens","Associate_list","UnServicedRecipient","ActiveStaffListing","ActiveBrokerage_Contractor","ActiveVolunters","InActiveBrokerage_Contractor","InActiveVolunteers","InActiveStaffListing","StaffPermissions","alert","region","fQuery","lblcriteria","s_BranchSQL","s_CoordinatorSQL","s_CategorySQL","s_ProgramSQL","headerDict","requestOptions","headers","post","JSON","stringify","responseType","_blob","fileURL","pdfTitle","bypassSecurityTrustResourceUrl","s_DateSQL","stfgroup","s_StfGroupSQL","PrintID","showModal","handleCancelTop","handleOkTop","host","RostersAdmin","calendarOptions","initialView","plugins","weekends","allDaySlot","fixedWeekCount","editable","eventStartEditable","eventResizableFromStart","duration","headerToolbar","left","center","right","scrollTime","slotMinTime","info","eventClick","views","timeGridMonth","dayHeaderFormat","slotDuration","buttonText","calendarPlugins","currentDate","dateStream","userStream","basic","upORdown","searchRoster","calendarApi","calendarComponent","getApi","querySelectorAll","innerHTML","innerText","startOf","endOf","rosters","options","raw","detectMidNight","timeStart","getEarliestTime","render","calendar","prev","parse","jsEvent","closest","css","oldEvent","picked","SessionsAdmin","SideMainMenu","StaffAttendanceAdmin","getattendancestaff","patchData","onKeyPress","StaffCompetenciesAdmin","expiryDate","competency","certReg","mandatory","getcompetencies","resetModal","populateDropDowns","deletecompetency","getcompetenciesall","postcompetencies","StaffContactAdmin","StaffDocumentAdmin","getdocuments","StaffGroupingsAdmin","getuserdefined1","getuserdefined2","getlistuserdefined1","getlistuserdefined2","userdefined1","userdefined2","userdefined1List","userdefined2List","listArray","whatView","editOrAdd","preference","edit","postuserdefined1","postuserdefined2","updateshareduserdefined","deleteshareduserdefined","str","pro","StaffHRAdmin","addORView","isPrivate","getlisthr","categories","gethrnotes","populate","posthrnotes","StaffIncidentAdmin","StaffLeaveAdmin","leaveGroup","staffcode","dates","makeUnavailable","unallocAdmin","unallocUnapproved","unallocMaster","explanation","activityCode","payCode","programShow","getleaveapplication","StaffOPAdmin","getlistop","postopnote","updateopnote","deleteopnote","StaffPayAdmin","statuses","awardsArr","staffsArr","populateDropdDowns","getpaydetails","payGroup","award","awardLevel","cH_1_1","cH_1_2","cH_1_3","cH_1_4","cH_1_5","cH_1_6","cH_1_7","cH_2_1","cH_2_2","cH_2_3","cH_2_4","cH_2_5","cH_2_6","cH_2_7","commencementDate","cstda_OtherDisabilities","employeeOf","excludeClientAdminFromPay","excludeFromPayExport","hrS_DAILY_MAX","hrS_DAILY_MIN","hrS_FNIGHTLY_MAX","hrS_FNIGHTLY_MIN","hrS_WEEKLY_MAX","hrS_WEEKLY_MIN","includeLaundry","includeUniform","jobFTE","jobStatus","jobTitle","jobWeighting","publicHolidayRegion","sqlid","stF_CODE","stf_Code","superFund","superPercent","terminationDate","getawards","updateworkhours","updateWorkHours","StaffPersonalAdmin","StaffPositionAdmin","position","positionID","getstaffpositions","getlistpositions","poststaffpositions","updatestaffpositions","deletestaffpositions","StaffReminderAdmin","getreminders","getlistreminders","postreminders","updatereminders","deletereminders","StaffTrainingAdmin","gettraining","StaffAdmin","emitRouteChangeSource$","TimesheetAdmin","timesheets","timesheetsGroup","resultMapData","unitsArr","parserPercent","parserDollar","formatterDollar","formatterPercent","modalTimesheetValues","today","defaultStartTime","getFullYear","getMonth","getDate","defaultEndTime","selectAll","overlapVisible","addTimesheetVisible","multipleRecipientShow","isTravelTimeChargeable","isSleepOver","mapOfExpandedData","empty","nest","seq","first","rest","nextDisabled","programsList","serviceActivityList","payTypeList","analysisCodeList","d","expand","collapse","stack","hashMap","level","pop","visitNode","timesheetForm","payPeriodEndDate","serviceActivity","payType","analysisCode","recipientCode","haccType","staffCode","debtor","isMultipleRecipient","sleepOverTime","pay","unit","rate","bill","tax","durationObject","computeTimeDATE_FNS","fixStartTimeDefault","getpayunits","amount","toFixed","GETPROGRAMS","ProgName","clearLowerLevelInputs","isServiceTypeMultipleRecipient","isTravelTimeChargeableProcess","isSleepOverProcess","GETANALYSISCODE","GETPAYTYPE","viewType","GETSERVICEACTIVITY","rosterGroup","GETROSTERGROUP","RosterGroup","GET_ACTIVITY_VALUE","activity_value","hehe","indexObj","prototype","call","recurse","getpayperiod","end_Date","whatType","picked$","getagencydefinedgroup","gettimesheets","personType","shiftbookNo","activityDate","fixDateTime","activity_Time","start_time","end_Time","calculated_Duration","durationNumber","recipientLocation","paytype","payquant","payrate","pay_Rate","billquant","billrate","bill_Rate","approved","billto","billedTo","roster_Type","recipient_staff","serviceSetting","anal","getComputedPay","computeHoursAndPay","getcomputetimesheet","AccountName","IsCarerCode","compute","hourMinStr","workedHours","hours","floor","minutes","_temp","KMAllowancesQty","kmAllowancesQty","AllowanceQty","allowanceQty","WorkedHours","PaidAsHours","paidAsHours","PaidAsServices","paidAsServices","WorkedAttributableHours","workedAttributableHours","PaidQty","paidQty","PaidAmount","paidAmount","ProvidedHours","providedHours","BilledAsHours","billedAsHours","BilledAsServices","billedAsServices","BilledQty","billedQty","BilledAmount","billedAmount","HoursAndMinutes","payTotal","timedate","currentTime","newDate","getHours","getMinutes","getSeconds","recurseSubDirectories","out","recurseObjOuterLoop","resetAddTimesheetModal","process","overlapValue","OVERLAP_PROCESS","overlapCounter","_unique","cloneRosters","inputs","RecordNo","ss","OverLaps","updatetimeoverlap","timesheet","tdate","getclosedate","closeDate","selectedApprove","PersonType","GET_VIEW","shiftArray","deleteshift","deleteunapprovedall","approveAll","unapproveAll","sql","getlist","getserviceactivityall","getbillingrate","ActivityCode","Program","DEFAULT_NUMERIC","tsheet","FIX_CLIENTCODE_INPUT","billQty","billTo","blockNo","costQty","costUnit","dayno","groupActivity","monthNo","serviceDescription","staffPosition","taxPercent","transferred","unitBillRate","unitPayRate","yearNo","posttimesheet","tgroup","ngModelChangeStart","ngModelChangeEnd","ifRosterGroupHasTimePayBills","selectAllChange","removeOverlap","BookingClient","notification","once","permanent","aprovider","cprovider","loadServices","selectedService","bookingModalOpen","results","bookType","weekly","loadBooking","disabledDate","BOOKINGLEADTIME","inputUser","computeTime","services","getApprovedServices","selectedInputParams","getapprovedservices","source","is","booking","BookType","StaffCode","Service","ClientCode","Duration","Username","AnyProvider","BookingType","Notes","addbooking","resultRows","create","resetStepper","CalendarClient","DocumentClient","HistoryClient","listOfData","dateRange","getTimeSheet","nzTableComponent","cdkVirtualScrollViewport","scrollToIndex","scrolledIndexChange","HomeClient","settingS","NotesClient","dateChangeEvent","OPdateChangeEvent","viewNo","OPDateRange","sortName","sortValue","listOfName","text","listOfAddress","listOfSearchName","listOfDisplayData","getShiftNotes","getOPNotesWithDates","uniqueId","getopnoteswithdate","getservicenotes","sort","searchAddress","filterFunc","some","b","PackageClient","monthPeriodFilter","platformLocation","MINUS_MONTH","programStream","subscriptions$","dateResult$","Code","PCode","dataPackage","getPackages","programResult$","getbalances","balances","saveFundingInLocalStorage","computeBalances","table","generateURL","location","pathname","origin","getactiveprogram","IsActive","packageObject","period","openingBalance","openB","closingBalance","closeB","contingency","continB","totalBalance","packageStatement","getpackages","getOpeningBalance","getClosingBalance","getContingencyBalance","sum","bankedContingency","maxDate","periodEnd","balance","minDate","programChanges","dateChanges","PreferencesClient","tabStream","listpreferences","competenciesList","getpreferences","postpreferences","getSelectedPreference","postpreference","ProfileClient","ShiftClient","bookingCancellationType","cancelBookingModal","getShiftPending","getShiftAccepted","getShiftCompleted","getShiftApproved","getShiftQuery","getShiftBilled","getuname","res","getsettings","uname","getshiftbooked","ShiftDate","Pending","getshiftspecific","Approved","currentShift","date_Value","rosterDate","bookTime","dayDiff","minimumCancellationLeadTime","ServiceType","RosterDate","RosterTime","TraccsUser","bookingNo","updateshiftquery","nzSelectedIndexChange","ExtraComponent","columnDefs","field","rowData","make","model","price","LoginComponent","unauthorized","loginForm","userName","password","remember","Password","login","access_token","getSettings","redirectURL","navigateByUrl","viewRender","unauthorizedStr","CalendarProvider","DocumentProvider","HistoryProvider","HomeProvider","LeaveProvider","leaveTypes","leaveForm","durationStr","leave","Message","LeaveType","CoordinatorEmail","IsRecipient","postleave","submitForm","validateDate","PackageProvider","obsArray","indexPage","payPeriod","payperiod","start_Date","getTimesheetandStatus","activityTime","claimStart","claimed_Start","claimEnd","claimed_End","startKM","start_KM","endKM","end_KM","client_Code","ptype","pquant","rosterType","submitted","calculateTotalApprovedShifts","shiftsList","getjobstatus","jobNo","isCompleted","totalTime","totalHoursMinutes","page","variation","ClaimedBy","ClaimedDate","ClaimedStart","parseTimeToDate","ClaimedEnd","postclaimvariation","submit","timeEnd","submitAllBtnClick","ProfileProvider","DayManagerPopulate","dayPop","filtered","ShiftType","isNone","isLast","RemoveFirstLast","MomentTimePackage","SplitArrayPipe","arg1","arg2","FilterPipe","isArray","RegExp","KeyFilter","keyArr","KeyValueFilter","FileNameFilter","FileSizeFilter","MonthPeriodFilter","startOfMonth","endOfMonth","CanDeactivateGuard","providedIn","RouteGuard","isExpired","detectStaffDirectAccess","urlLen","URLSearchParams","has","set","AuthService","GlobalS","injector","params","_params","serialize","handleError","_headers","put","delete","CacheService","auth","global","ClientService","preferences","idList","worker","getpackage","book","EmailService","exec","ExecutableService","helper","portal","ROSTER_TYPE","fundingDropDowns","expireUsing","homeCare","packageTerm","costType","perUnit","alerts","cycle","states","cycles","billunit","achievementIndex","types","recurringInt","recurringStr","incidentTypes","incidentSeverity","GlobalService","toastr","isVarNull","aud","exp","iss","jti","nbf","userSettings","Recipients","decodeToken","clear","currentYear","count","isTokenExpired","monthStr","hasOwnProperty","searchStr","arrAny","escaped","arrString","def","ifFound","toLowerCase","momentTime","prop","clearTokens","warning","currRoute","urlSplit","strFilter","arrStr","interval","isAdd","_time","_interval","newTime","hour","minute","earliestDate","reduce","pre","curr","random","substr","_start","_end","minutesInAnHour","invalid","starttime","endtime","diffTime","diffHour","diffMinutes","durationInHours","quants","setItem","job","JobService","landing","LandingService","ListService","contactGroup","dataset","whatnote","sqlString","Sql","LoginGuard","LoginService","uid","members","MemberService","report","ReportService","ScriptStore","ScriptService","scripts","script","promises","loadScript","all","reject","onload","onerror","getElementsByTagName","SettingsService","getusersettings","VERIFY_OUTPUT","allowBooking","allowCaseNote","canChooseProvider","canSeeProviderGender","canSeeProviderPhoto","canSeeProviderAge","canSeeProviderReviews","allowsMarketing","bookingLeadTime","ShareService","emitChangeSource","emitOnSearchList","emitRouteChangeSource","asObservable","emitOnSearchList$","pickedObject","changeRoute","StaffService","getImage","cv","claim","cnote","incident","staffVal","entry","TimeSheetService","fromObject","SqlStmt","reportPath","reportName","parameters","recordArr","sdate","edate","servicetype","ts","rec","dto","attendance","upload","fileV2","UploadService","uploadFile","environment","production","bootstrapModule","catch"],"mappings":"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;;;uIAtElB,4D,EACA,4E,EAAc,yD,EAAA,0D,EAAA,4D,EAAA,4D,EAAA,6D,EAAA,4D,EAAA,gE,EAAA,0D,EAAA,6D,EAAA,4D,EAAA,gE,EAAA,6D,EAAA,iE,EAAA,iE,EAAA,gE,EAAA,8D,EAAA,gE,EAAA,6D,EAAA,6D,EAAA,uD,EAAA,yD,EAAA,0D,EAAA,0D,EAAA,6D,EAAA,0D,EAAA,0D,EAAA,2D,EAAA,wD,EAAA,4D,EAAA,8D,EAAA,yF,EAAA,6F,EAAA,mF,EAAA,qF,EAAA,uF,EAAA,6E,EAAA,qF,EAAA,+E,EAAA,6E,EAAA,2E,EAAA,qF,EAAA,qF,EAAA,qF,EAAA,qF,EAAA,6F,EAAA,6F,EAAA,2F,EAAA,6F,EAAA,yF,EAAA,yF,EAAA,2F,EAAA,kG,EAAA,6F,EAAA,yF,EAAA,+F,EAAA,4D,EAAA,8D,EAAA,8D,EAAA,6D,EAAA,2D,EAAA,4D,EAAA,2D,EAAA,8D,EAAA,2D,EAAA,kE,EAAA,wD,EAAA,kE,EAAA,wD,EAAA,qD,EAAA,iE,EAAA,wD,EAAA,yD,EAAA,6D,EAAA,gE,EAAA,yD,EAAA,6D,EAAA,8E,EAAA,6D,EAAA,8E,EAAA,mE,EAAA,kE,EAAA,iE,EAAA,2E,EAAA,yE,EAAA,iF,EAAA,wE,EAAA,8D,EAAA,mE,EAAA,gE,EAAA,iE,EAAA,iE,EAAA,+D,EAAA,wE,EAAA,6D,EAAA,sD,EAAA,2D,EAAA,qD,EAAA,mE,EAAA,iE,EAAA,8D,EAAA,4D,EAAA,4D,EAAA,6D,EAAA,2D,EAAA,mE,EAAA,iE,EAAA,kF,EAAA,kG,EAAA,kE,EAAA,uF,EAAA,+F,EAAA,0F,EAAA,oF,EAAA,kG,EAAA,iH,EAAA,iH,EAAA,mG,EAAA,kG,EAAA,8G,EAAA,iF,EAAA,wG,EAAA,qG,EAAA,8G,EAAA,kG,EAAA,iD,EAAA,qE,EAAA,qE,EAAA,uE,EAAA,2E,EAAA,oF,EAAA,0F,EAAA,2F,EAAA,4F,EAAA,uE,EAAA,0E,EAAA,qE,EAAA,uE,EAAA,4E,EAAA,+E,EAAA,mF,EAAA,2E,EAAA,2E,EAAA,+E,EAAA,4E,EAAA,gF,EAAA,0E,EAAA,2E,EAAA,mE,EAAA,uE,EAAA,uE,EAAA,0E,EAAA,sE,EAAA,2E,EAAA,kF,EAAA,2E,EAAA,2E,EAAA,gF,EAAA,kF,EAAA,gF,EAAA,2E,EAAA,yE,EAAA,+E,EAAA,gF,EAAA,+E,EAAA,mF,EAAA,gF,EAAA,iF,EAAA,iF,EAAA,gF,EAAA,gF,EAAA,mF,EAAA,uF,EAAA,yE,EAAA,uE,EAAA,mE,EAAA,uE,EAAA,sE,EAAA,0E,EAAA,wE,EAAA,2E,EAAA,iF,EAAA,2E,EAAA,4E,EAAA,+E,EAAA,qE,EAAA,0E,EAAA,wE,EAAA,wE,EAAA,mE,EAAA,uE,EAAA,0E,EAAA,0E,EAAA,uE,EAAA,wE,EAAA,kE,EAAA,kE,EAAA,oE,EAAA,sE,EAAA,2E,EAAA,yE,EAAA,mF,EAAA,uE,EAAA,uE,EAAA,wE,EAAA,uE,EAAA,sE,EAAA,oE,EAAA,wE,EAAA,4E,EAAA,0E,EAAA,iF,EAAA,oF,EAAA,qE,EAAA,2E,EAAA,2E,EAAA,iF,EAAA,sF,EAAA,yF,EAAA,wF,EAAA,oF,EAAA,sF,EAAA,uF,EAAA,2F,EAAA,uF,EAAA,gF,EAAA,gF,EAAA,gF,EAAA,0E,EAAA,0E,EAAA,4E,EAAA,sE,EAAA,4E,EAAA,2E,EAAA,oE,EAAA,wE,EAAA,+E,EAAA,6E,EAAA,4E,EAAA,gF,EAAA,6E,EAAA,wE,EAAA,wE,EAAA,iF,EAAA,6E,EAAA,kF,EAAA,4E,EAAA,wE,EAAA,6E,EAAA,8E,EAAA,4E,EAAA,6E,EAAA,oE,EAAA,8E,EAAA,8E,EAAA,oF,EAAA,sE,EAAA,qE,EAAA,wE,EAAA,qE,EAAA,kE,EAAA,kE,EAAA,qE,EAAA,qE,EAAA,kE,EAAA,6E,EAAA,mE,EAAA,mE,EAAA,sE,EAAA,uE,EAAA,wE,EAAA,0E,EAAA,uE,EAAA,uE,EAAA,kE,EAAA,sF,EAAA,iF,EAAA,gF,EAAA,4E,EAAA,0E,EAAA,0E,EAAA,2E,EAAA,4E,EAAA,oE,EAAA,wE,EAAA,iF,EAAA,gF,EAAA,8E,EAAA,8E,EAAA,wE,EAAA,oE,EAAA,oD,EAAA,oD,EAAA,oD,EAAA,oD,EAAA,oD,EAAA,oD,EAAA,oD,EA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AAA,EAAT;AAAoB,WAApB;;AAC/B;;AACA;;AACA;;AACR;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACA;;AAAQ;;AAAe;;AACvB;;AACI;;AAAmC;AAAA,mBAAS,IAAAA,SAAA,EAAT;AAAoB,WAApB;;AAC/B;;AACA;;AACA;;AACR;;AACA;;AACI;;AAAmC;AAAA,mBAAS,IAAAA,SAAA,EAAT;AAAoB,WAApB;;AAC/B;;AACA;;AACA;;AACR;;AAEJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACA;;AAAQ;;AAAa;;AACrB;;AACI;;AAAmC;AAAA,mBAAS,IAAAA,SAAA,EAAT;AAAoB,WAApB;;AAC/B;;AACA;;AACA;;AACR;;AAEJ;;AACJ;;AACJ;;AACJ;;AAEJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACA;;AAAQ;;AAAuB;;AAC/B;;AACI;;AACI;;AACA;;AACA;;AACR;;AACA;;AACI;;AACI;;AACD;;AACC;;AACR;;AACA;;AACI;;AACI;;AACA;;AACA;;AACR;;AACA;;AACI;;AACI;;AACA;;AACA;;AACR;;AACA;;AACI;;AACI;;AACA;;AACA;;AACR;;AACA;;AACI;;AACI;;AACA;;AACA;;AACR;;AACA;;AACI;;AACI;;AACA;;AACA;;AACR;;AACA;;AACI;;AACI;;AACA;;AACA;;AACR;;AAEJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACA;;AAAQ;;AAA2B;;AACnc;;AACtB;;AACI;;AACI;;AACA;;AACA;;AACR;;AACA;;AACI;;AACI;;AACA;;AACA;;AACR;;AACA;;AACI;;AACI;;AACA;;AACA;;AACR;;AACA;;AACI;;AACI;;AACA;;AACA;;AACR;;AACA;;AACI;;AACI;;AACA;;AACA;;AACR;;AACA;;AACI;;AACI;;AACA;;AACA;;AACR;;AACA;;AACI;;AACI;;AACA;;AACA;;AACR;;AACA;;AACI;;AACI;;AACA;;AACA;;AACR;;AACA;;AACI;;AACI;;AACA;;AAC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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\nimport {  ProfilePage } from '@components/index';\r\n\r\nimport {\r\n  HomeClient,\r\n  NotesClient,\r\n  HistoryClient,\r\n  BookingClient,\r\n  DocumentClient,\r\n  PackageClient,\r\n  PreferencesClient,\r\n  ShiftClient,\r\n  CalendarClient,\r\n  ProfileClient\r\n} from '@client/index'\r\n\r\nimport {\r\n  ProfileProvider,\r\n  HomeProvider,\r\n  CalendarProvider,\r\n  DocumentProvider,\r\n  HistoryProvider,\r\n  LeaveProvider,\r\n  PackageProvider\r\n} from '@provider/index';\r\n\r\nimport {\r\n  AttendanceAdmin,\r\n  DayManagerAdmin,\r\n  HomeAdmin,\r\n  HomeV2Admin,\r\n  LandingAdmin,\r\n  SideMainMenu,\r\n  RecipientsAdmin,\r\n  ReportsAdmin,\r\n  RostersAdmin,\r\n  SessionsAdmin,\r\n  StaffAdmin,\r\n  TimesheetAdmin\r\n} from '@admin/index'\r\n\r\nimport {\r\n  StaffAttendanceAdmin,\r\n  StaffCompetenciesAdmin,\r\n  StaffContactAdmin,\r\n  StaffDocumentAdmin,\r\n  StaffGroupingsAdmin,\r\n  StaffHRAdmin,\r\n  StaffIncidentAdmin,\r\n  StaffLeaveAdmin,\r\n  StaffOPAdmin,\r\n  StaffPayAdmin,\r\n  StaffPersonalAdmin,\r\n  StaffPositionAdmin,\r\n  StaffReminderAdmin,\r\n  StaffTrainingAdmin\r\n} from './pages/admin/staff-views/index';\r\n\r\nimport {\r\n  RecipientCasenoteAdmin,\r\n  RecipientContactsAdmin,\r\n  RecipientHistoryAdmin,\r\n  RecipientIncidentAdmin,\r\n  RecipientIntakeAdmin,\r\n  RecipientOpnoteAdmin,\r\n  RecipientPensionAdmin,\r\n  RecipientPermrosterAdmin,\r\n  RecipientPersonalAdmin,\r\n  RecipientQuotesAdmin,\r\n  RecipientRemindersAdmin\r\n} from './pages/admin/recipient-views/index'\r\n\r\nimport {\r\n  RouteGuard,\r\n  CanDeactivateGuard\r\n} from '@services/index'\r\n\r\nimport {\r\n  IntakeAlerts,\r\n  IntakeBranches,\r\n  IntakeConsents,\r\n  IntakeFunding,\r\n  IntakeGoals,\r\n  IntakeGroups,\r\n  IntakePlans,\r\n  IntakeServices,\r\n  IntakeStaff\r\n} from '@intakes/index';\r\n\r\nimport { ExtraComponent } from './pages/extra/extra';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'client',\r\n    component: HomeClient,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'profile',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'notes',\r\n        component: NotesClient\r\n      },\r\n      {\r\n        path: 'history',\r\n        component: HistoryClient\r\n      },\r\n      {\r\n        path: 'booking',\r\n        component: BookingClient\r\n      },\r\n      {\r\n        path: 'document',\r\n        component: DocumentClient\r\n      },\r\n      {\r\n        path: 'package',\r\n        component: PackageClient\r\n      },\r\n      {\r\n        path: 'preferences',\r\n        component: PreferencesClient\r\n      },\r\n      {\r\n        path: 'manage-services',\r\n        component: ShiftClient\r\n      },\r\n      {\r\n        path: 'profile',\r\n        component: ProfileClient\r\n      },\r\n      {\r\n        path: 'calendar',\r\n        component: CalendarClient\r\n      }\r\n\r\n    ]\r\n  },\r\n  {\r\n    path: 'provider',\r\n    component: HomeProvider,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'profile',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'profile',\r\n        component: ProfileProvider\r\n      },\r\n      {\r\n        path: 'calendar',\r\n        component: CalendarProvider\r\n      },\r\n      {\r\n        path: 'history',\r\n        component: HistoryProvider\r\n      },\r\n      {\r\n        path: 'package',\r\n        component: PackageProvider\r\n      },\r\n      {\r\n        path: 'document',\r\n        component: DocumentProvider\r\n      },\r\n      {\r\n        path: 'leave',\r\n        component: LeaveProvider\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'admin',\r\n    component: HomeV2Admin,\r\n    canActivate: [RouteGuard],\r\n    canActivateChild: [RouteGuard],\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'daymanager',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'landing',\r\n        component: SideMainMenu\r\n      },\r\n      // {\r\n      //   path: 'landing',\r\n      //   component: LandingAdmin\r\n      // },\r\n      {\r\n        path: 'daymanager',\r\n        component: DayManagerAdmin\r\n      },\r\n      {\r\n        path: 'timesheet',\r\n        component: TimesheetAdmin\r\n      },\r\n      {\r\n        path: 'reports',\r\n        component: ReportsAdmin\r\n      },\r\n      {\r\n        path: 'rosters',\r\n        component: RostersAdmin\r\n      },\r\n      {\r\n        path: 'staff/**',\r\n        component: StaffAdmin,\r\n      },\r\n      {\r\n        path: 'staff',\r\n        component: StaffAdmin,\r\n        children: [\r\n          {\r\n            path: 'personal',\r\n            component: StaffPersonalAdmin\r\n          },\r\n          {\r\n            path: 'contacts',\r\n            component: StaffContactAdmin\r\n          },\r\n          {\r\n            path: 'pay',\r\n            component: StaffPayAdmin\r\n          },\r\n          {\r\n            path: 'leave',\r\n            component: StaffLeaveAdmin\r\n          },\r\n          {\r\n            path: 'reminders',\r\n            component: StaffReminderAdmin\r\n          },\r\n          {\r\n            path: 'op-note',\r\n            component: StaffOPAdmin\r\n          },\r\n          {\r\n            path: 'hr-note',\r\n            component: StaffHRAdmin\r\n          },\r\n          {\r\n            path: 'competencies',\r\n            component: StaffCompetenciesAdmin\r\n          },\r\n          {\r\n            path: 'training',\r\n            component: StaffTrainingAdmin\r\n          },\r\n          {\r\n            path: 'incident',\r\n            component: StaffIncidentAdmin\r\n          },\r\n          {\r\n            path: 'document',\r\n            component: StaffDocumentAdmin\r\n          },\r\n          {\r\n            path: 'time-attendance',\r\n            component: StaffAttendanceAdmin,\r\n            canDeactivate: [CanDeactivateGuard]\r\n          },\r\n          {\r\n            path: 'position',\r\n            component: StaffPositionAdmin\r\n          },\r\n          {\r\n            path: 'groupings-preferences',\r\n            component: StaffGroupingsAdmin\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'recipient',\r\n        component: RecipientsAdmin,\r\n        children: [\r\n          {\r\n            path: 'personal',\r\n            component: RecipientPersonalAdmin\r\n          },\r\n          {\r\n            path: 'contacts',\r\n            component: RecipientContactsAdmin\r\n          },\r\n          {\r\n            path: 'intake',\r\n            component: RecipientIntakeAdmin,\r\n            children: [\r\n              {\r\n                path: '',\r\n                redirectTo: 'branches',\r\n                pathMatch: 'full'\r\n              },\r\n              {\r\n                path: 'alerts',\r\n                component: IntakeAlerts\r\n              },\r\n              {\r\n                path: 'branches',\r\n                component: IntakeBranches\r\n              },\r\n              {\r\n                path: 'consents',\r\n                component: IntakeConsents\r\n              },\r\n              {\r\n                path: 'funding',\r\n                component: IntakeFunding\r\n              },\r\n              {\r\n                path: 'goals',\r\n                component: IntakeGoals\r\n              },\r\n              {\r\n                path: 'groups',\r\n                component: IntakeGroups\r\n              },\r\n              {\r\n                path: 'plans',\r\n                component: IntakePlans\r\n              },\r\n              {\r\n                path: 'services',\r\n                component: IntakeServices\r\n              },\r\n              {\r\n                path: 'staff',\r\n                component: IntakeStaff\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            path: 'reminders',\r\n            component: RecipientRemindersAdmin\r\n          },\r\n          {\r\n            path: 'opnote',\r\n            component: RecipientOpnoteAdmin\r\n          },\r\n          {\r\n            path: 'casenote',\r\n            component: RecipientCasenoteAdmin\r\n          },\r\n          {\r\n            path: 'incidents',\r\n            component: RecipientIncidentAdmin\r\n          },\r\n          {\r\n            path: 'perm-roster',\r\n            component: RecipientPermrosterAdmin\r\n          },\r\n          {\r\n            path: 'history',\r\n            component: RecipientHistoryAdmin\r\n          },\r\n          {\r\n            path: 'insurance-pension',\r\n            component: RecipientPensionAdmin\r\n          },\r\n          {\r\n            path: 'quotes',\r\n            component: RecipientQuotesAdmin\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'extra',\r\n    component: ExtraComponent\r\n  },\r\n  {\r\n    path: 'traccsadmin',\r\n    component: StaffAdmin\r\n  }\r\n  // {\r\n  //   path: '**',\r\n  //   redirectTo: ''\r\n  // },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n\r\nexport const PAGE_COMPONENTS = [\r\n\r\n  // Importing Client\r\n  HomeClient,\r\n  NotesClient,\r\n  HistoryClient,\r\n  BookingClient,\r\n  DocumentClient,\r\n  PackageClient,\r\n  PreferencesClient,\r\n  ShiftClient,\r\n  CalendarClient,\r\n  ProfileClient,\r\n\r\n  // Importing Providers\r\n  ProfileProvider,\r\n  HomeProvider,\r\n  CalendarProvider,\r\n  DocumentProvider,\r\n  HistoryProvider,\r\n  LeaveProvider,\r\n  PackageProvider,\r\n\r\n  // Importing Admin\r\n  AttendanceAdmin,\r\n  DayManagerAdmin,\r\n  HomeAdmin,\r\n  HomeV2Admin,\r\n  SideMainMenu,\r\n  LandingAdmin,\r\n  RecipientsAdmin,\r\n  ReportsAdmin,\r\n  RostersAdmin,\r\n  SessionsAdmin,\r\n  StaffAdmin,\r\n  TimesheetAdmin,\r\n\r\n  // Components\r\n  ProfilePage,\r\n\r\n  // Staff Views\r\n  StaffAttendanceAdmin,\r\n  StaffCompetenciesAdmin,\r\n  StaffContactAdmin,\r\n  StaffDocumentAdmin,\r\n  StaffGroupingsAdmin,\r\n  StaffHRAdmin,\r\n  StaffIncidentAdmin,\r\n  StaffLeaveAdmin,\r\n  StaffOPAdmin,\r\n  StaffPayAdmin,\r\n  StaffPersonalAdmin,\r\n  StaffPositionAdmin,\r\n  StaffReminderAdmin,\r\n  StaffTrainingAdmin,\r\n\r\n  // Recipient Views\r\n  RecipientCasenoteAdmin,\r\n  RecipientContactsAdmin,\r\n  RecipientHistoryAdmin,\r\n  RecipientIncidentAdmin,\r\n  RecipientIntakeAdmin,\r\n  RecipientOpnoteAdmin,\r\n  RecipientPensionAdmin,\r\n  RecipientPermrosterAdmin,\r\n  RecipientPersonalAdmin,\r\n  RecipientQuotesAdmin,\r\n  RecipientRemindersAdmin,\r\n\r\n  // Intake Views\r\n  IntakeAlerts,\r\n  IntakeBranches,\r\n  IntakeConsents,\r\n  IntakeFunding,\r\n  IntakeGoals,\r\n  IntakeGroups,\r\n  IntakePlans,\r\n  IntakeServices,\r\n  IntakeStaff,\r\n\r\n  ExtraComponent\r\n]\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  isCollapsed = false;\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\n\r\nimport { FullCalendarModule } from '@fullcalendar/angular';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { NgZorroAntdModule, NZ_I18N, en_US } from 'ng-zorro-antd';\r\nimport { AppRoutingModule, PAGE_COMPONENTS } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { registerLocaleData, CommonModule, CurrencyPipe, DatePipe, DecimalPipe, HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport en from '@angular/common/locales/en';\r\n\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\n\r\nimport {\r\n  AuthService,\r\n  LoginService,\r\n  GlobalService,\r\n  ClientService,\r\n  StaffService,\r\n  ReportService,\r\n  EmailService,\r\n  RouteGuard,\r\n  LoginGuard,\r\n  TimeSheetService,\r\n  ListService,\r\n  UploadService,\r\n  MemberService,\r\n  ExecutableService,\r\n  LandingService,\r\n  JobService,\r\n  CacheService,\r\n  ScriptService,\r\n  ShareService,\r\n  SettingsService\r\n} from './services/index';\r\n\r\nimport { IconsProviderModule } from './icons-provider.module';\r\n\r\nimport { NzLayoutModule } from 'ng-zorro-antd/layout';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzGridModule } from 'ng-zorro-antd/grid';\r\nimport { NzTableModule } from 'ng-zorro-antd/table';\r\nimport { NzModalModule } from 'ng-zorro-antd/modal';\r\n\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\n\r\nimport { ComponentModule } from '@components/component.module'\r\nimport { AgGridModule } from 'ag-grid-angular';\r\n\r\nregisterLocaleData(en);\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('access_token');\r\n}\r\n\r\nFullCalendarModule.registerPlugins([ // register FullCalendar plugins\r\n  dayGridPlugin,\r\n  interactionPlugin,\r\n  timeGridPlugin\r\n]);\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    PAGE_COMPONENTS\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    ComponentModule,\r\n    ToastrModule.forRoot({\r\n      timeOut: 2000,\r\n      positionClass: 'toast-bottom-right',\r\n      preventDuplicates: false,\r\n      autoDismiss: true,\r\n      maxOpened: 5\r\n    }),\r\n    IconsProviderModule,\r\n    NgZorroAntdModule,\r\n    NzLayoutModule,\r\n    NzButtonModule,\r\n    NzGridModule,\r\n    NzTableModule,\r\n    NzModalModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        whitelistedDomains: [\"localhost:5000\"],\r\n      }\r\n    }),\r\n    CalendarModule.forRoot({ provide: DateAdapter, useFactory: adapterFactory }),\r\n    AgGridModule.withComponents([]),\r\n    InfiniteScrollModule,\r\n    FullCalendarModule\r\n  ],\r\n  providers: [\r\n    { provide: NZ_I18N, useValue: en_US },\r\n    {\r\n      provide: LocationStrategy,\r\n      useClass: HashLocationStrategy\r\n    },\r\n    { provide: Window, useValue: window },\r\n    AuthService,\r\n    LoginService,\r\n    GlobalService,\r\n    ClientService,\r\n    StaffService,\r\n    ReportService,\r\n    EmailService,\r\n    RouteGuard,\r\n    LoginGuard,\r\n    TimeSheetService,\r\n    ListService,\r\n    UploadService,\r\n    MemberService,\r\n    ExecutableService,\r\n    LandingService,\r\n    JobService,\r\n    CacheService,\r\n    ScriptService,\r\n    ShareService,\r\n    SettingsService,\r\n    CurrencyPipe, DatePipe, DecimalPipe\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nimport { TimeSheetService, GlobalService, view, ClientService, StaffService, ListService, UploadService, months, days, gender, types, titles, caldStatuses, roles } from '@services/index';\r\n\r\n@Component({\r\n  selector: 'app-action',\r\n  templateUrl: './action.component.html',\r\n  styleUrls: ['./action.component.css']\r\n})\r\nexport class ActionComponent implements OnInit {\r\n\r\n  @Input() data: any;\r\n  @Input() settings: any;\r\n  @Input() status: number;\r\n\r\n  visible: boolean = false;\r\n  notesIsOpen: boolean = false;\r\n  claimVariationOpen: boolean = false;\r\n  travelClaimOpen: boolean = false;\r\n  rosterNoteOpen: boolean = false;\r\n  recordIncidentOpen: boolean = false;\r\n\r\n  isConfirmLoading: boolean = false;\r\n\r\n  title: string;\r\n  whatNote: number;\r\n\r\n  optionForm: FormGroup;\r\n  token: any;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private globalS: GlobalService,\r\n    private timeS: TimeSheetService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.token = this.globalS.decode();\r\n    this.buildForm();\r\n  }\r\n\r\n  buildForm(){\r\n    this.optionForm = this.formBuilder.group({\r\n      notes: new FormControl('')\r\n    })\r\n  }\r\n  \r\n  clickEvent(index: number) {\r\n\r\n    if(index == 1){\r\n      \r\n    }\r\n    \r\n    if (index == 2) {\r\n\r\n    }\r\n\r\n    if (index == 3) {\r\n      this.claimVariationOpen = true;\r\n    }\r\n\r\n    if (index == 4) {\r\n      this.travelClaimOpen = true;\r\n    }\r\n\r\n    if (index == 5) {\r\n      this.rosterNoteOpen = true;\r\n    }\r\n\r\n    if (index == 6) {\r\n      this.recordIncidentOpen = true;\r\n    }\r\n\r\n    if (index == 7) {\r\n      this.whatNote = 1;\r\n      this.notesIsOpen = true;\r\n    }\r\n\r\n    if (index == 8) {\r\n      this.whatNote = 2;\r\n      this.notesIsOpen = true;\r\n    }\r\n\r\n    // close popover\r\n    this.visible = false;    \r\n  }\r\n\r\n  handleCancel() {\r\n    this.notesIsOpen = false;\r\n    this.claimVariationOpen = false;\r\n    this.travelClaimOpen = false;\r\n    this.rosterNoteOpen = false;\r\n    this.recordIncidentOpen = false;\r\n  }\r\n\r\n  handleOk() {\r\n    \r\n  }\r\n\r\n  saveNote(whatNote: number) {\r\n\r\n    const { notes } = this.optionForm.value;\r\n\r\n    const iParameters = {\r\n      RecipientCode: this.data.recipient,\r\n      OperatorID: this.token.nameid,\r\n      Note: notes,\r\n      NoteType: whatNote == 1 ? 'OPNOTE' : 'CASENOTE'\r\n    }    \r\n\r\n    this.timeS.addclientnote(iParameters)\r\n      .subscribe(data => {\r\n        this.globalS.sToast('Success','Note Added!')\r\n      });\r\n    \r\n  }\r\n\r\n\r\n}\r\n","<button nz-button class=\"options\" nzType=\"primary\" [nzSize]=\"'small'\"\r\n    nz-popover\r\n      nzPopoverTitle=\"Control Options\"\r\n      [(nzVisible)]=\"visible\"\r\n      nzPopoverTrigger=\"click\"\r\n      nzPopoverPlacement=\"leftBottom\"\r\n      [nzPopoverContent]=\"contentTemplate\">\r\n    <i nz-icon nzType=\"setting\"\r\n        nzTheme=\"outline\"></i></button>\r\n\r\n<ng-template #contentTemplate>\r\n    <ul>\r\n        <li *ngIf=\"status == 0\" (click)=\"clickEvent(1)\">Start Job</li>\r\n        <li *ngIf=\"status == 1\" (click)=\"clickEvent(2)\">End Job</li>\r\n        <li *ngIf=\"!data?.approved\" (click)=\"clickEvent(3)\">Claim Variation</li>\r\n        <li *ngIf=\"settings?.allowTravelEntry == 'True'\" (click)=\"clickEvent(4)\" >Travel Claim</li>\r\n        <li *ngIf=\"settings?.allowRosterNoteEntry == 'True'\" (click)=\"clickEvent(5)\">Roster Note</li>\r\n        <li *ngIf=\"settings?.allowIncidentEntry == 'True'\" (click)=\"clickEvent(6)\">Record Incident</li>\r\n        <li *ngIf=\"settings?.allowOPNote == 'True'\" (click)=\"clickEvent(7)\">OP Note</li>\r\n        <li *ngIf=\"settings?.allowCaseNote == 'True'\" (click)=\"clickEvent(8)\">Case Note</li>\r\n    </ul>\r\n</ng-template>\r\n\r\n\r\n<!-- FOR NOTES -->\r\n<nz-modal [(nzVisible)]=\"notesIsOpen\" [nzTitle]=\"whatNote == 1 ? 'Edit OP Note' : 'Edit Case Note'\" (nzOnCancel)=\"handleCancel()\">\r\n    <div>\r\n        <div nz-row [formGroup]=\"optionForm\">\r\n            <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                <label for=\"\">Job ID</label>\r\n                <span>sd</span>\r\n            </div>\r\n            <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                <label for=\"\">Recipient/Location</label>\r\n                <span>sd</span>\r\n            </div>\r\n            <div nz-col nzSpan=\"24\" class=\"form-group\">\r\n                <label for=\"\">Details</label>\r\n                <textarea nz-input rows=\"4\" formControlName=\"notes\"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"saveNote(whatNote)\" [nzLoading]=\"isConfirmLoading\">Save</button>\r\n    </div>\r\n</nz-modal>\r\n\r\n<!-- FOR CLAIM VARIATION -->\r\n<nz-modal [(nzVisible)]=\"claimVariationOpen\" nzTitle=\"Claim Variation\" (nzOnCancel)=\"handleCancel()\">\r\n    <div>\r\n        <p>Modal Content</p>\r\n        <p>Modal Content</p>\r\n        <p>Modal Content</p>\r\n        <p>Modal Content</p>\r\n        <p>Modal Content</p>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"handleOk()\" [nzLoading]=\"isConfirmLoading\">Custom Submit</button>\r\n    </div>\r\n</nz-modal>\r\n\r\n<!-- FOR TRAVEL CLAIM -->\r\n <nz-modal [(nzVisible)]=\"travelClaimOpen\" nzTitle=\"Travel Claim\" (nzOnCancel)=\"handleCancel()\">\r\n    <div>\r\n        <p>Modal Content</p>\r\n        <p>Modal Content</p>\r\n        <p>Modal Content</p>\r\n        <p>Modal Content</p>\r\n        <p>Modal Content</p>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"handleOk()\" [nzLoading]=\"isConfirmLoading\">Custom Submit</button>\r\n    </div>\r\n</nz-modal>\r\n\r\n\r\n<!-- FOR ROSTER NOTES -->\r\n<nz-modal [(nzVisible)]=\"rosterNoteOpen\" nzTitle=\"Roster Note\" (nzOnCancel)=\"handleCancel()\">\r\n    <div>\r\n        <p>Modal Content</p>\r\n        <p>Modal Content</p>\r\n        <p>Modal Content</p>\r\n        <p>Modal Content</p>\r\n        <p>Modal Content</p>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"handleOk()\" [nzLoading]=\"isConfirmLoading\">Custom Submit</button>\r\n    </div>\r\n</nz-modal>\r\n\r\n\r\n\r\n<!-- FOR RECORD INCIDENT -->\r\n<nz-modal [(nzVisible)]=\"recordIncidentOpen\" nzTitle=\"Record Incident\" (nzOnCancel)=\"handleCancel()\">\r\n    <div>\r\n        <p>Modal Content</p>\r\n        <p>Modal Content</p>\r\n        <p>Modal Content</p>\r\n        <p>Modal Content</p>\r\n        <p>Modal Content</p>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"handleOk()\" [nzLoading]=\"isConfirmLoading\">Custom Submit</button>\r\n    </div>\r\n</nz-modal>","\r\nimport { Component, OnInit, Input, OnChanges, SimpleChanges, ViewChild, EventEmitter, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\n\r\nimport { mergeMap, debounceTime, distinctUntilChanged, takeUntil, switchMap, concatMap } from 'rxjs/operators';\r\n\r\nimport * as moment from 'moment';\r\nimport { RemoveFirstLast } from '@pipes/pipes';\r\nimport { TimeSheetService, GlobalService, ClientService, StaffService, ListService, UploadService, months, days, gender, types, titles, caldStatuses, roles } from '@services/index';\r\nimport { Observable, of, from, Subject, EMPTY } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-add-referral',\r\n  templateUrl: './add-referral.component.html',\r\n  styleUrls: ['./add-referral.component.css']\r\n})\r\n  \r\nexport class AddReferralComponent implements OnInit {\r\n\r\n  private verifyAccount = new Subject<any>();\r\n\r\n  @Input() open: boolean = false;\r\n  @Input() type: string = 'referral';\r\n\r\n  @Output() openRefer = new EventEmitter();\r\n\r\n  referralGroup: FormGroup;\r\n\r\n  genderArr: Array<string> = gender\r\n  typesArr: Array<string> = types\r\n  titlesArr: Array<string> = titles\r\n  addressType: Array<string> = []\r\n  contactType: Array<string> = []\r\n\r\n\r\n  loading: boolean;\r\n\r\n  errorStr: string;\r\n\r\n  branches: Array<string>;\r\n  managers: Array<string>;\r\n  agencies: Array<string>;\r\n\r\n  private addresses: FormArray;\r\n  private contacts: FormArray;\r\n\r\n  current: number = 0;\r\n  dateFormat: string = 'dd/MM/yyyy';\r\n  generatedAccount: string;\r\n  accountTaken: boolean;\r\n\r\n  constructor(\r\n    private clientS: ClientService,\r\n    private formBuilder: FormBuilder,\r\n    private globalS: GlobalService,\r\n    private listS: ListService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.resetGroup();    \r\n\r\n    this.verifyAccount.pipe(\r\n      debounceTime(300),\r\n      concatMap(e => {\r\n        if (this.referralGroup && this.referralGroup.valid) {\r\n          this.generatedAccount = this.generateAccount();\r\n          return this.clientS.isAccountNoUnique(this.generatedAccount);\r\n        } return EMPTY;\r\n      })\r\n    ).subscribe(next => {\r\n      if (next == 1) {\r\n        this.accountTaken = false;\r\n\r\n        this.referralGroup.patchValue({\r\n          accountNo: this.generatedAccount\r\n        });\r\n      }\r\n      if (next == 0) {\r\n        this.accountTaken = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    for (let property in changes) {\r\n      if (property == 'open' && \r\n            !changes[property].firstChange &&\r\n              changes[property].currentValue != null) {\r\n        this.open = true;\r\n        this.resetGroup();\r\n      }\r\n    }\r\n  }\r\n\r\n  resetGroup() {\r\n\r\n    this.referralGroup = new FormGroup({\r\n      gender: new FormControl(null),\r\n      dob: new FormControl('', Validators.required),\r\n      title: new FormControl(null),\r\n      lastname: new FormControl('', Validators.required),\r\n      firstname: new FormControl('', Validators.required),\r\n      middlename: new FormControl('', Validators.required),\r\n      tempaccountName: new FormControl(''),\r\n      appendName: new FormControl(''),\r\n      accountNo: new FormControl(''),\r\n      organisation: new FormControl(''),\r\n      type: new FormControl(0),\r\n\r\n      addresses: new FormArray([this.createAddress()]),\r\n      contacts: new FormArray([this.createContact()]),\r\n\r\n      branch: new FormControl(''),\r\n      agencyDefinedGroup: new FormControl(''),\r\n      recipientCoordinator: new FormControl(''),\r\n      referral: new FormControl(''),\r\n\r\n      confirmation: new FormControl(null)\r\n    });\r\n\r\n\r\n    this.populateDropdowns();\r\n\r\n    this.referralGroup.get('organisation').valueChanges\r\n      .pipe(distinctUntilChanged(), debounceTime(200), mergeMap(x => {\r\n        if (x) return this.clientS.isAccountNoUnique(x)\r\n        else return of(-1)\r\n      }))\r\n      .subscribe(data => {\r\n        this.processOutput(data);\r\n      });\r\n\r\n    this.referralGroup.get('appendName').valueChanges\r\n      .pipe(debounceTime(300))\r\n      .subscribe(data => {\r\n        this.referralGroup.patchValue({\r\n          tempaccountName: this.appendAccount(),\r\n          confirmation: null\r\n        });\r\n      });\r\n\r\n    this.referralGroup.get('firstname').valueChanges\r\n      .pipe(debounceTime(300))\r\n      .subscribe(data => {\r\n        this.verifyAccount.next();\r\n      });\r\n\r\n    this.referralGroup.get('dob').valueChanges\r\n      .pipe(debounceTime(300))\r\n      .subscribe(data => {\r\n        this.verifyAccount.next();\r\n      });\r\n\r\n    this.referralGroup.get('lastname').valueChanges\r\n      .pipe(debounceTime(300))\r\n      .subscribe(data => {\r\n        this.verifyAccount.next();\r\n      });\r\n    \r\n    this.referralGroup.get('middlename').valueChanges\r\n      .pipe(debounceTime(300))\r\n      .subscribe(data => {\r\n        this.verifyAccount.next();\r\n      });\r\n\r\n    this.referralGroup.get('gender').valueChanges\r\n      .pipe(debounceTime(300))\r\n      .subscribe(data => {\r\n        this.verifyAccount.next();\r\n      });\r\n\r\n\r\n    this.referralGroup.get('title')\r\n      .valueChanges\r\n      .subscribe((data: string) => {\r\n        const title = data.toUpperCase();\r\n        if (title == 'MR') {\r\n          this.referralGroup.patchValue({ gender: 'MALE' })\r\n        } else if (title == 'MS' || title == 'MRS') {\r\n          this.referralGroup.patchValue({ gender: 'FEMALE' })\r\n        } else {\r\n          this.referralGroup.patchValue({ gender: '' })\r\n        }\r\n        this.verifyAccount.next();\r\n      });\r\n\r\n  }\r\n\r\n  // contactTypeChange(index: number) {\r\n  //   var contact = this.referralGroup.get('contacts') as FormArray;\r\n  //   contact.controls[index].get('contact').reset();\r\n  // }\r\n\r\n  resetappendName(): void {\r\n    this.referralGroup.get('appendName').disable;\r\n    this.referralGroup.patchValue({\r\n      appendName: ''\r\n    });\r\n    this.referralGroup.get('appendName').enable;\r\n  }\r\n\r\n  processOutput(data: number, isStrIncluded: boolean = false): void {\r\n    let obj = null;\r\n    if (data == 1) {\r\n      obj = {\r\n        accountNo: !isStrIncluded ? this.generateAccount() : this.appendAccount(),\r\n        confirmation: true\r\n      }\r\n    }\r\n\r\n    if (data == 0) {\r\n      obj = {\r\n        accountNo: this.generateAccount(),\r\n        tempaccountName: this.generateAccount(),\r\n        confirmation: false\r\n      }\r\n      this.errorStr = 'Account is taken';\r\n    }\r\n\r\n    //\r\n    if (data == -1) {\r\n      obj = {\r\n        accountNo: this.generateAccount(),\r\n        confirmation: false\r\n      }\r\n      this.errorStr = this.type == 'referral' ? 'Lastname and Firstname are required' : 'Organisation Name required';\r\n    }\r\n    this.referralGroup.patchValue(obj);\r\n    this.loading = false;\r\n  }\r\n\r\n  _keydown(event: KeyboardEvent) {\r\n    // numbers only /[0-9\\+\\-\\ ]/\r\n    if (!event.key.match(/^[a-zA-Z ]*$/)) return false;\r\n  }\r\n\r\n  isNamesComplete(): boolean {\r\n    return !this.globalS.isEmpty(this.referralGroup.get('lastname').value) &&\r\n      !this.globalS.isEmpty(this.referralGroup.get('firstname').value);\r\n  }\r\n\r\n  isNameDataValidated(): boolean {\r\n    if (!this.globalS.isEmpty(this.referralGroup.get('lastname').value) &&\r\n      !this.globalS.isEmpty(this.referralGroup.get('firstname').value)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  generateAccount(): string {\r\n    const fname = (this.referralGroup.get('firstname').value).trim();\r\n    const lname = (this.referralGroup.get('lastname').value).trim();\r\n    const birthdate = this.referralGroup.get('dob').value ? moment(this.referralGroup.get('dob').value).format('YYYYMMDD') : '';\r\n    const gender = this.referralGroup.get('gender').value ? ' (' + (this.referralGroup.get('gender').value).trim()[0] + ') ' : '';\r\n\r\n    var _account = this.type === 'referral' ? lname + ' ' + fname + gender + ' ' + birthdate : (this.referralGroup.get('organisation').value).trim();\r\n    return _account.toUpperCase() || '';\r\n  }\r\n\r\n  appendAccount(): string {\r\n    var tName = (this.referralGroup.get('tempaccountName').value).trim();\r\n    var aName = (this.referralGroup.get('appendName').value).trim();\r\n\r\n    return (tName + aName.toUpperCase()) || '';\r\n  }\r\n\r\n  populateDropdowns(): void {\r\n    this.clientS.getcontacttype().subscribe(data => {\r\n      this.contactType = data.map(x => {\r\n        return (new RemoveFirstLast().transform(x.description)).trim();\r\n      });\r\n    })\r\n    this.clientS.getaddresstype().subscribe(data => {\r\n      this.addressType = data.map(x => {\r\n        return new RemoveFirstLast().transform(x.description)\r\n      });\r\n    })\r\n    this.listS.getlistbranches().subscribe(data => this.branches = data);\r\n    this.clientS.getmanagers().subscribe(data => this.managers = data);\r\n    this.listS.getserviceregion().subscribe(data => this.agencies = data);\r\n  }\r\n\r\n  add() {\r\n    this.referralGroup.controls[\"dob\"].setValue(this.referralGroup.value.dob ? moment(this.referralGroup.value.dob).format() : '')\r\n    var manager = (this.managers[this.referralGroup.get('recipientCoordinator').value] as any);\r\n    this.referralGroup.controls[\"recipientCoordinator\"].setValue(manager.description);\r\n\r\n    this.filterContacts(<FormArray>this.referralGroup.controls.contacts);\r\n    this.filterAddress(<FormArray>this.referralGroup.controls.addresses);\r\n\r\n    console.log(this.referralGroup.value);\r\n    \r\n    this.openRefer.emit({\r\n      address: \"\",\r\n      agencyDefinedGroup: \"KYOGLE\",\r\n      code: \"SSSD ASDD (M)  20200620\",\r\n      contact: \"\",\r\n      id: \"T0100005782\",\r\n      view: \"recipient\"\r\n    });\r\n\r\n    // this.clientS.postprofile(this.referralGroup.value)\r\n    //   .subscribe(data => {\r\n    //     this.handleCancel();\r\n    //     this.openRefer.emit(data);\r\n    //     this.globalS.sToast('Success', 'Recipient Added')        \r\n    //   });\r\n  }\r\n\r\n  clearFormArray = (formArray: FormArray) => {\r\n    while (formArray.length !== 0) {\r\n      formArray.removeAt(0)\r\n    }\r\n  }\r\n\r\n  filterContacts(arr: FormArray) {\r\n\r\n    let contacts: Array<any> = arr.value;\r\n    let filteredResults = []; \r\n\r\n    if (contacts && contacts.length > 0) {\r\n      filteredResults = contacts.filter(e => !this.globalS.isEmpty(e.contacttype) && !this.globalS.isEmpty(e.contact))\r\n    }\r\n\r\n    this.clearFormArray(arr);\r\n\r\n    if(filteredResults.length > 0){\r\n      for (var a = 0; a < filteredResults.length; a++) {\r\n        let contactsFormArray = this.referralGroup.get('contacts') as FormArray;\r\n\r\n        contactsFormArray.push(this.formBuilder.group({\r\n          contacttype: new FormControl(filteredResults[a].contacttype),\r\n          contact: new FormControl(filteredResults[a].contact)\r\n        }));\r\n      }    \r\n    }\r\n    \r\n  }\r\n\r\n  filterAddress(arr: FormArray) {\r\n    \r\n    let addresses: Array<any> = arr.value;\r\n    let filteredResults = [];\r\n\r\n    if (addresses && addresses.length > 0) {\r\n      filteredResults = addresses.filter(e => !this.globalS.isEmpty(e.address1) && !this.globalS.isEmpty(e.type) && !this.globalS.isEmpty(e.suburb))\r\n    }\r\n\r\n    this.clearFormArray(arr);\r\n    if (filteredResults.length > 0) {\r\n      for (var a = 0; a < filteredResults.length; a++) {\r\n        let addressForm = this.referralGroup.get('addresses') as FormArray;\r\n\r\n        addressForm.push(this.formBuilder.group({\r\n          address1: new FormControl(filteredResults[a].address1),\r\n          type: new FormControl(filteredResults[a].type),\r\n          suburb: new FormControl(filteredResults[a].suburb)\r\n        }));\r\n      }\r\n    }   \r\n  }\r\n\r\n  addAddress(): void {\r\n    this.addresses = this.referralGroup.get('addresses') as FormArray;\r\n    this.addresses.push(this.createAddress());\r\n  }\r\n\r\n  deleteAdd(i: number): void {\r\n    this.addresses = this.referralGroup.get('addresses') as FormArray;\r\n    this.addresses.removeAt(i);\r\n  }\r\n\r\n  createAddress(): FormGroup {\r\n    return this.formBuilder.group({\r\n      address1: new FormControl(''),\r\n      type: new FormControl(''),\r\n      suburb: new FormControl('')\r\n    });\r\n  }\r\n\r\n  addContact(): void {\r\n    this.contacts = this.referralGroup.get('contacts') as FormArray;\r\n    this.contacts.push(this.createContact());\r\n  }\r\n\r\n  deleteCont(i: number): void {\r\n    this.contacts = this.referralGroup.get('contacts') as FormArray;\r\n    this.contacts.removeAt(i);\r\n  }\r\n\r\n  createContact(): FormGroup {\r\n    return this.formBuilder.group({\r\n      contacttype: new FormControl('MOBILE'),\r\n      contact: new FormControl('')\r\n    });\r\n  }\r\n\r\n  verify() {\r\n\r\n    if (!this.isNameDataValidated()) {\r\n      this.processOutput(-1);\r\n      return;\r\n    }\r\n\r\n    const account = this.referralGroup.get('tempaccountName').value;\r\n\r\n    this.clientS.isAccountNoUnique(account)\r\n      .subscribe(data => {\r\n        this.processOutput(data);\r\n      });\r\n  }\r\n\r\n  isPhoneNumber(fg: FormGroup): boolean {\r\n    let type = fg.value.contacttype;\r\n\r\n    if (!type)  return false;\r\n    type = type.toUpperCase();     \r\n    \r\n    return type === 'FAX' || type === 'HOME' || type === 'MOBILE' || type === 'PHONE' || type === 'WORK MOBILE' || type === 'WORK';\r\n  }\r\n\r\n  handleCancel() {\r\n    this.open = false;\r\n    this.generatedAccount = null;\r\n    this.accountTaken = null;\r\n    this.current = 0;\r\n\r\n    this.resetGroup();\r\n  }\r\n\r\n  next() {\r\n    this.current += 1;\r\n  }\r\n\r\n  pre() {\r\n    this.current -= 1;\r\n  }\r\n\r\n  onKeyPress(data: KeyboardEvent) {\r\n    return this.globalS.acceptOnlyLetters(data);\r\n  }\r\n\r\n  get canGoNext(): boolean {\r\n    //if (this.current == 0) return true;\r\n    if (this.current == 0 && this.accountTaken == false) return true;\r\n    if (this.current == 1) return true;\r\n    if (this.current == 2) return true;\r\n    return false;\r\n  }\r\n\r\n  get canBeDone(): boolean {\r\n    let { branch, agencyDefinedGroup, recipientCoordinator } = this.referralGroup.value;\r\n    return !this.globalS.isEmpty(branch) && !this.globalS.isEmpty(agencyDefinedGroup) && !this.globalS.isEmpty(recipientCoordinator)\r\n  }\r\n\r\n  contactTypeChange(index: any) {\r\n    var contact = this.referralGroup.get('contacts') as FormArray;\r\n    contact.controls[index].get('contact').reset();\r\n  }\r\n\r\n}\r\n","<nz-modal [(nzVisible)]=\"open\" [nzWidth]=\"800\" nzTitle=\"Add New Referral\" (nzOnCancel)=\"handleCancel()\">\r\n    \r\n    <div nz-row>\r\n        <div class=\"flexy\">\r\n        \r\n            <nz-steps [nzSize]=\"'small'\" [nzCurrent]=\"current\" nzDirection=\"vertical\">\r\n                <nz-step class=\"mini\" nzTitle=\"Profile Information\" nzDescription=\"\"></nz-step>\r\n                <nz-step class=\"mini\" nzTitle=\"Contact Details\" nzDescription=\"\"></nz-step>\r\n                <nz-step class=\"mini\" nzTitle=\"Address Details\" nzDescription=\"\"></nz-step>\r\n                <nz-step class=\"mini\" nzTitle=\"Other Details\" nzDescription=\"\"></nz-step>\r\n            </nz-steps>\r\n        \r\n            <nz-divider class=\"full-height\" nzType=\"vertical\"></nz-divider>\r\n        \r\n            <div class=\"steps-content\" >\r\n                <div nz-row *ngIf=\"current == 0\" [formGroup]=\"referralGroup\">\r\n                    <div nz-row nzGutter=\"32\">\r\n                     \r\n                        <div nz-col nzSpan=\"5\">\r\n                            <div class=\"form-group\">\r\n                                <nz-select nzAllowClear nzPlaceHolder=\"Title\" formControlName=\"title\">\r\n                                    <nz-option *ngFor=\"let l of titlesArr\" [nzLabel]=\"l\" [nzValue]=\"l\"></nz-option>\r\n                                </nz-select>\r\n                            </div>\r\n                        </div>\r\n                     \r\n                        <div nz-col nzSpan=\"7\">\r\n                            <div class=\"form-group\">\r\n                                <nz-select nzAllowClear nzPlaceHolder=\"Gender\" formControlName=\"gender\">\r\n                                    <nz-option *ngFor=\"let l of genderArr\" [nzLabel]=\"l\" [nzValue]=\"l\"></nz-option>\r\n                                </nz-select>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div nz-row >\r\n                        <div class=\"form-group\">\r\n                            <nz-date-picker nzPlaceHolder=\"Birthdate\" formControlName=\"dob\" [nzFormat]=\"dateFormat\"></nz-date-picker>\r\n                        </div>\r\n                    </div>\r\n                    <div nz-row nzGutter=\"16\">\r\n                        <div nz-col nzSpan=\"8\">\r\n                            <div class=\"form-group\">\r\n                                <input nz-input (keypress)=\"onKeyPress($event)\" placeholder=\"Surname\" formControlName=\"lastname\" autocomplete=\"nofill\" oninput=\"this.value = this.value.toUpperCase()\"  />\r\n                            </div>\r\n                        </div>\r\n                        <div nz-col nzSpan=\"8\">\r\n                            <div class=\"form-group\">\r\n                                <input nz-input (keypress)=\"onKeyPress($event)\" placeholder=\"Firstname\" formControlName=\"firstname\" autocomplete=\"nofill\" oninput=\"this.value = this.value.toUpperCase()\"  />\r\n                            </div>\r\n                        </div>\r\n                        <div nz-col nzSpan=\"8\">\r\n                            <div class=\"form-group\">\r\n                                <input nz-input (keypress)=\"onKeyPress($event)\" placeholder=\"Middlename\" formControlName=\"middlename\" autocomplete=\"nofill\" oninput=\"this.value = this.value.toUpperCase()\"  />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"account-name\" [class.error]=\"accountTaken\">{{ referralGroup.get('accountNo').value }}</div>\r\n                    <div class=\"message\" *ngIf=\"accountTaken\" [class.error]=\"accountTaken\">Account is taken</div>\r\n                    <div class=\"message\" *ngIf=\"accountTaken == false\" [class.error]=\"accountTaken\">Account is available</div>\r\n                </div>\r\n\r\n                <div nz-row *ngIf=\"current == 1\">\r\n                    <button class=\"botton success\" (click)=\"addContact()\">Add Contact</button>\r\n\r\n                    <div [formGroup]=\"referralGroup\">\r\n                        <div nz-row nzGutter=\"16\" formArrayName=\"contacts\" *ngFor=\"let item of referralGroup.get('contacts')['controls']; let i = index;\">\r\n                            <div class=\"ref-form\" [formGroupName]=\"i\">\r\n                                <div class=\"close\"><i nz-icon nzType=\"close\" nzTheme=\"outline\" (click)=\"deleteCont(i)\"></i></div>\r\n                                <div nz-col nzSpan=\"12\">\r\n                                    <label for=\"\">Type</label>\r\n                                    <nz-radio-group formControlName=\"contacttype\" (ngModelChange)=\"contactTypeChange(i)\">\r\n                                        <label nz-radio nzValue=\"MOBILE\">Mobile</label>\r\n                                        <label nz-radio nzValue=\"EMAIl\">Email</label>\r\n                                        <label nz-radio nzValue=\"HOME\">Home</label>\r\n                                        <label nz-radio nzValue=\"WORK\">Work</label>\r\n                                    </nz-radio-group>\r\n                                </div>\r\n                                <div nz-col nzSpan=\"12\">\r\n                                    <label for=\"\">Detail</label>\r\n                                    <app-phonefax *ngIf=\"isPhoneNumber(item)\" [isMobile]=\"item.value.contacttype == 'MOBILE'\" formControlName=\"contact\"></app-phonefax>\r\n                                    <input nz-input *ngIf=\"!isPhoneNumber(item)\" (keypress)=\"onKeyPress($event)\" formControlName=\"contact\" autocomplete=\"nofill\"\r\n                                        oninput=\"this.value = this.value.toUpperCase()\" />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div nz-row *ngIf=\"current == 2\">\r\n                    <button class=\"botton success\" (click)=\"addAddress()\">Add Address</button>\r\n\r\n                    <div [formGroup]=\"referralGroup\">\r\n                        <div nz-row formArrayName=\"addresses\" *ngFor=\"let item of referralGroup.get('addresses')['controls']; let i = index;\">\r\n                            <div class=\"ref-form\" [formGroupName]=\"i\">\r\n                                <div class=\"close\"><i nz-icon nzType=\"close\" nzTheme=\"outline\" (click)=\"deleteAdd(i)\"></i></div>\r\n                                <div nz-row nzGutter=\"16\">\r\n                                    <div class=\"form-group\" nz-col nzSpan=\"12\">\r\n                                        <label for=\"\">Description</label>\r\n                                        <nz-select nzAllowClear nzPlaceHolder=\"Gender\" formControlName=\"type\">\r\n                                            <nz-option *ngFor=\"let _add of addressType\" [nzLabel]=\"_add\" [nzValue]=\"_add\"></nz-option>\r\n                                        </nz-select>\r\n                                    </div>\r\n                                    <div class=\"form-group\" nz-col nzSpan=\"12\">\r\n                                        <label for=\"\">Postcode & Suburb</label>\r\n                                        <suburb formControlName=\"suburb\"></suburb>\r\n                                    </div>\r\n                                </div>\r\n                                <div nz-row>\r\n                                    <div nz-col nzSpan=\"24\">\r\n                                        <label for=\"\">Address</label>\r\n                                        <input nz-input formControlName=\"address1\" autocomplete=\"nofill\" oninput=\"this.value = this.value.toUpperCase()\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div nz-row *ngIf=\"current == 3\">\r\n                    <div [formGroup]=\"referralGroup\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Branch</label>\r\n                            <nz-select nzAllowClear nzPlaceHolder=\"Gender\" formControlName=\"branch\">\r\n                                <nz-option *ngFor=\"let l of branches\" [nzLabel]=\"l\" [nzValue]=\"l\"></nz-option>\r\n                            </nz-select>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Agency Category</label>\r\n                            <nz-select nzAllowClear nzPlaceHolder=\"Gender\" formControlName=\"agencyDefinedGroup\">\r\n                                <nz-option *ngFor=\"let l of agencies\" [nzLabel]=\"l\" [nzValue]=\"l\"></nz-option>\r\n                            </nz-select>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Case Manager</label>\r\n                            <nz-select nzAllowClear nzPlaceHolder=\"Gender\" formControlName=\"recipientCoordinator\">\r\n                                <nz-option *ngFor=\"let l of managers;let i = index\" [nzLabel]=\"l.description\" [nzValue]=\"i\"></nz-option>\r\n                            </nz-select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div *nzModalFooter>\r\n        <ng-container>\r\n            <button nz-button nzType=\"default\" (click)=\"pre()\" *ngIf=\"current > 0\">\r\n                <span>Previous</span>\r\n            </button>\r\n            <button nz-button nzType=\"default\" (click)=\"next()\" *ngIf=\"current < 3\" [disabled]=\"!canGoNext\">\r\n                <span>Next</span>\r\n            </button>\r\n            <button nz-button nzType=\"primary\" (click)=\"add()\" *ngIf=\"current === 3\" [disabled]=\"!canBeDone\">\r\n                <span>Done</span>\r\n            </button>\r\n        </ng-container>\r\n    </div>\r\n</nz-modal>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\n\r\nimport { GlobalService, roles } from '@services/index';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-breadcrumbs',\r\n  templateUrl: './breadcrumbs.component.html',\r\n  styleUrls: ['./breadcrumbs.component.css']\r\n})\r\n  \r\nexport class BreadcrumbsComponent implements OnInit {\r\n  role: string;\r\n  breadcrumbs: Array<any> = [];\r\n\r\n  isAdmin: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private globalS: GlobalService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) { \r\n    this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd)\r\n    ).subscribe(event => {\r\n      this.breadcrumbs = this.removeHomeRoutes(this.createBreadCrumb(this.activatedRoute.root));    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const { role } = this.globalS.decode();\r\n    //if (role == roles.admin) {\r\n      this.isAdmin = true;\r\n    //}\r\n    this.role = role;\r\n  }\r\n\r\n  removeHomeRoutes(routes: Array<any>): Array<any> {\r\n    let finalRoutes = [...routes];\r\n\r\n    if (finalRoutes.length === 0) {\r\n      return routes;\r\n    }\r\n\r\n    var removeIndexes = [];\r\n    for (let route in routes) {\r\n      const url = routes[route].label;\r\n      if (url === 'admin' || url === 'landing') {\r\n        removeIndexes.push(parseInt(route));\r\n      }\r\n    }\r\n\r\n    for (var i = removeIndexes.length - 1; i >= 0; i--)\r\n      finalRoutes.splice(removeIndexes[i], 1);\r\n\r\n    finalRoutes.forEach(x => x.label = x.label.replace(/^\\w/, c => c.toUpperCase()));\r\n\r\n    return finalRoutes;\r\n  }\r\n\r\n  createBreadCrumb(route: ActivatedRoute, url: string = '', breadcrumbs: Array<any> = []): Array<any> {\r\n    const children: Array<ActivatedRoute> = route.children;\r\n\r\n    if (children.length === 0) {\r\n      return breadcrumbs;\r\n    }\r\n\r\n    for (var child of children) {\r\n      const routeURL: string = child.snapshot.url.map(x => x.path).join('/');\r\n      if (routeURL !== '') {\r\n        url += `/${routeURL}`;\r\n      }\r\n      breadcrumbs.push({ label: routeURL, url: url })\r\n      return this.createBreadCrumb(child, url, breadcrumbs);\r\n    }\r\n  }\r\n\r\n  toHome() {\r\n    if(this.role === roles.admin)\r\n      this.router.navigate(['/admin/landing']);\r\n    \r\n    if (this.role === roles.client)\r\n      this.router.navigate(['/client/profile']);\r\n    \r\n    if (this.role === roles.provider)\r\n      this.router.navigate(['/provider/profile']);\r\n  }\r\n\r\n  show(route: any) {\r\n    this.router.navigate([route.url]);\r\n  }\r\n\r\n}\r\n","<nz-breadcrumb>\r\n    <nz-breadcrumb-item (click)=\"toHome()\"><a [class.admin]=\"isAdmin\">Home</a></nz-breadcrumb-item>\r\n    <nz-breadcrumb-item *ngFor=\"let crumb of breadcrumbs\" (click)=\"show(crumb)\"><a [class.admin]=\"isAdmin\">{{  crumb.label }}</a>\r\n    </nz-breadcrumb-item>\r\n</nz-breadcrumb>"," import {\r\n    Component,\r\n    ChangeDetectionStrategy,\r\n    ViewChild,\r\n    TemplateRef,\r\n    Input,\r\n    OnInit,\r\n    OnDestroy,\r\n    AfterViewInit\r\n  } from '@angular/core';\r\nimport {\r\n  startOfDay,\r\n  endOfDay,\r\n  subDays,\r\n  addDays,\r\n  isSameDay,\r\n  isSameMonth,\r\n  addHours\r\n} from 'date-fns';\r\n\r\nimport { takeUntil, delay } from 'rxjs/operators';\r\n\r\nimport parseISO from 'date-fns/parseISO';\r\nimport parse from 'date-fns/parse';\r\nimport startOfMonth from 'date-fns/startOfMonth';\r\nimport endOfMonth from 'date-fns/endOfMonth';\r\nimport startOfWeek from 'date-fns/startOfWeek';\r\nimport endOfWeek from 'date-fns/endOfWeek';\r\nimport format from 'date-fns/format';\r\nimport sub from 'date-fns/sub';\r\nimport add from 'date-fns/add';\r\n\r\nimport { GlobalService, StaffService, leaveTypes, roles } from '@services/index';\r\nimport { Subject } from 'rxjs';\r\n// import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  CalendarEvent,\r\n  CalendarEventAction,\r\n  CalendarEventTimesChangedEvent,\r\n  CalendarView\r\n} from 'angular-calendar';\r\n\r\nconst currDateMoment = new Date();\r\n\r\ninterface RosterEvent {\r\n  billRate: string,\r\n  carer: string,\r\n  client: string,\r\n  endTime: string,\r\n  notes: string,\r\n  recordNo: string,\r\n  service: string,\r\n  startTime: string,\r\n  status: string,\r\n  type: string\r\n}\r\n\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3'\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF'\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA'\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./calendar.component.css'],\r\n  styles: [`\r\n        h3 {\r\n            margin: 0 0 10px;\r\n        }\r\n\r\n        pre {\r\n            background-color: #f5f5f5;\r\n            padding: 15px;\r\n        }\r\n        .btn-group div{\r\n            padding: 4px 5px;\r\n            font-size: 14px;\r\n        }\r\n        mwl-calendar-month-view >>> mwl-calendar-month-view-header > div.cal-header > div{\r\n            font-weight: 400;\r\n        }\r\n        nz-select{\r\n            float: right;\r\n            margin: 0 0 10px 0;\r\n        }\r\n    `],\r\n  templateUrl: './calendar.component.html',\r\n})\r\nexport class CalendarComponent implements OnInit, OnDestroy, AfterViewInit {\r\n  \r\n  @Input() accountNo;\r\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\r\n\r\n  private unsubscribe$ = new Subject();\r\n\r\n  view: CalendarView = CalendarView.Month;\r\n\r\n  CalendarView = CalendarView;\r\n\r\n  viewDate: Date = new Date();\r\n\r\n  temporaryEvents: CalendarEvent[];\r\n\r\n  timeArray: Array<number> = [5, 10, 15, 30];\r\n\r\n  hourSegments: number;\r\n  minuteInterval: number;\r\n  dayLimit: number = 10;\r\n\r\n  modalData: {\r\n    action: string;\r\n    event: CalendarEvent;\r\n  };\r\n\r\n  isVisible: boolean = false;\r\n  toggleAdminFees: boolean = false;\r\n  title: string;\r\n\r\n  rosterData: RosterEvent;\r\n  roles: any = roles;\r\n  user: any;\r\n\r\n  loadDate: boolean = false;\r\n  // actions: CalendarEventAction[] = [\r\n  //     {\r\n  //         label: '<i class=\"fa fa-fw fa-pencil\"></i>',\r\n  //         a11yLabel: 'Edit',\r\n  //         onClick: ({ event }: { event: CalendarEvent }): void => {\r\n  //             this.handleEvent('Edited', event);\r\n  //         }\r\n  //     },\r\n  //     {\r\n  //         label: '<i class=\"fa fa-fw fa-times\"></i>',\r\n  //         a11yLabel: 'Delete',\r\n  //         onClick: ({ event }: { event: CalendarEvent }): void => {\r\n  //             this.events = this.events.filter(iEvent => iEvent !== event);\r\n  //             this.handleEvent('Deleted', event);\r\n  //         }\r\n  //     }\r\n  // ];\r\n\r\n  refresh: Subject<any> = new Subject();\r\n  events: CalendarEvent[] = [];\r\n  activeDayIsOpen: boolean = false;\r\n\r\n  constructor(\r\n    // private modal: NgbModal\r\n    private staffS: StaffService,\r\n    private globalS: GlobalService\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.user = this.globalS.decode();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.user.role === roles.provider) {\r\n      this.loadDate = true;\r\n      this.staffS.getmobilefuturelimit(this.user.nameid).pipe(delay(500)).subscribe(data => {\r\n        console.log(data)\r\n        if (data.dayLimit != 0) {\r\n          this.dayLimit = data.dayLimit;\r\n        }\r\n        this.dateChanged(new Date(), this.view)\r\n      });\r\n    }\r\n\r\n    if (this.user.role === roles.client) {\r\n      this.search(\r\n        format(startOfMonth(new Date()), 'yyyy/MM/dd'),\r\n        format(endOfMonth(new Date()), 'yyyy/MM/dd')\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n  }\r\n\r\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\r\n    if (isSameMonth(date, this.viewDate)) {\r\n      if (\r\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\r\n        events.length === 0\r\n      ) {\r\n        this.activeDayIsOpen = false;\r\n      } else {\r\n        this.activeDayIsOpen = true;\r\n      }\r\n      this.viewDate = date;\r\n    }\r\n  }\r\n\r\n  // eventTimesChanged({\r\n  //     event,\r\n  //     newStart,\r\n  //     newEnd\r\n  // }: CalendarEventTimesChangedEvent): void {\r\n  //     this.events = this.events.map(iEvent => {\r\n  //         if (iEvent === event) {\r\n  //             return {\r\n  //                 ...event,\r\n  //                 start: newStart,\r\n  //                 end: newEnd\r\n  //             };\r\n  //         }\r\n  //         return iEvent;\r\n  //     });\r\n  //     this.handleEvent('Dropped or resized', event);\r\n  // }\r\n\r\n  eventTimesChanged({\r\n    event,\r\n    newStart,\r\n    newEnd\r\n  }: CalendarEventTimesChangedEvent): void {\r\n    event.start = newStart;\r\n    event.end = newEnd;\r\n    this.handleEvent('Dropped or resized', event);\r\n    this.refresh.next();\r\n  }\r\n\r\n  handleEvent(action: string, event: any): void {\r\n    this.modalData = { event, action };\r\n    this.rosterData = event.data;\r\n\r\n    const type = parseInt(this.rosterData.type);\r\n    const status = parseInt(this.rosterData.status);\r\n\r\n    if (type == 1) {\r\n      this.title = \"UNASSIGNED BOOKING\";\r\n    }\r\n\r\n    if (type > 1) {\r\n      if (status == 1) this.title = \"ASSIGNED BOOKING\";\r\n      if (status == 2) this.title = \"FINALISED SERVICE\";\r\n      if (status == 3 || status == 4) this.title = `BILLED ${this.rosterData.recordNo}`;\r\n    }\r\n\r\n    this.isVisible = true;\r\n    // this.modal.open(this.modalContent, { size: 'lg' });\r\n  }\r\n\r\n  handleCancel() {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  addEvent(): void {\r\n    this.events = [\r\n      ...this.events,\r\n      {\r\n        title: 'New event',\r\n        start: startOfDay(new Date()),\r\n        end: endOfDay(new Date()),\r\n        color: colors.red,\r\n        draggable: true,\r\n        resizable: {\r\n          beforeStart: true,\r\n          afterEnd: true\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  deleteEvent(eventToDelete: CalendarEvent) {\r\n    this.events = this.events.filter(event => event !== eventToDelete);\r\n  }\r\n\r\n  setView(view: CalendarView) {\r\n    this.view = view;\r\n  }\r\n\r\n  closeOpenMonthViewDay() {\r\n    this.activeDayIsOpen = false;\r\n  }\r\n\r\n  filterDate(datalist: Array<any>, isToggleAdmin: boolean = false, initialLoad: boolean = false) {\r\n\r\n    this.events = datalist.map(x => {\r\n      let totalColors = Object.keys(colors);\r\n\r\n      let sTime = format(parse(x.shift_Start, 'yyyy/MM/dd HH:mm', new Date()), 'HH:mm');\r\n      let eTime = format(parse(x.shift_End, 'yyyy/MM/dd HH:mm', new Date()), 'HH:mm');\r\n\r\n      return {\r\n        start: new Date(x.shift_Start),\r\n        end: new Date(x.shift_End),\r\n        title: `${x.serviceType} |  ${x.carerCode} | ${sTime} - ${eTime}`,\r\n        //actions: this.actions,\r\n        color: colors[totalColors[this.designateColor(x.status, x.type)]],\r\n        data: {\r\n          client: x.clientCode,\r\n          service: x.serviceType,\r\n          carer: x.carerCode,\r\n          startTime: sTime,\r\n          endTime: eTime,\r\n          notes: x.notes,\r\n          recordNo: x.recordNo,\r\n          type: x.type,\r\n          billUnit: x.billUnit,\r\n          billRate: x.billRate,\r\n          status: x.status\r\n        }\r\n      }\r\n    }).filter(x => {\r\n      var type = !isToggleAdmin ? \"14\" : \"\"\r\n      if (x && x.data.type !== type)\r\n        return x;\r\n    });\r\n    this.refresh.next();\r\n  }\r\n\r\n  designateColor(_status: string, _type: string): number {\r\n    const type = parseInt(_type);\r\n    const status = parseInt(_status);\r\n\r\n    if (type == 1) {\r\n      return 0;\r\n    }\r\n\r\n    if (type > 1) {\r\n      if (status == 1) return 6;\r\n      if (status == 2) return 3;\r\n      if (status == 3 || status == 4) return 4;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  search(startDate: any, endDate: any) {\r\n\r\n    this.staffS.getroster({\r\n      RosterType: this.user.role,\r\n      AccountNo: this.user.code,\r\n      StartDate: startDate,\r\n      EndDate: endDate\r\n    }).pipe(\r\n      takeUntil(this.unsubscribe$))\r\n      .subscribe(data => {\r\n        this.temporaryEvents = data;\r\n        console.log(data);\r\n        this.filterDate(this.temporaryEvents, null, true);\r\n      }, err => {\r\n          \r\n      },() =>{\r\n          this.loadDate = false;\r\n      });\r\n  }\r\n\r\n\r\n  dateChanged(event: any, view: string = \"\"): void {\r\n    this.loadDate = true;\r\n\r\n    if (this.view === 'month') {\r\n      const startDate = sub(currDateMoment, { days: this.dayLimit});\r\n      const endDate = add(currDateMoment,{ days: this.dayLimit });\r\n\r\n      this.search(\r\n        format(startDate, 'yyyy/MM/dd'),\r\n        format(endDate, 'yyyy/MM/dd')\r\n      );\r\n    }\r\n\r\n    if (this.view === 'week') {\r\n\r\n      const startDate = sub(currDateMoment, { days: this.dayLimit });\r\n      const endDate = add(currDateMoment, { days: this.dayLimit });\r\n\r\n      this.search(\r\n        format(startDate, 'yyyy/MM/dd'),\r\n        format(endDate, 'yyyy/MM/dd')\r\n      );\r\n    }\r\n\r\n    if (this.view === 'day') {\r\n      const startDate = event;\r\n      this.minuteInterval = 5;\r\n      this.hourSegments = 12;\r\n\r\n      this.loadDate = false;\r\n      // this.search(\r\n      //   moment(startDate).format('YYYY/MM/DD'), \r\n      //   moment(startDate).format('YYYY/MM/DD')\r\n      // );\r\n    }\r\n  }\r\n\r\n  toggle(toggle: boolean) {\r\n    this.filterDate(this.temporaryEvents, toggle);\r\n  }\r\n\r\n  timeSegChange(num: number) {\r\n    if (num == 5) {\r\n      this.hourSegments = 12\r\n    }\r\n\r\n    if (num == 10) {\r\n      this.hourSegments = 6\r\n    }\r\n\r\n    if (num == 15) {\r\n      this.hourSegments = 4\r\n    }\r\n\r\n    if (num == 30) {\r\n      this.hourSegments = 2\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.refresh.next();\r\n    }, 10);\r\n  }\r\n}","<div nz-row>\r\n    <div nz-col nzSpan=\"22\" nzOffset=\"1\">\r\n        <div class=\"row text-center\">\r\n            <div class=\"col-md-4\">\r\n                <div class=\"btn-group\">\r\n                    <div class=\"btn btn-primary\" mwlCalendarPreviousView [view]=\"view\" [(viewDate)]=\"viewDate\"\r\n                        (viewDateChange)=\"dateChanged($event,view);activeDayIsOpen = false;closeOpenMonthViewDay()\">\r\n                        Previous\r\n                    </div>\r\n                    <div class=\"btn btn-outline-secondary\" mwlCalendarToday [(viewDate)]=\"viewDate\"\r\n                        (viewDateChange)=\"dateChanged($event,view);activeDayIsOpen = false;closeOpenMonthViewDay()\">\r\n                        Current {{ view | titlecase }}\r\n                    </div>\r\n                    <div class=\"btn btn-primary\" mwlCalendarNextView [view]=\"view\" [(viewDate)]=\"viewDate\"\r\n                        (viewDateChange)=\"dateChanged($event,view);activeDayIsOpen = false;closeOpenMonthViewDay()\">\r\n                        Next\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <h4>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h4>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <div class=\"btn-group\">\r\n                    <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Month);dateChanged(viewDate)\"\r\n                        [class.active]=\"view === CalendarView.Month\">\r\n                        Month\r\n                    </div>\r\n                    <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Week);dateChanged(viewDate)\"\r\n                        [class.active]=\"view === CalendarView.Week\">\r\n                        Week\r\n                    </div>\r\n                    <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Day);dateChanged(viewDate)\"\r\n                        [class.active]=\"view === CalendarView.Day\">\r\n                        Day\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br />\r\n\r\n        <div nz-row>\r\n            <div *ngIf=\"user.role == roles.client\" nz-col nzSpan=\"22\">\r\n                <nz-switch nzSize=\"small\" [ngModel]=\"toggleAdminFees\" (ngModelChange)=\"toggle($event)\"></nz-switch>\r\n                <label for=\"\" style=\"margin-left:10px\">Admin Fees</label>\r\n            </div>\r\n            <div class=\"clearfix\" *ngIf=\"view === CalendarView.Day\">\r\n                <nz-select nzAllowClear nzPlaceHolder=\"Interval\" [(ngModel)]=\"minuteInterval\"\r\n                    (ngModelChange)=\"timeSegChange($event)\">\r\n                    <nz-option *ngFor=\"let time of timeArray\" [nzLabel]=\"time + ' minutes'\" [nzValue]=\"time\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n        </div>\r\n        <div [ngSwitch]=\"view\">\r\n            <mwl-calendar-month-view *ngSwitchCase=\"CalendarView.Month\" [viewDate]=\"viewDate\" [events]=\"events\"\r\n                [refresh]=\"refresh\" [activeDayIsOpen]=\"activeDayIsOpen\" (dayClicked)=\"dayClicked($event.day)\"\r\n                (eventClicked)=\"handleEvent('Clicked', $event.event)\" (eventTimesChanged)=\"eventTimesChanged($event)\">\r\n            </mwl-calendar-month-view>\r\n            <mwl-calendar-week-view *ngSwitchCase=\"CalendarView.Week\" [viewDate]=\"viewDate\" [events]=\"events\"\r\n                [refresh]=\"refresh\" (eventClicked)=\"handleEvent('Clicked', $event.event)\"\r\n                (eventTimesChanged)=\"eventTimesChanged($event)\">\r\n            </mwl-calendar-week-view>\r\n            <mwl-calendar-day-view *ngSwitchCase=\"CalendarView.Day\" [viewDate]=\"viewDate\" [events]=\"events\"\r\n                [hourSegments]=\"hourSegments\" [dayStartHour]=\"6\" [hourSegmentHeight]=\"28\" [refresh]=\"refresh\"\r\n                (eventClicked)=\"handleEvent('Clicked', $event.event)\" (eventTimesChanged)=\"eventTimesChanged($event)\">\r\n            </mwl-calendar-day-view>\r\n            <div class=\"loading-wrapper\" *ngIf=\"loadDate\">\r\n                <nz-spin nzSimple></nz-spin>\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n</div>\r\n\r\n<nz-modal [(nzVisible)]=\"isVisible\" [nzTitle]=\"title\" (nzOnCancel)=\"handleCancel()\">\r\n    <div>\r\n        <div nz-row class=\"mrg-btm\">\r\n            <div nz-col nzSpan=\"8\" class=\"item\">\r\n                <label for=\"\">Time</label>\r\n                <div>{{ rosterData?.startTime }} - {{ rosterData?.endTime }}</div>\r\n            </div>\r\n        </div>\r\n        <div nz-row class=\"mrg-btm\">\r\n            <div nz-col nzSpan=\"12\" class=\"item\">\r\n                <label for=\"\">Client Code</label>\r\n                <div>{{ rosterData?.client }}</div>\r\n            </div>\r\n            <div nz-col nzSpan=\"12\" class=\"item\">\r\n                <label for=\"\">Carer Code</label>\r\n                <div>{{ rosterData?.carer }}</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div nz-row class=\"mrg-btm\">\r\n            <div nz-col nzSpan=\"8\" class=\"item\">\r\n                <label for=\"\">Service Type</label>\r\n                <div>{{ rosterData?.service }}</div>\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n            <div nz-col nzSpan=\"24\" class=\"item\">\r\n                <label for=\"\">Notes</label>\r\n                <div>{{ rosterData?.notes }}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n    </div>\r\n</nz-modal>","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { UploadFileComponent } from './upload-file/upload-file.component'\r\nimport { NgZorroAntdModule, NZ_I18N, en_US } from 'ng-zorro-antd';\r\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\r\n\r\nimport { RemoveFirstLast, FilterPipe, KeyFilter, MomentTimePackage, KeyValueFilter, FileNameFilter, FileSizeFilter, MonthPeriodFilter, SplitArrayPipe, DayManagerPopulate } from '@pipes/pipes';\r\nimport { ProfileComponent } from './profile/profile.component'\r\n\r\nimport {\r\n  SuburbComponent\r\n} from '@components/index';\r\n\r\nimport {\r\n  ClickOutsideDirective,\r\n  NumberDirective\r\n} from \"../directives/index\";\r\n\r\nimport { CalendarComponent } from './calendar/calendar.component';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\n\r\nimport { HeaderNavComponent } from './header-nav/header-nav.component';\r\nimport { ActionComponent } from './action/action.component';\r\nimport { SearchListComponent } from './search-list/search-list.component';\r\nimport { ContactsDetailsComponent } from './contacts-details/contacts-details.component';\r\nimport { SearchTimesheetComponent } from './search-timesheet/search-timesheet.component';\r\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\r\nimport { DmCalendarComponent } from './dm-calendar/dm-calendar.component';\r\nimport { RecipientPopupComponent } from './recipient-popup/recipient-popup.component';\r\nimport { PhonefaxComponent } from './phonefax/phonefax.component';\r\nimport { MediaComponent } from './media/media.component';\r\nimport { ImageCropperComponent } from './image-cropper/image-cropper.component';\r\nimport { AddReferralComponent } from './add-referral/add-referral.component';\r\nimport { ReferInComponent } from './refer-in/refer-in.component';\r\nimport { IntervalDesignComponent } from './interval-design/interval-design.component';\r\nimport { StaffPopupComponent } from './staff-popup/staff-popup.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UploadFileComponent,\r\n\r\n    //Directives,\r\n    ClickOutsideDirective, NumberDirective,\r\n\r\n    RemoveFirstLast, FilterPipe, KeyFilter, MomentTimePackage, KeyValueFilter, FileNameFilter, FileSizeFilter, MonthPeriodFilter, SplitArrayPipe, DayManagerPopulate,\r\n    ProfileComponent,\r\n    SuburbComponent,\r\n    CalendarComponent,\r\n    HeaderNavComponent,    \r\n    ActionComponent,\r\n    SearchListComponent,\r\n    ContactsDetailsComponent,\r\n    SearchTimesheetComponent,\r\n    BreadcrumbsComponent,\r\n    DmCalendarComponent,\r\n    RecipientPopupComponent,\r\n    PhonefaxComponent,\r\n    MediaComponent,\r\n    ImageCropperComponent,\r\n    AddReferralComponent,\r\n    ReferInComponent,\r\n    IntervalDesignComponent,\r\n    StaffPopupComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgZorroAntdModule,\r\n    NzUploadModule,\r\n    CalendarModule.forRoot({ provide: DateAdapter, useFactory: adapterFactory })\r\n  ],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  exports: [\r\n    UploadFileComponent,\r\n    MonthPeriodFilter,\r\n    SuburbComponent,\r\n    ProfileComponent,\r\n    HeaderNavComponent,\r\n    CalendarComponent,\r\n    ActionComponent,\r\n    SearchListComponent,\r\n    ContactsDetailsComponent,\r\n    SearchTimesheetComponent,\r\n    BreadcrumbsComponent,\r\n    DmCalendarComponent,\r\n    DayManagerPopulate,\r\n    RecipientPopupComponent,\r\n    MediaComponent,\r\n    ImageCropperComponent,\r\n    AddReferralComponent,\r\n    IntervalDesignComponent,\r\n    StaffPopupComponent\r\n  ],\r\n  providers: [\r\n    \r\n  ]\r\n})\r\n  \r\nexport class ComponentModule { }\r\n","import { Component, OnInit, Input, forwardRef, ViewChild, OnDestroy, Inject, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { TimeSheetService, GlobalService, view, ClientService, StaffService, ListService, UploadService, contactGroups, days, gender, types, titles, caldStatuses, roles } from '@services/index';\r\nimport * as _ from 'lodash';\r\nimport { mergeMap, takeUntil, concatMap, switchMap } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\nconst noop = () => {\r\n};\r\n\r\n@Component({\r\n  selector: 'app-contacts-details',\r\n  templateUrl: './contacts-details.component.html',\r\n  styleUrls: ['./contacts-details.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      multi: true,\r\n      useExisting: forwardRef(() => ContactsDetailsComponent),\r\n    }\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n  \r\nexport class ContactsDetailsComponent implements OnInit, OnDestroy, ControlValueAccessor {\r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  @Input() user: any;  \r\n\r\n  private onTouchedCallback: () => void = noop;\r\n  private onChangeCallback: (_: any) => void = noop;\r\n\r\n  innerValue: Dto.ProfileInterface;\r\n  kinsArray: Array<any> = [];\r\n  kindetailsGroup: FormGroup;\r\n  inputForm: FormGroup;  \r\n\r\n  contactGroups: Array<string> = contactGroups;\r\n\r\n  modalOpen: boolean = false;\r\n  postLoading: boolean = false;  \r\n\r\n  selected: any;\r\n\r\n  current: number = 0;\r\n  loading: boolean;\r\n\r\n  constructor(\r\n    private globalS: GlobalService,\r\n    private clientS: ClientService,\r\n    private staffS: StaffService,\r\n    private timeS: TimeSheetService,\r\n    private listS: ListService,\r\n    private formBuilder: FormBuilder,\r\n    private cd: ChangeDetectorRef,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.buildForm();\r\n  }\r\n\r\n  buildForm(): void {\r\n    this.kindetailsGroup = this.formBuilder.group({\r\n      listOrder: [''],\r\n      type: [''],\r\n      name: [''],\r\n      email: [''],\r\n      address1: [''],\r\n      address2: [''],\r\n      suburbcode: [''],\r\n      suburb: [''],\r\n      postcode: [''],\r\n      phone1: [''],\r\n      phone2: [''],\r\n      mobile: [''],\r\n      fax: [''],\r\n      notes: [''],\r\n      oni1: false,\r\n      oni2: false,\r\n      ecode: [''],\r\n      creator: [''],\r\n      recordNumber: null\r\n    });\r\n\r\n    this.inputForm = this.formBuilder.group({\r\n      group: [''],\r\n      listOrder: [''],\r\n      type: [''],\r\n      name: [''],\r\n      email: [''],\r\n      address1: [''],\r\n      address2: [''],\r\n      suburbcode: [''],\r\n      suburb: [''],\r\n      postcode: [''],\r\n      phone1: [''],\r\n      phone2: [''],\r\n      mobile: [''],\r\n      fax: [''],\r\n      notes: [''],\r\n      oni1: false,\r\n      oni2: false,\r\n      ecode: [''],\r\n      creator: [''],\r\n      recordNumber: null\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit(): void{\r\n    \r\n  }\r\n\r\n  ngOnDestroy(): void{\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  searchKin(token: Dto.ProfileInterface){\r\n    this.loading = true;\r\n\r\n    if (token.view == view.recipient) {\r\n      \r\n    }\r\n\r\n    if (token.view == view.staff) {\r\n    \r\n      this.timeS.getcontactskinstaff(token.name)\r\n        .subscribe(data => {\r\n          this.kinsArray = data;\r\n\r\n          if (data.length > 0) {\r\n            this.selected = data[0];\r\n            this.showDetails(data[0]);\r\n          }\r\n          this.loading = false\r\n          this.cd.markForCheck();\r\n          this.cd.detectChanges();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  showDetails(kin: any) {\r\n\r\n    this.timeS.getcontactskinstaffdetails(kin.recordNumber)\r\n      .subscribe(data => {\r\n       \r\n        this.kindetailsGroup.patchValue({\r\n          address1: data.address1,\r\n          address2: data.address2,\r\n          name: data.contactName,\r\n          type: data.contactType,\r\n          email: data.email,\r\n          fax: data.fax,\r\n          mobile: data.mobile,\r\n          notes: data.notes,\r\n          phone1: data.phone1,\r\n          phone2: data.phone2,\r\n          suburbcode: (data.postcode || '').trim() + ' ' + (data.suburb || '').trim(),\r\n          suburb: data.suburb,\r\n          postcode: data.postcode,\r\n          listOrder: data.state,\r\n          oni1: (data.equipmentCode || '').toUpperCase() == 'PERSON1',\r\n          oni2: (data.equipmentCode || '').toUpperCase() == 'PERSON2',\r\n          recordNumber: data.recordNumber\r\n        })\r\n      })\r\n\r\n  }\r\n\r\n  //From ControlValueAccessor interface\r\n  writeValue(value: any) {\r\n    if (value != null) {\r\n      this.innerValue = value;\r\n      this.searchKin(this.innerValue);\r\n    }\r\n  }\r\n\r\n  //From ControlValueAccessor interface\r\n  registerOnChange(fn: any) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  //From ControlValueAccessor interface\r\n  registerOnTouched(fn: any) {\r\n    this.onTouchedCallback = fn;\r\n  }\r\n\r\n  save() {\r\n    if (this.innerValue.view === view.staff)\r\n    {\r\n      var sub = this.kindetailsGroup.get('suburbcode').value;\r\n      let address = sub ? this.getPostCodeAndSuburb(sub) : null;\r\n\r\n      if (!this.globalS.isEmpty(address)) {\r\n        this.kindetailsGroup.controls[\"postcode\"].setValue(address.pcode);\r\n        this.kindetailsGroup.controls[\"suburb\"].setValue(address.suburb);\r\n      }\r\n     \r\n\r\n      if (this.kindetailsGroup.get('oni1').value) {\r\n        this.kindetailsGroup.controls['ecode'].setValue('PERSON1')\r\n      } else if (this.kindetailsGroup.get('oni2').value) {\r\n        this.kindetailsGroup.controls['ecode'].setValue('PERSON2')\r\n      }\r\n\r\n      const details = this.kindetailsGroup.value;\r\n\r\n      this.timeS.updatecontactskinstaffdetails(\r\n        details,\r\n        details.recordNumber\r\n      ).subscribe(data => {    \r\n          this.searchKin(this.innerValue);\r\n          this.globalS.sToast('Success', 'Contact Updated');       \r\n      })\r\n\r\n    }\r\n\r\n    if (this.innerValue.view === view.recipient)\r\n    {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  getPostCodeAndSuburb(address: any): any {\r\n    const rs = address;\r\n    let pcode = /(\\d+)/g.test(rs) ? rs.match(/(\\d+)/g)[0] : \"\";\r\n    let suburb = /(\\D+)/g.test(rs) ? rs.match(/(\\D+)/g)[0].split(',')[0] : \"\";\r\n\r\n    return {\r\n      pcode: pcode.trim() || '',\r\n      suburb: suburb.trim() || ''\r\n    }\r\n  }\r\n\r\n\r\n  get nextRequired() {\r\n    const { group, type, name } = this.inputForm.value;\r\n    \r\n    if (this.current == 0 && this.globalS.isEmpty(group)) {\r\n      return false;\r\n    }\r\n\r\n    if (this.current == 1 && (this.globalS.isEmpty(type) || this.globalS.isEmpty(name)) ) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  add() {\r\n    \r\n\r\n\r\n    if (this.inputForm.controls['suburbcode'].dirty) {\r\n      var rs = this.inputForm.get('suburbcode').value;\r\n      let pcode = /(\\d+)/g.test(rs) ? rs.match(/(\\d+)/g)[0].trim() : \"\";\r\n      let suburb = /(\\D+)/g.test(rs) ? rs.match(/(\\D+)/g)[0].trim() : \"\";\r\n\r\n      if (pcode !== \"\") {\r\n        this.inputForm.controls[\"postcode\"].setValue(pcode);\r\n        this.inputForm.controls[\"suburb\"].setValue(suburb);\r\n      }\r\n    }\r\n\r\n    if (this.inputForm.get('oni1').value) {\r\n      this.inputForm.controls['ecode'].setValue('PERSON1')\r\n    } else if (this.inputForm.get('oni2').value) {\r\n      this.inputForm.controls['ecode'].setValue('PERSON2')\r\n    }\r\n\r\n    this.timeS.postcontactskinstaffdetails(\r\n      this.inputForm.value,\r\n      this.innerValue.id\r\n    ).pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n      this.globalS.sToast('Success', 'Contact Inserted');\r\n      this.searchKin(this.innerValue);\r\n    });\r\n  }\r\n\r\n  delete() {\r\n    this.timeS.deletecontactskin(this.kindetailsGroup.value.recordNumber).subscribe(data => {\r\n      \r\n      if (data) {\r\n        this.globalS.sToast('Success', 'Contact Deleted');\r\n      }\r\n      this.searchKin(this.innerValue);\r\n\r\n    });\r\n  }\r\n\r\n  handleCancel() {\r\n    this.modalOpen = false;\r\n    this.inputForm.reset();\r\n    this.current = 0;\r\n  }\r\n\r\n  pre() {\r\n    this.current -= 1;\r\n  }\r\n\r\n  next() {\r\n    this.current += 1;\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div ng-row >\r\n    <div nz-row>\r\n        <button class=\"botton success\" (click)=\"modalOpen = true\">Add Contact</button>\r\n    </div>\r\n\r\n    <div nz-row nzGutter=\"16\" style=\"padding-top:2rem\">\r\n        \r\n        <div *ngIf=\"loading\" style=\"text-align:center\">\r\n            <nz-spin nzSimple [nzSize]=\"'large'\"></nz-spin>\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"kinsArray?.length > 0 && !loading\">\r\n            <div nz-col nzSpan=\"5\">\r\n                <ul>\r\n                    <li *ngFor=\"let list of kinsArray\">\r\n                        <div (click)=\"showDetails(list); selected = list\" [class.active]=\"selected == list\">\r\n                            <h4>{{ list.contactName | uppercase  }}</h4>\r\n                            <span>{{list.contactType | uppercase}}</span>\r\n                            <i nz-icon nzType=\"right\" nzTheme=\"outline\"></i>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            \r\n            <div nz-col nzSpan=\"18\">\r\n                <div nz-col nzSpan=\"12\">\r\n                    <form nz-form [nzNoColon]=\"true\" [formGroup]=\"kindetailsGroup\">\r\n                        <nz-form-item>\r\n                            <nz-form-label [nzSpan]=\"5\">Type</nz-form-label>\r\n                            <nz-form-control [nzSpan]=\"12\" nzErrorTip=\"Please input your username!\">\r\n                                <input type=\"text\" nz-input formControlName=\"type\" />\r\n                            </nz-form-control>\r\n                        </nz-form-item>\r\n            \r\n                        <nz-form-item>\r\n                            <nz-form-label [nzSpan]=\"5\">Name</nz-form-label>\r\n                            <nz-form-control [nzSpan]=\"12\" nzErrorTip=\"Please input your username!\">\r\n                                <input type=\"text\" nz-input formControlName=\"name\" />\r\n                            </nz-form-control>\r\n                        </nz-form-item>\r\n            \r\n                        <nz-form-item>\r\n                            <nz-form-label [nzSpan]=\"5\">Address 1</nz-form-label>\r\n                            <nz-form-control [nzSpan]=\"19\" nzErrorTip=\"Please input your username!\">\r\n                                <input type=\"text\" nz-input formControlName=\"address1\" />\r\n                            </nz-form-control>\r\n                        </nz-form-item>\r\n            \r\n                        <nz-form-item>\r\n                            <nz-form-label [nzSpan]=\"5\">Address 2</nz-form-label>\r\n                            <nz-form-control [nzSpan]=\"19\" nzErrorTip=\"Please input your username!\">\r\n                                <input type=\"text\" nz-input formControlName=\"address2\" />\r\n                            </nz-form-control>\r\n                        </nz-form-item>\r\n            \r\n                        <nz-form-item>\r\n                            <nz-form-label [nzSpan]=\"5\">Suburb</nz-form-label>\r\n                            <nz-form-control [nzSpan]=\"19\" nzErrorTip=\"Please input your username!\">\r\n                                <suburb formControlName=\"suburbcode\"></suburb>\r\n                            </nz-form-control>\r\n                        </nz-form-item>\r\n            \r\n                        <nz-form-item>\r\n                            <nz-form-label [nzSpan]=\"5\">Phone 1</nz-form-label>\r\n                            <nz-form-control [nzSpan]=\"12\" nzErrorTip=\"Please input your username!\">\r\n                                <app-phonefax formControlName=\"phone1\"></app-phonefax>\r\n                            </nz-form-control>\r\n                        </nz-form-item>\r\n            \r\n                        <nz-form-item>\r\n                            <nz-form-label [nzSpan]=\"5\">Phone 2</nz-form-label>\r\n                            <nz-form-control [nzSpan]=\"12\" nzErrorTip=\"Please input your username!\">\r\n                                <app-phonefax formControlName=\"phone2\"></app-phonefax>\r\n                            </nz-form-control>\r\n                        </nz-form-item>\r\n            \r\n                        <nz-form-item>\r\n                            <nz-form-label [nzSpan]=\"5\">Mobile</nz-form-label>\r\n                            <nz-form-control [nzSpan]=\"12\" nzErrorTip=\"Please input your username!\">\r\n                                <app-phonefax [isMobile]=\"true\" formControlName=\"mobile\"></app-phonefax>\r\n                            </nz-form-control>\r\n                        </nz-form-item>\r\n            \r\n                        <nz-form-item>\r\n                            <nz-form-label [nzSpan]=\"5\">Fax</nz-form-label>\r\n                            <nz-form-control [nzSpan]=\"12\" nzErrorTip=\"Please input your username!\">\r\n                                <app-phonefax formControlName=\"fax\"></app-phonefax>\r\n                            </nz-form-control>\r\n                        </nz-form-item>\r\n            \r\n                        <nz-form-item>\r\n                            <nz-form-label [nzSpan]=\"5\">Email</nz-form-label>\r\n                            <nz-form-control [nzSpan]=\"19\" nzErrorTip=\"Please input your username!\">\r\n                                <input type=\"text\" nz-input formControlName=\"email\" />\r\n                            </nz-form-control>\r\n                        </nz-form-item>\r\n            \r\n                        <nz-form-item>\r\n                            <nz-form-label [nzSpan]=\"5\">List Order</nz-form-label>\r\n                            <nz-form-control [nzSpan]=\"5\" nzErrorTip=\"Please input your username!\">\r\n                                <input type=\"text\" nz-input formControlName=\"listOrder\" />\r\n                            </nz-form-control>\r\n                        </nz-form-item>\r\n            \r\n                        <nz-form-item>\r\n                            <nz-form-label [nzSpan]=\"5\">Notes</nz-form-label>\r\n                            <nz-form-control [nzSpan]=\"12\" nzErrorTip=\"Please input your username!\">\r\n                                <textarea rows=\"4\" nz-input formControlName=\"notes\"></textarea>\r\n                            </nz-form-control>\r\n                        </nz-form-item>\r\n            \r\n                    </form>\r\n                </div>\r\n            \r\n                <div nz-col nzOffset=\"2\" nzSpan=\"10\">\r\n                    <div nz-row nzGutter=\"16\">\r\n                        <div nz-col>\r\n                            <button nz-button nzType=\"primary\" (click)=\"save()\"><i nz-icon nzType=\"save\"\r\n                                    nzTheme=\"outline\"></i>Save</button>\r\n                            <button nz-button nzType=\"default\" nzDanger \r\n                                nz-popconfirm\r\n                                nzPopconfirmTitle=\"Are you sure delete this task?\"\r\n                                nzPopconfirmPlacement=\"bottom\"\r\n                                (nzOnConfirm)=\"delete()\"\r\n                                ><i nz-icon nzType=\"delete\"\r\n                                    nzTheme=\"outline\"></i>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <ng-container>\r\n            <nz-empty *ngIf=\"kinsArray?.length == 0 && !loading\"></nz-empty>\r\n        </ng-container>\r\n        \r\n    </div>   \r\n</div>\r\n\r\n\r\n<nz-modal [nzWidth]=\"700\" [(nzVisible)]=\"modalOpen\" [nzTitle]=\"'Add Contacts'\" (nzOnCancel)=\"handleCancel()\">\r\n    <div class=\"flexy\">\r\n\r\n        <nz-steps [nzSize]=\"'small'\" [nzCurrent]=\"current\" nzDirection=\"vertical\">\r\n            <nz-step class=\"mini\" nzTitle=\"Contact Group\" nzDescription=\"\"></nz-step>\r\n            <nz-step class=\"mini\" nzTitle=\"User Details\" nzDescription=\"\"></nz-step>\r\n            <nz-step class=\"mini\" nzTitle=\"Address & Contact Details\" nzDescription=\"\"></nz-step>\r\n        </nz-steps>\r\n\r\n        <nz-divider class=\"full-height\" nzType=\"vertical\"></nz-divider>\r\n\r\n        <div class=\"steps-content\" [formGroup]=\"inputForm\" style=\"width: 60%;\">\r\n            <div *ngIf=\"current == 0\">\r\n                <label for=\"\">Contact Group</label>\r\n                <nz-select [nzDropdownMatchSelectWidth]=\"false\" style=\"width:100%\" formControlName=\"group\" nzShowSearch nzAllowClear\r\n                    nzPlaceHolder=\"Select a competency\">\r\n                    <nz-option *ngFor=\"let d of contactGroups\" [nzLabel]=\"d\" [nzValue]=\"d\"></nz-option>\r\n                </nz-select>\r\n            </div>\r\n\r\n            <div *ngIf=\"current == 1\">\r\n                <div nz-row class=\"mrg-btm-2\">\r\n                    <input type=\"text\" class=\"uppercase\" nz-input  placeholder=\"Type\" formControlName=\"type\" />\r\n                </div>\r\n                <div nz-row class=\"mrg-btm-2\">\r\n                    <input type=\"text\" class=\"uppercase\" nz-input placeholder=\"Name\" formControlName=\"name\" />\r\n                </div>\r\n                <div nz-row class=\"mrg-btm-2\">\r\n                    <textarea style=\"margin: 0\" rows=\"4\" nz-input placeholder=\"notes\" formControlName=\"notes\"></textarea>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"current == 2\">\r\n                <div nz-row class=\"mrg-btm\">\r\n                    <input type=\"text\" nz-input placeholder=\"Address 1\" formControlName=\"address1\" />\r\n                </div>\r\n                <div nz-row class=\"mrg-btm\">\r\n                    <input type=\"text\" nz-input placeholder=\"Address 2\" formControlName=\"address2\" />\r\n                </div>\r\n                <div nz-row class=\"mrg-btm\">\r\n                    <suburb type=\"text\" [placeholder]=\"'Suburb'\" formControlName=\"suburbcode\" ></suburb>\r\n                </div>\r\n                <div nz-row class=\"mrg-btm\" nzGutter=\"16\">\r\n                    <div nz-col class=\"contact\" nzSpan=\"12\">\r\n                        <label for=\"\">Phone 1</label>\r\n                        <app-phonefax formControlName=\"phone1\"></app-phonefax>\r\n                    </div>\r\n                    <div nz-col class=\"contact\" nzSpan=\"12\">\r\n                        <label for=\"\">Phone 1</label>\r\n                        <app-phonefax formControlName=\"phone2\"></app-phonefax>\r\n                    </div>\r\n                </div>\r\n                <div nz-row class=\"mrg-btm\" nzGutter=\"16\">\r\n                    <div nz-col class=\"contact\" nzSpan=\"12\">\r\n                        <label for=\"\">Mobile</label>\r\n                        <app-phonefax [isMobile]=\"true\" formControlName=\"mobile\"></app-phonefax>\r\n                    </div>\r\n                    <div nz-col class=\"contact\" nzSpan=\"12\">\r\n                        <label for=\"\">Fax</label>\r\n                        <app-phonefax formControlName=\"fax\"></app-phonefax>\r\n                    </div>\r\n                </div>\r\n                <div nz-row  class=\"mrg-btm\">\r\n                    <div nz-col nzSpan=\"15\">\r\n                        <input type=\"text\" nz-input placeholder=\"Email\" formControlName=\"email\" />\r\n                    </div>\r\n                </div>\r\n                <div nz-row nzSpan=\"12\" class=\"mrg-btm\">\r\n                    <div nz-col nzSpan=\"10\">\r\n                        <input type=\"text\" nz-input placeholder=\"List Order\" formControlName=\"listOrder\" />\r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <ng-container>\r\n            <button nz-button nzType=\"default\" (click)=\"pre()\" *ngIf=\"current > 0\">\r\n                <span>Previous</span>\r\n            </button>\r\n            <button nz-button nzType=\"default\" (click)=\"next()\" *ngIf=\"current < 2\" [disabled]=\"!nextRequired\">\r\n                <span>Next</span>\r\n            </button>\r\n            <button nz-button nzType=\"primary\" [nzLoading]=\"postLoading\" (click)=\"add()\" *ngIf=\"current === 2\">\r\n                <span>Save</span>\r\n            </button>\r\n        </ng-container>\r\n    </div>\r\n</nz-modal>","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges, Inject, ElementRef, NgZone, AfterViewInit, OnInit, OnDestroy, Renderer2, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { DOCUMENT } from \"@angular/common\";\r\nimport { TimeSheetService } from '@services/index';\r\nimport { distinctUntilChanged, debounceTime } from 'rxjs/operators';\r\n\r\nimport * as moment from 'moment';\r\nimport format from \"date-fns/format\";\r\nimport { Subscription, Subject } from 'rxjs';\r\n\r\nconst enum ImagePosition {\r\n  LaundryService = '-24px 0px',\r\n  PersonalCare = \"-4px 0px\",\r\n  CaseManagement = \"-71px 0px\",\r\n  StaffTravel = \"1px -21px\",\r\n  Transport = \"-98px 0px\",\r\n  Unavailable = \"-50px 0px\"\r\n}\r\n\r\nconst enum ImageActivity {\r\n  Laundry = 'DA LAUNDRY PRV',\r\n  Personal = 'PERSONAL CARE PKGE',\r\n  Case = 'CASE MANAGEMENT PKGE',\r\n  StaffTravel = 'STAFF TRAVEL',\r\n  Transport = 'TRANSPORT',\r\n  Unavailable = 'UNAVAILABLE'\r\n}\r\n\r\n@Component({\r\n  selector: 'dm-calendar',\r\n  templateUrl: './dm-calendar.component.html',\r\n  styleUrls: ['./dm-calendar.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class DmCalendarComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\r\n\r\n  private paramsSubscription$: Subscription\r\n\r\n  someChange = new Subject<any>()\r\n  toBeSelected = new Subject<any>();\r\n\r\n  isClicked: boolean = false\r\n  coordinates: any\r\n\r\n  fixedHeader: boolean = false\r\n  optionIsClicked: boolean = false;\r\n\r\n  @Input() startDate: any\r\n  @Input() dayView: number\r\n  @Input() reload: number\r\n  @Input() copyPaste: boolean = false\r\n\r\n  @Output() showDetail = new EventEmitter();\r\n  @Output() showOptions = new EventEmitter();\r\n  @Output() highlighted = new EventEmitter();\r\n  @Output() paste = new EventEmitter();\r\n  @Output() data = new EventEmitter();\r\n\r\n  days: any[] = [];\r\n  daymanager: Array<any> = [];\r\n\r\n  loading: boolean = false;\r\n\r\n  constructor(\r\n    private timeS: TimeSheetService,\r\n    private elem: ElementRef,\r\n    private ngZone: NgZone,\r\n    private renderer: Renderer2,\r\n    private cd: ChangeDetectorRef,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n    cd.detach();\r\n\r\n    this.paramsSubscription$ = this.someChange.pipe(\r\n      debounceTime(500))\r\n      .subscribe(data => {\r\n        this.search(this.startDate, this.dayView);\r\n      });\r\n\r\n    this.toBeSelected.pipe(\r\n      distinctUntilChanged())\r\n      .subscribe(data => {\r\n        if (this.akonani.indexOf(data) === -1)\r\n          this.akonani.push(data);\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.days = this.calculateDays(this.startDate, this.dayView);\r\n  }\r\n\r\n  private elemMouseUp;\r\n  private documentMouseUp;\r\n\r\n  ngOnDestroy() {\r\n    this.paramsSubscription$.unsubscribe();\r\n    this.document.removeEventListener('mouseup', this.documentMouseUp, false);\r\n    this.elem.nativeElement.removeEventListener('mouseup', this.elemMouseUp, false);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.cd.reattach();\r\n\r\n    this.ngZone.runOutsideAngular(() => {\r\n\r\n      this.elemMouseUp = (event) => {\r\n        event.stopPropagation();\r\n        this.isClicked = false;\r\n        this.highlighted.emit(this.akonani);\r\n      }\r\n\r\n      this.documentMouseUp = (e) => {\r\n        this.isClicked = false;\r\n\r\n        if (!this.optionIsClicked)\r\n          this.deselect(null, e)\r\n      }\r\n\r\n      this.elem.nativeElement.addEventListener('mouseup', this.elemMouseUp, false);\r\n\r\n      // Will stop highlighting other rosters if mouseup event happened outside of the desired ELEMENT Component\r\n      this.document.addEventListener('mouseup', this.documentMouseUp, false)\r\n\r\n    });\r\n\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    let date;\r\n    if (changes['dayView']) {\r\n      this.dayView = changes['dayView'].currentValue\r\n    }\r\n\r\n    if (changes['startDate']) {\r\n      date = changes['startDate'].currentValue;\r\n    }\r\n\r\n    if (changes['copyPaste'] && !changes['copyPaste'].isFirstChange()) {\r\n      this.copyPaste = changes['copyPaste'].currentValue\r\n      this.highLightCopyWrappers(this.copyPaste)\r\n      return;\r\n    }\r\n\r\n    this.alertChange(date);\r\n  }\r\n\r\n  highLightCopyWrappers(show: boolean) {\r\n    var rosterContainers = this.elem.nativeElement.getElementsByClassName('roster-container')\r\n    if (show) {\r\n      for (let roster of rosterContainers) {\r\n        this.renderer.addClass(roster, 'toCopy')\r\n      }\r\n    } else {\r\n      for (let roster of rosterContainers) {\r\n        this.renderer.removeClass(roster, 'toCopy')\r\n      }\r\n    }\r\n  }\r\n\r\n  showOptionEvent(value: any): void {\r\n\r\n    if (this.akonani.length < 2) {\r\n      var rostersThatDay\r\n      for (var a = 0, len = this.daymanager.length; a < len; a++) {\r\n        if (this.daymanager[a] && this.daymanager[a].key === value.carercode) {\r\n          rostersThatDay = this.daymanager[a].value.filter(x => x.date === value.date)\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.showOptions.emit({ selected: value, diary: rostersThatDay });\r\n  }\r\n\r\n  optionEmitter(data: any) {\r\n    this.optionIsClicked = true;\r\n    this.showOptionEvent(data);\r\n  }\r\n\r\n  mouseEmitter(data: any) {\r\n    data.isSelected = true;\r\n  }\r\n\r\n  alertChange(date: any = this.startDate) {\r\n    console.log(date);\r\n    if (moment(date).isValid()) {\r\n      this.loading = true;\r\n      this.startDate = moment(date);\r\n      this.days = this.calculateDays(this.startDate, this.dayView);\r\n      this.someChange.next()\r\n    }\r\n  }\r\n\r\n  previousDate() {\r\n    this.alertChange(moment(this.startDate).subtract(this.dayView, 'day'));\r\n  }\r\n\r\n  futureDate() {\r\n    this.alertChange(moment(this.startDate).add(this.dayView, 'day'))\r\n  }\r\n\r\n  deselect(data: any = null, $event: any = null): void {\r\n\r\n    if ($event && $event.button == 0) {\r\n      if ($event.target.classList.contains('toCopy')) {\r\n        var date = $event.target.getAttribute('date')\r\n        this.paste.emit({ date: format(new Date(date), 'YYYY/MM/DD') })\r\n        return;\r\n      }\r\n\r\n      this.akonani = []\r\n      this.daymanager.forEach(x => {\r\n        x.value.forEach(element => {\r\n          element.isSelected = false;\r\n        });\r\n      });\r\n\r\n      if (data) {\r\n        data.isSelected = true;\r\n        this.akonani.push(data)\r\n      }\r\n    }\r\n    this.optionIsClicked = false;\r\n  }\r\n\r\n  search(date: any, dayView: number) {\r\n    let sDate = moment(date).format('YYYY/MM/DD');\r\n    let eDate = moment(date).add(dayView - 1, 'days').format('YYYY/MM/DD');\r\n    this.timeS.getdaymanager({ StartDate: sDate, EndDate: eDate }).pipe(\r\n      debounceTime(200))\r\n      .subscribe(data => {\r\n        this.daymanager = data;\r\n        this.data.emit(data);\r\n        this.loading = false;\r\n      })\r\n  }\r\n\r\n  getPositionImg(data: any) {\r\n    let activity = data.Activity;\r\n    if (activity.indexOf(ImageActivity.Unavailable) !== -1) return ImagePosition.Unavailable;\r\n    if (activity.indexOf(ImageActivity.Transport) !== -1) return ImagePosition.Transport;\r\n    if (activity.indexOf(ImageActivity.StaffTravel) !== -1) return ImagePosition.StaffTravel;\r\n    if (activity.indexOf(ImageActivity.Personal) !== -1) return ImagePosition.PersonalCare;\r\n    if (activity.indexOf(ImageActivity.Case) !== -1) return ImagePosition.CaseManagement;\r\n    if (activity.indexOf(ImageActivity.Laundry) !== -1) return ImagePosition.LaundryService;\r\n  }\r\n\r\n  calculateDays(date: any, dayView: number) {\r\n    let temp = date;\r\n    let tempArr: Array<any> = [];\r\n    tempArr.push(null);\r\n    for (var a = 0; a < dayView; a++) {\r\n      tempArr.push(temp);\r\n      temp = moment(temp).add('day', 1);\r\n    }\r\n    return tempArr;\r\n  }\r\n\r\n  drop(event: DragEvent | any) {\r\n    event.stopPropagation();\r\n    //console.log(event.target.getAttribute('date'))\r\n\r\n    if (event.target.getAttribute('date') > 0) {\r\n      var data = event.dataTransfer.getData(\"text\")\r\n      event.target.appendChild(document.getElementById(data));\r\n    }\r\n    //console.log(event)\r\n    //console.log(event)\r\n    //this.daymanager[0].value.push(this.draggedObject)\r\n    //this.daymanager = [{\"key\":\"AHMAD A\",\"value\":[{\"Staff\":\"AHMAD A\",\"UniqueID\":\"T0100005533\",\"CoOrdinator\":\"K AGGARWAL\",\"ServiceOrder/GridNo\":\"jh\",\"RecipientType\":\"RECIPIENT\",\"Category\":\"ARUNDEL\",\"\":\"Male\",\"Recipient\":\"ABBOT T\",\"CarerCode\":\"AHMAD A\",\"Activity\":\"CDC - DA-WD\",\"BillQty\":2,\"DMColor\":\"FFFFFF\",\"JobType\":\"\",\"InfoOnly\":false,\"RosterGroup\":\"ONEONONE\",\"MinorGroup\":\"NOT APPLICABLE\",\"NoChangeDate\":false,\"NoChangeTime\":false,\"TimeChangeLimit\":600,\"StartTimeLimit\":\"06:00\",\"EndTimeLimit\":\"18:00\",\"DayMask\":\"00000111\",\"StaffCategory\":\"\",\"Team\":\"MTA STEPH ARSHAD IRFAN\",\"StfGender\":\"MALE\",\"HRS_FNIGHTLY_MIN\":\"\",\"HRS_FNIGHTLY_MAX\":\"\",\"HRS_WEEKLY_MIN\":\"\",\"HRS_WEEKLY_MAX\":\"\",\"CH_1_1\":\"\",\"CH_1_2\":\"\",\"CH_1_3\":\"\",\"CH_1_4\":\"\",\"CH_1_5\":\"\",\"CH_1_6\":\"\",\"CH_1_7\":\"\",\"ShiftType\":\"CDC - DA-WD\",\"Setting/Location\":\"\",\"rProgram\":\"CDC-L2-001\",\"RecipientCategory/Region\":\"\",\"RecordNo\":904200,\"Date\":\"2019/01/07\",\"YearNo\":2019,\"MonthNo\":1,\"Dayno\":7,\"BillRate\":36,\"BillUnit\":\"HOUR\",\"StartTime\":\"09:00\",\"Duration\":24,\"WkdHrs\":24,\"Type\":2,\"Status\":\"1\",\"Notes\":\"YES\",\"HasServiceNotes\":\"\",\"DMStat\":\"\",\"ShiftName\":\"AHMAD A\",\"EndTime\":\"11:00\"}]},{\"key\":\"AI CLA PT GRAHAM N L\",\"value\":[{\"Staff\":\"AI CLA PT GRAHAM N L\",\"UniqueID\":\"T0100005533\",\"CoOrdinator\":\"K AGGARWAL\",\"ServiceOrder/GridNo\":\"jh\",\"RecipientType\":\"RECIPIENT\",\"Category\":\"ARUNDEL\",\"\":\"Male\",\"Recipient\":\"ABBOT T\",\"CarerCode\":\"AI CLA PT GRAHAM N L\",\"Activity\":\"CDC - DA-WD\",\"BillQty\":0,\"DMColor\":\"FFFFFF\",\"JobType\":\"\",\"InfoOnly\":false,\"RosterGroup\":\"ONEONONE\",\"MinorGroup\":\"NOT APPLICABLE\",\"NoChangeDate\":false,\"NoChangeTime\":false,\"TimeChangeLimit\":600,\"StartTimeLimit\":\"06:00\",\"EndTimeLimit\":\"18:00\",\"DayMask\":\"00000111\",\"StaffCategory\":\"\",\"Team\":\"AI CLA\",\"StfGender\":\"FEMALE\",\"HRS_FNIGHTLY_MIN\":\"\",\"HRS_FNIGHTLY_MAX\":\"\",\"HRS_WEEKLY_MIN\":\"\",\"HRS_WEEKLY_MAX\":\"\",\"CH_1_1\":\"\",\"CH_1_2\":\"\",\"CH_1_3\":\"\",\"CH_1_4\":\"\",\"CH_1_5\":\"\",\"CH_1_6\":\"\",\"CH_1_7\":\"\",\"ShiftType\":\"CDC - DA-WD\",\"Setting/Location\":\"\",\"rProgram\":\"CDC-L2-001\",\"RecipientCategory/Region\":\"\",\"RecordNo\":904202,\"Date\":\"2019/01/09\",\"YearNo\":2019,\"MonthNo\":1,\"Dayno\":9,\"BillRate\":36,\"BillUnit\":\"HOUR\",\"StartTime\":\"10:00\",\"Duration\":12,\"WkdHrs\":12,\"Type\":2,\"Status\":\"1\",\"Notes\":\"YES\",\"HasServiceNotes\":\"\",\"DMStat\":\"\",\"ShiftName\":\"AI CLA PT GRAHAM N L\",\"EndTime\":\"11:00\"}]}]\r\n    this.draggedObject.Date = \"2019/01/09\"\r\n    this.draggedObject.Staff = \"AHMAD A\"\r\n\r\n    //this.daymanager[0].value.push(this.draggedObject);\r\n    //this.daymanager.pop()\r\n    var sample = this.daymanager;\r\n    this.daymanager = []\r\n    this.daymanager = sample;\r\n\r\n    // this.daymanager = this.daymanager;\r\n    //console.log(sample)\r\n  }\r\n\r\n  draggedObject: any;\r\n  dragStart(event: DragEvent | any, value: any) {\r\n    this.draggedObject = value;\r\n    event.target.setAttribute('id', 'selectedCell')\r\n    event.dataTransfer.setData(\"text\", event.target.id);\r\n  }\r\n\r\n  dragOver(event: DragEvent) {\r\n    return false\r\n  }\r\n\r\n  dragEnd(event: DragEvent | any) {\r\n    event.target.setAttribute('id', '')\r\n    this.draggedObject = \"\"\r\n  }\r\n\r\n  mouseenter(event: any, data: any) {\r\n    // if(this.isClicked){\r\n    //     console.log(this.akonani.indexOf(data) === -1)\r\n    //     if(this.akonani.indexOf(data) === -1) {\r\n    //         this.akonani.push(data);\r\n    //     }\r\n    // }\r\n  }\r\n\r\n  mousedown(event: any, data: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.isClicked = true;\r\n    this.coordinates = {\r\n      clientX: event.clientX,\r\n      clientY: event.clientY\r\n    };\r\n  }\r\n\r\n  akonani: Array<any> = []\r\n  mousemove(event: any, data: any) {\r\n    event.stopPropagation();\r\n    if (this.isClicked) {\r\n      this.toBeSelected.next(data)\r\n      const math = Math.round(Math.sqrt(Math.pow(this.coordinates.clientY - event.clientY, 2) + Math.pow(this.coordinates.clientX - event.clientX, 2)));\r\n      if (math > 3) {\r\n        data.isSelected = true;\r\n      }\r\n    }\r\n  }\r\n}","<div class=\"daymanager-wrapper\">\r\n    <div class=\"header-wrapper\" [class.fixed]=\"fixedHeader\">\r\n        <h3 class=\"date-month-name noselect\">\r\n            <i class=\"material-icons left\" (click)=\"previousDate()\"> keyboard_arrow_left\r\n            </i>{{ startDate | date: 'MMMM yyyy' }}\r\n            <i class=\"material-icons right\" (click)=\"futureDate()\"> keyboard_arrow_right </i>\r\n        </h3>\r\n        <div class=\"date-wrapper\">\r\n            <div *ngFor=\"let day of days\" class=\"cell\" [class.five]=\"dayView == 5\" [class.seven]=\"dayView == 7\"\r\n                [class.ten]=\"dayView == 10\" [class.fourteen]=\"dayView == 14\">\r\n                <div *ngIf=\"day == null\" class=\"x-cancel\">\r\n                    <span *ngIf=\"akonani?.length > 0\">{{ akonani?.length }} selected</span>\r\n                </div>\r\n                <div *ngIf=\"day\" class=\"calendar-dates\">\r\n                    <div>\r\n                        <h5>{{ day | date: 'MMM dd' }}</h5>\r\n                    </div>\r\n                    <div><span style=\"font-size:12px\">{{ day | date: 'EEE' }}</span></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <ng-container *ngIf=\"!loading\">\r\n        <div class=\"body-wrapper noselect\" *ngFor=\"let data of daymanager\">\r\n            <ng-container *ngFor=\"let day of days; let i = index\">\r\n                <div class=\"cell\" [attr.date]=\"day\" [class.roster-container]=\"i > 0\" [class.five]=\"dayView == 5\"\r\n                    [class.seven]=\"dayView == 7\" [class.ten]=\"dayView == 10\" [class.fourteen]=\"dayView == 14\"\r\n                    (mousedown)=\"deselect(null,$event)\" (drop)=\"drop($event);$event.stopPropagation()\"\r\n                    (dragover)=\"dragOver($event)\">\r\n                    <div *ngIf=\"i == 0\">\r\n                        <div>\r\n                            <span *ngIf=\"data?.key.indexOf('BOOKED') > -1\">UNASSIGNED BOOKINGS</span>\r\n                            <span *ngIf=\"!(data?.key.indexOf('BOOKED') > -1)\">{{ data?.key }}</span>\r\n                        </div>\r\n                        <div style=\"font-size:10px;color:#16c516\">{{ data?.value[0].StaffCategory}}</div>\r\n                    </div>\r\n                    <ng-container *ngIf=\"i > 0\">\r\n                        <ng-container *ngFor=\"let value of data.value | dmz: day \">\r\n                            <div class=\"data\" *ngIf=\"!value.isLast && !value.isNone\"\r\n                                (dragstart)=\"dragStart($event,value)\" (dragend)=\"dragEnd($event)\"\r\n                                (dblclick)=\"showDetail.emit(value)\" (mouseenter)=\"mouseenter($event, value)\"\r\n                                (mousedown)=\"mousedown($event,value)\" (mousemove)=\"mousemove($event,value)\"\r\n                                [class.selected]=\"value.isSelected\">\r\n\r\n                                <div class=\"approve-logo\"><i class=\"material-icons\" *ngIf=\"value.status == '2'\"> done\r\n                                    </i></div>\r\n                                <div class=\"service-logo\" [style.background-position]=\"getPositionImg(value)\"></div>\r\n\r\n                                <strong>{{ value.StartTime}}-{{ value.EndTime }}</strong>\r\n\r\n                                <i class=\"material-icons option showOption\" option-click\r\n                                    (mousedownEmit)=\"mouseEmitter(value)\" (clickEmit)=\"optionEmitter(value)\"> more_horiz\r\n                                </i>\r\n\r\n                                <div class=\"details\">{{ value.Recipient}} * {{ value.Activity}}</div>\r\n                            </div>\r\n                            <div class=\"data total\" *ngIf=\"value.isLast && !value.isNone\">\r\n                                <span>Total Hours: {{ value.total | number: '1.2-2'}} </span>\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n    <!-- <div class=\"col-md-12 no-data\" *ngIf=\"loading\">\r\n        <span class=\"spinner spinner-md\">\r\n            Loading...\r\n        </span>\r\n    </div> -->\r\n    <div class=\"col-md-12 spinner\" *ngIf=\"loading\">\r\n        <nz-spin nzSimple [nzSize]=\"'large'\"></nz-spin>\r\n    </div>\r\n    \r\n    <div class=\"col-md-12 no-data\" *ngIf=\"daymanager.length == 0 && !loading\">\r\n        <clr-alert [clrAlertClosable]=\"false\">\r\n            <div clr-alert-item class=\"alert-item\">\r\n                <span class=\"alert-text\">\r\n                    No shifts currently!\r\n                </span>\r\n            </div>\r\n        </clr-alert>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { GlobalService, LoginService, roles } from '@services/index';\r\n@Component({\r\n  selector: 'app-header-nav',\r\n  templateUrl: './header-nav.component.html',\r\n  styleUrls: ['./header-nav.component.css']\r\n})\r\nexport class HeaderNavComponent implements OnInit {\r\n\r\n  isVisible: boolean = false;\r\n  isAdmin: boolean = false;\r\n\r\n  constructor(\r\n    private globalS: GlobalService,\r\n    private loginS: LoginService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const token = this.globalS.decode();\r\n    console.log(token);\r\n    //if (token.role == roles.admin) {\r\n      this.isAdmin = true;\r\n    //}\r\n\r\n  }\r\n\r\n  logout() {\r\n    const token = this.globalS.decode();\r\n\r\n    this.loginS.logout(token.uniqueID)\r\n      .subscribe(data => data)\r\n    \r\n    this.globalS.logout();\r\n  }\r\n\r\n  onClickOutside(event: Object) {\r\n    if (event && event['value'] === true) {\r\n      this.isVisible = false;\r\n    }\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<div style=\"position:relative\" [class.admin]=\"isAdmin\">\r\n    <app-breadcrumbs></app-breadcrumbs>\r\n    <div class=\"menu-button\">\r\n        <div class=\"nz-avatar-menu\" click-outside (clickOutside)=\"onClickOutside($event)\">\r\n            <nz-avatar (click)=\"isVisible = true\" nzIcon=\"user\"></nz-avatar>\r\n            <div *ngIf=\"isVisible\" class=\"dropdown\">\r\n                <ul>\r\n                    <li>Edit Password</li>\r\n                    <li (click)=\"logout()\"><i nz-icon nzType=\"logout\" nzTheme=\"outline\"></i>Logout</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, Input, ElementRef, Output, EventEmitter, OnChanges, SimpleChanges, NgZone, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport Cropper from \"cropperjs\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-image-cropper',\r\n  templateUrl: './image-cropper.component.html',\r\n  styleUrls: ['./image-cropper.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ImageCropperComponent implements OnInit, OnChanges, AfterViewInit {\r\n  @ViewChild(\"image\", { static: false }) public image: ElementRef;\r\n\r\n  @Input(\"src\")  public imageSource: string;\r\n  @Input()  public role: string;\r\n  @Input()  public id: string;\r\n  \r\n  @Output() imgBLOB = new EventEmitter<any>();\r\n  public imageDestination: string = \"\";\r\n\r\n  private cropper: Cropper;\r\n  private canvas: HTMLCanvasElement;\r\n\r\n  load: boolean;\r\n\r\n  constructor(\r\n    public ngZone: NgZone,\r\n    private cd: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    //this.initCropper();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    for (let property in changes) {\r\n      if (property == 'imageSource' && changes[property].currentValue != null) {          \r\n          this.replace(changes[property].currentValue) \r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.image.nativeElement) {\r\n      this.ngZone.runOutsideAngular(() => {\r\n        this.initCropper();\r\n      });\r\n    }\r\n  }\r\n\r\n  initCropper() {\r\n    this.cropper = new Cropper(this.image.nativeElement,\r\n      {\r\n        zoomable: false,\r\n        scalable: true,\r\n        autoCrop: false,\r\n        background: false,\r\n        autoCropArea: 1,\r\n        minContainerWidth: 340,\r\n        minContainerHeight: 240,\r\n        aspectRatio: 1,\r\n        viewMode: 2,\r\n        cropBoxMovable: false,\r\n        cropBoxResizable: false,\r\n        ready: () => {     \r\n          this.cropImage();        \r\n        },\r\n        cropstart: () => {\r\n          this.cropImage();\r\n        },\r\n        crop: () => {\r\n          this.cropImage();\r\n        },\r\n        cropend: (e) => {\r\n          //this.cropImage();\r\n        }\r\n      });\r\n    \r\n    //this.cropper.disable();\r\n  }\r\n\r\n  cropImage() {\r\n\r\n    var cnvs = this.cropper.getCroppedCanvas({\r\n      imageSmoothingQuality: \"low\",\r\n      imageSmoothingEnabled: false,\r\n      fillColor: '#fff' \r\n      // width: 360,\r\n      // height: 360,\r\n    });\r\n\r\n    this.canvas = cnvs;    \r\n\r\n    this.canvas.toBlob((blob) => {\r\n      var formData = new FormData();\r\n      formData.append('files', blob, `${+new Date}-${this.id}-profile.png`);\r\n      formData.append('uniqueID', this.id);\r\n      formData.append('role', this.role);\r\n\r\n      this.imgBLOB.emit({\r\n        formData\r\n      });\r\n    });\r\n\r\n    //this.imageDestination = this.canvas.toDataURL(\"image/png\", 0.7);\r\n\r\n  }\r\n\r\n  getRoundedCanvas(sourceCanvas: any) {\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n    var width = sourceCanvas.width;\r\n    var height = sourceCanvas.height;\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    context.imageSmoothingEnabled = true;\r\n    context.drawImage(sourceCanvas, 0, 0, width, height);\r\n    context.globalCompositeOperation = 'destination-in';\r\n    context.beginPath();\r\n    context.arc(width / 2, height / 2, Math.min(width, height) / 2, 0, 2 * Math.PI, true);\r\n    context.fill();\r\n    return canvas;\r\n  }\r\n\r\n  replace(file: File) {\r\n    this.load = true;    \r\n\r\n    if (!(typeof file == 'string') && FileReader && file) {\r\n      this.cropper.destroy();\r\n\r\n      var fr = new FileReader();\r\n\r\n      fr.onloadend = (e) => {\r\n        this.image.nativeElement.src = fr.result;\r\n        this.cropper.replace(this.image.nativeElement.src);\r\n      }\r\n\r\n      fr.readAsDataURL(file);\r\n    }\r\n    \r\n    \r\n    setTimeout(() => {\r\n      this.load = false;\r\n      this.cd.markForCheck();\r\n      this.cd.detectChanges();\r\n\r\n    }, 500);\r\n  }\r\n  \r\n  errorUrl(event: any) {\r\n    console.log('error')\r\n    // this.cropper.replace(`assets/logo/profile.png`);\r\n  }\r\n\r\n}\r\n","<div class=\"img-wrapper\" [hidden]=\"load\">\r\n    <!-- <img [src]=\"imageDestination\" class=\"img-preview\"> -->\r\n    <div class=\"img-container\">\r\n        <img #image [src]=\"imageSource\" (error)=\"errorUrl($event)\" crossorigin>\r\n    </div>\r\n    <!-- <intake-no-data [loading]=\"loading\"></intake-no-data> -->\r\n</div>\r\n<div *ngIf=\"load\">\r\n    <nz-spin nzSimple></nz-spin>\r\n</div>","export * from './profile-page';\r\nexport * from './suburb';","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms'\r\n\r\n@Component({\r\n  selector: 'app-interval-design',\r\n  templateUrl: './interval-design.component.html',\r\n  styleUrls: ['./interval-design.component.css']\r\n})\r\nexport class IntervalDesignComponent implements OnInit, OnChanges {\r\n\r\n  endTime: any = new Date(1990, 1, 1, 9, 0, 0);\r\n  quoteDetailsGroup: FormGroup;\r\n  @Input() interval: string;\r\n    \r\n  constructor(\r\n    private formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.reset();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    for (let property in changes) {\r\n      if (property == 'interval' &&\r\n        !changes[property].firstChange &&\r\n        changes[property].currentValue != null) {\r\n          this.reset();\r\n          this.createMultipleWeekFormats(changes[property].currentValue)\r\n      }\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.quoteDetailsGroup = new FormGroup({\r\n      timeSlots: new FormArray([])\r\n    });\r\n  }\r\n\r\n  noOfLoops(data): number {\r\n    if (data == 'Weekly') {\r\n      return 1;\r\n    } else if (data == 'Fortnightly') {\r\n      return 2;\r\n    } else if (data == 'FourWeekly') {\r\n      return 4;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  loopRoster(noOfLoop: number) {\r\n    let index = 0;\r\n    while (index < noOfLoop) {\r\n      this.addTimeSlot();\r\n      index++;\r\n    }\r\n  }\r\n\r\n  addTimeSlot() {\r\n    const slot = this.quoteDetailsGroup.get('timeSlots') as FormArray;\r\n    slot.push(this.createTimeSlot());\r\n  }\r\n\r\n  createTimeSlot(data: Array<any> = null): FormGroup {\r\n    return this.formBuilder.group({\r\n      monday: new FormGroup({\r\n        time: new FormControl(data ? data[0].split('|')[0] : this.endTime),\r\n        quantity: new FormControl(data ? Math.trunc(data[0].split('|')[1]) : 0)\r\n      }),\r\n      tuesday: new FormGroup({\r\n        time: new FormControl(data ? data[1].split('|')[0] : this.endTime),\r\n        quantity: new FormControl(data ? Math.trunc(data[1].split('|')[1]) : 0)\r\n      }),\r\n      wednesday: new FormGroup({\r\n        time: new FormControl(data ? data[2].split('|')[0] : this.endTime),\r\n        quantity: new FormControl(data ? Math.trunc(data[2].split('|')[1]) : 0)\r\n      }),\r\n      thursday: new FormGroup({\r\n        time: new FormControl(data ? data[3].split('|')[0] : this.endTime),\r\n        quantity: new FormControl(data ? Math.trunc(data[3].split('|')[1]) : 0)\r\n      }),\r\n      friday: new FormGroup({\r\n        time: new FormControl(data ? data[4].split('|')[0] : this.endTime),\r\n        quantity: new FormControl(data ? Math.trunc(data[4].split('|')[1]) : 0)\r\n      }),\r\n      saturday: new FormGroup({\r\n        time: new FormControl(data ? data[5].split('|')[0] : this.endTime),\r\n        quantity: new FormControl(data ? Math.trunc(data[5].split('|')[1]) : 0)\r\n      }),\r\n      sunday: new FormGroup({\r\n        time: new FormControl(data ? data[6].split('|')[0] : this.endTime),\r\n        quantity: new FormControl(data ? Math.trunc(data[6].split('|')[1]) : 0)\r\n      })\r\n    });\r\n  }\r\n\r\n  createMultipleWeekFormats(format: string) {\r\n    this.loopRoster(this.noOfLoops(format));\r\n  }\r\n\r\n}\r\n","<div class=\"id-container\">\r\n    <div nz-row nzGutter=\"16\">\r\n\r\n        <ng-container [formGroup]=\"quoteDetailsGroup\">\r\n            <div nz-col nzSpan=\"6\" formArrayName=\"timeSlots\" *ngFor=\"let slot of quoteDetailsGroup.get('timeSlots')['controls']; let i = index;\">\r\n                <div class=\"id-table\" [formGroupName]=\"i\">\r\n                    <div formGroupName=\"monday\">\r\n                        <div>Mo</div>\r\n                        <div>\r\n                            <nz-time-picker formControlName=\"time\" nzFormat=\"HH:mm\"></nz-time-picker>\r\n                        </div>\r\n                        <div>\r\n                            <nz-input-number formControlName=\"quantity\" [nzMin]=\"1\" [nzMax]=\"10\" [nzStep]=\"1\"></nz-input-number>\r\n                        </div>\r\n                    </div>\r\n                    <div formGroupName=\"tuesday\">\r\n                        <div>Tue</div>\r\n                        <div>\r\n                            <nz-time-picker formControlName=\"time\" nzFormat=\"HH:mm\"></nz-time-picker>\r\n                        </div>\r\n                        <div>\r\n                            <nz-input-number formControlName=\"quantity\" [nzMin]=\"1\" [nzMax]=\"10\" [nzStep]=\"1\"></nz-input-number>\r\n                        </div>\r\n                    </div>\r\n                    <div formGroupName=\"wednesday\">\r\n                        <div>Wed</div>\r\n                        <div>\r\n                            <nz-time-picker formControlName=\"time\" nzFormat=\"HH:mm\"></nz-time-picker>\r\n                        </div>\r\n                        <div>\r\n                            <nz-input-number formControlName=\"quantity\" [nzMin]=\"1\" [nzMax]=\"10\" [nzStep]=\"1\"></nz-input-number>\r\n                        </div>\r\n                    </div>\r\n                    <div formGroupName=\"thursday\">\r\n                        <div>Thu</div>\r\n                        <div>\r\n                            <nz-time-picker formControlName=\"time\" nzFormat=\"HH:mm\"></nz-time-picker>\r\n                        </div>\r\n                        <div>\r\n                            <nz-input-number formControlName=\"quantity\" [nzMin]=\"1\" [nzMax]=\"10\" [nzStep]=\"1\"></nz-input-number>\r\n                        </div>\r\n                    </div>\r\n                    <div formGroupName=\"friday\">\r\n                        <div>Fri</div>\r\n                        <div>\r\n                            <nz-time-picker formControlName=\"time\" nzFormat=\"HH:mm\"></nz-time-picker>\r\n                        </div>\r\n                        <div>\r\n                            <nz-input-number formControlName=\"quantity\" [nzMin]=\"1\" [nzMax]=\"10\" [nzStep]=\"1\"></nz-input-number>\r\n                        </div>\r\n                    </div>\r\n                    <div formGroupName=\"saturday\">\r\n                        <div>Sat</div>\r\n                        <div>\r\n                            <nz-time-picker formControlName=\"time\" nzFormat=\"HH:mm\"></nz-time-picker>\r\n                        </div>\r\n                        <div>\r\n                            <nz-input-number formControlName=\"quantity\" [nzMin]=\"1\" [nzMax]=\"10\" [nzStep]=\"1\"></nz-input-number>\r\n                        </div>\r\n                    </div>\r\n                    <div formGroupName=\"sunday\">\r\n                        <div>Sun</div>\r\n                        <div>\r\n                            <nz-time-picker formControlName=\"time\" nzFormat=\"HH:mm\"></nz-time-picker>\r\n                        </div>\r\n                        <div>\r\n                            <nz-input-number formControlName=\"quantity\" [nzMin]=\"1\" [nzMax]=\"10\" [nzStep]=\"1\"></nz-input-number>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n\r\n\r\n        \r\n\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef, Input,forwardRef } from '@angular/core';\r\nimport { GlobalService, UploadService } from '@services/index';\r\nimport { HttpClient, HttpRequest, HttpEventType, HttpResponse, HttpEvent } from '@angular/common/http'\r\n\r\n\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-media',\r\n  templateUrl: './media.component.html',\r\n  styleUrls: ['./media.component.css']\r\n})\r\nexport class MediaComponent implements OnInit {\r\n  @Input() isAdmin: boolean = false;\r\n  @Input() personID: string;\r\n  \r\n  @ViewChild('videoPlayer', { static: false }) videoplayer: ElementRef;\r\n\r\n  mediaList: Array<any>;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private globalS: GlobalService,\r\n    private uploadS: UploadService,\r\n    private sanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getMedia();\r\n  }\r\n\r\n  toggleVideo() {\r\n    this.videoplayer.nativeElement.play();\r\n  }\r\n\r\n\r\n  getMedia() {\r\n\r\n    this.uploadS.getMedia(this.personID)\r\n      .subscribe(files => {\r\n\r\n        this.mediaList = files.map(x => {\r\n          return {\r\n            clientGroup: x.clientGroup,\r\n            endDate: x.endDate,\r\n            fileBlob: x.fileBlob,\r\n            item: x.item,\r\n            media: x.media,\r\n            mediaDisplay: x.mediaDisplay,\r\n            mediaText: x.mediaText,\r\n            program: x.program,\r\n            startDate: x.startDate,\r\n            target: x.target,\r\n            type: x.type,\r\n            url: `/media/${x.media}`\r\n          }\r\n        });\r\n\r\n        console.log(this.mediaList)\r\n              \r\n      });\r\n  }\r\n\r\n}\r\n","<ul>\r\n    <li *ngFor=\"let media of mediaList;let i = index\">\r\n        <article>\r\n            <time>{{ media.startDate | date:'MMM d yyyy h:mm' }}</time>\r\n            <div class=\"article\">\r\n                <h4>{{ media.mediaDisplay }}</h4>\r\n                <div>\r\n                    <ng-container *ngIf=\"(media.type).split('/')[1] == 'jpeg' || (media.type).split('/')[1] == 'png'\">\r\n                        <div>\r\n                            <img src=\"{{ media.url }}\" class=\"img-media\" onerror=\"this.src='assets/logo/noimage.jpg'\" />\r\n                        </div>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"(media.type).split('/')[1] == 'mp4' || (media.type).split('/')[1] == 'mp3'\">\r\n                        <div class=\"video-container\">\r\n                            <video controls (click)=\"toggleVideo()\" #videoPlayer>\r\n                                <source [src]=\"media.url || ''\" />\r\n                                Browser not supported\r\n                            </video>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n                <div>\r\n                    {{ media.mediaText }}\r\n                </div>\r\n            </div>\r\n        </article>\r\n    </li>\r\n</ul>","import { Component, OnInit, forwardRef, ViewChild, ElementRef, Input, OnChanges, SimpleChanges, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n\r\nconst noop = () => {\r\n};\r\n\r\n@Component({\r\n  // host: {\r\n  //   '(document:click)': 'onClick($event)'\r\n  // },\r\n  selector: 'app-phonefax',\r\n  templateUrl: './phonefax.component.html',\r\n  styleUrls: ['./phonefax.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PhonefaxComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\n  \r\nexport class PhonefaxComponent implements OnInit, OnDestroy ,ControlValueAccessor {\r\n  @ViewChild('sample', { static: false }) _firstFourNo: ElementRef;\r\n  @ViewChild('hello', { static: false }) _lastFourNo: ElementRef;\r\n\r\n  @Input() isMobile: boolean = false;\r\n\r\n  private onTouchedCallback: () => void = noop;\r\n  private onChangeCallback: (_: any) => void = noop;\r\n\r\n  inputChange$ = new Subject();\r\n\r\n  error: boolean = false;\r\n\r\n  innerValue: any = '';\r\n\r\n  areaCode: string;\r\n  firstFourNo: string;\r\n  lastFourNo: string;\r\n\r\n  constructor(\r\n    private elem: ElementRef\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inputChange$.pipe(debounceTime(300)).subscribe(e => {\r\n      var contactNo = `+63${this.isMobileType() || ''}${this.firstFourNo || ''}${this.lastFourNo || ''}`\r\n      this.writeValue(contactNo);\r\n    });\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    if (value) {\r\n      this.innerValue = this.validateNumber(value);\r\n      if (this.innerValue) {\r\n        this.error = false;\r\n        this.select(this.innerValue);        \r\n        return;\r\n      }\r\n      // this.error = true;\r\n      this.select('');\r\n      return;\r\n    }\r\n    this.clearAll();\r\n  }\r\n\r\n  select(value: any) {\r\n    this.onChangeCallback(value);\r\n  }\r\n\r\n  registerOnChange(fn): void {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  registerOnTouched(fn): void {\r\n    this.onTouchedCallback = fn;\r\n  }\r\n\r\n  ngOnDestroy(): void{\r\n\r\n  } \r\n\r\n  isMobileType() {\r\n    return this.isMobile ? '04' : `0${this.areaCode}`\r\n  }\r\n\r\n  clearAll() {\r\n    this.areaCode = '';\r\n    this.firstFourNo = '';\r\n    this.lastFourNo = '';\r\n\r\n    this.innerValue = '';\r\n    this.select('');\r\n  }\r\n\r\n  // onClick(event) {\r\n  //   if (!this.elem.nativeElement.contains(event.target)) {\r\n  //     this.error = this.verifyError();      \r\n  //     this.onChange = this.innerValue;\r\n  //   }\r\n  // }\r\n\r\n  verifyError(): boolean {\r\n    if (this.areaCode && this.firstFourNo && this.lastFourNo)\r\n      return this.areaCode.length == 0 || this.firstFourNo.length < 4 || this.lastFourNo.length < 4;\r\n    return false;\r\n  }\r\n\r\n  get value() {\r\n    return this.innerValue;\r\n  }\r\n\r\n  set value(data: any) {\r\n    this.innerValue = '23';\r\n  }\r\n\r\n  changeEvent(e: any, whatInput: number) {\r\n\r\n    if (whatInput == 0) {\r\n      setTimeout(() => {\r\n        this._firstFourNo.nativeElement.focus();\r\n        this._firstFourNo.nativeElement.value = '';\r\n        this.error = true;\r\n      });\r\n    }\r\n\r\n    if (whatInput == 1) {\r\n      if ((e.target.value).length == 3) {\r\n        setTimeout(() => {\r\n          this._lastFourNo.nativeElement.focus();\r\n          this._lastFourNo.nativeElement.value = '';\r\n          this.error = true;\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  validateNumber(data: string) {\r\n    // 13 is the length of phone/tel #\r\n    if (data.includes('+63') && data.length == 13 && !isNaN(+data.slice(1, 14))) {\r\n      this.areaCode = data.slice(4, 5);\r\n      this.firstFourNo = data.slice(5, 9);\r\n      this.lastFourNo = data.slice(9, 14);\r\n      return data;\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"pfx-container\" [class.error]=\"error\">\r\n    <span *ngIf=\"!isMobile\">+61(0<input type=\"text\" nz-input class=\"prefix-no\" style=\"height: 25px;\" numeric maxlength=\"1\" size=\"1\" [(ngModel)]=\"areaCode\" (keypress)=\"changeEvent($event,0)\" (ngModelChange)=\"inputChange$.next()\" autocomplete=\"palong\" onclick=\"this.select()\" >)</span>\r\n    <span *ngIf=\"isMobile\">+61(04)</span>   \r\n\r\n    <input type=\"text\" nz-input numeric #sample [(ngModel)]=\"firstFourNo\" (keypress)=\"changeEvent($event,1)\" (ngModelChange)=\"inputChange$.next($event)\" autocomplete=\"palong\" maxlength=\"4\" size=\"5\" onclick=\"this.select()\"> -\r\n    <input type=\"text\" nz-input numeric #hello [(ngModel)]=\"lastFourNo\" (keypress)=\"changeEvent($event,2)\" (ngModelChange)=\"inputChange$.next()\" autocomplete=\"palong\" maxlength=\"4\" size=\"5\" onclick=\"this.select()\">\r\n</div>","import { Component, OnInit, Input, forwardRef, ViewChild, OnDestroy, Inject } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nimport { TimeSheetService, GlobalService, view, ClientService, StaffService, ListService, UploadService, months, days, gender, types, titles, caldStatuses, roles } from '@services/index';\r\nimport * as _ from 'lodash';\r\nimport { mergeMap, takeUntil } from 'rxjs/operators';\r\nimport { forkJoin, Observable } from 'rxjs';\r\n\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { RemoveFirstLast } from '@pipes/pipes';\r\n\r\ndeclare var Dto: any;\r\n\r\nconst noop = () => {\r\n};\r\n\r\nconst PROFILEPAGE_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    multi: true,\r\n    useExisting: forwardRef(() => ProfilePage),\r\n};\r\n\r\n\r\n@Component({\r\n    selector: 'profile-page',\r\n    templateUrl: './profile-page.html',\r\n    styles: [`\r\n        nz-select {\r\n            margin-right: 8px;\r\n            width: 200px;\r\n        }\r\n        .avatar-container{\r\n            text-align:center;   \r\n        }\r\n        .form-group{\r\n\r\n        }\r\n        .form-group label.info{\r\n            font-weight: 500;\r\n            font-size: 1rem;\r\n            color: #ffffff;\r\n            background: #46535f;\r\n            padding: 5px;\r\n            border-radius: 3px;\r\n            margin:0;\r\n        }\r\n        nz-table{\r\n            margin-top:15px;\r\n        }\r\n        a:hover{\r\n            text-decoration: underline;\r\n        }\r\n        .edit-btn{\r\n            height:3rem;\r\n        }\r\n        .right{\r\n            float: right;\r\n            margin: 10px;\r\n        }\r\n        nz-select{\r\n            width:100%;\r\n        }\r\n        .footer {\r\n            position: absolute;\r\n            bottom: 0px;\r\n            width: 100%;\r\n            border-top: 1px solid rgb(232, 232, 232);\r\n            padding: 10px 16px;\r\n            text-align: right;\r\n            left: 0px;\r\n            background: #fff;\r\n        }\r\n        .form-row > div.form-group{\r\n            margin-bottom:3rem;\r\n        }\r\n    `],\r\n    providers: [\r\n        PROFILEPAGE_VALUE_ACCESSOR\r\n    ]\r\n})\r\n\r\nexport class ProfilePage implements OnInit, OnDestroy, ControlValueAccessor {\r\n    //Placeholders for the callbacks which are later provided\r\n    //by the Control Value Accessor\r\n    private onTouchedCallback: () => void = noop;\r\n    private onChangeCallback: (_: any) => void = noop;\r\n\r\n    private innerValue: Dto.ProfileInterface;\r\n\r\n    editModalOpen: boolean = false;\r\n    user: any;\r\n\r\n    window: number;\r\n\r\n    selectedValue: any\r\n\r\n    contactsArray: Array<any> = [];\r\n    addressArray: Array<any> = [];\r\n\r\n    years: Array<string> = [];\r\n    months: Array<string> = [];\r\n    days: Array<string> = [];\r\n\r\n    casemanagers: Array<any> = [];\r\n    subscriptionArray: Array<Observable<any>> = []\r\n\r\n    contactForm: FormGroup;\r\n    addressForm: FormGroup;\r\n    userForm: FormGroup;\r\n\r\n    loading: boolean = false;\r\n    editProfileDrawer: boolean = false;\r\n    addAddressDrawer: boolean = false;\r\n    addContactDrawer: boolean = false;\r\n\r\n    titles: Array<string> = titles;\r\n    genderArr: Array<string> = gender;\r\n\r\n    constructor(\r\n        private globalS: GlobalService,\r\n        private clientS: ClientService,\r\n        private staffS: StaffService,\r\n        private timeS: TimeSheetService,\r\n        private listS: ListService,\r\n        private formBuilder: FormBuilder,\r\n        private nzMessageService: NzMessageService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.buildForms();\r\n        this.POPULATE_DATE_DROPDOWNS();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n\r\n    buildForms(): void {\r\n        this.contactForm = this.formBuilder.group({\r\n            id: [''],\r\n            type: ['', [Validators.required]],\r\n            details: ['', [Validators.required]],\r\n            personId: ['']\r\n        });\r\n\r\n        this.addressForm = this.formBuilder.group({\r\n            id: [''],\r\n            description: [null, [Validators.required]],\r\n            address: [null, [Validators.required]],\r\n            pcodesuburb: [null, [Validators.required]],\r\n            personId: ['']\r\n        });\r\n\r\n\r\n        this.userForm = this.formBuilder.group({\r\n            surnameOrg: [''],\r\n            preferredName: [''],\r\n            firstName: [''],\r\n            middleNames: [''],\r\n            gender: [''],\r\n            year: [''],\r\n            month: [''],\r\n            day: [''],\r\n            title: [''],\r\n            uniqueID: '',\r\n\r\n            file1: [''],\r\n            file2: [''],\r\n            subCategory: [''],\r\n            branch: [''],\r\n\r\n            serviceRegion: [''],\r\n            casemanager: [''],\r\n\r\n            caldStatus: [''],\r\n            indigStatus: [''],\r\n            primaryDisability: [''],\r\n            note: [''],\r\n            type: [''],\r\n            jobCategory: [''],\r\n            adminCategory: [''],\r\n            team: [''],\r\n            gridNo: [''],\r\n            dLicense: [''],\r\n            mvReg: [''],\r\n            nReg: [''],\r\n            isEmail: false,\r\n            isRosterable: false,\r\n            isCaseLoad: false,\r\n            stf_Department: '',\r\n            rating: ''\r\n        });\r\n\r\n\r\n    }\r\n\r\n    patchTheseValuesInForm(user = this.user) {\r\n        if (this.innerValue.view === 'recipient') {\r\n            this.userForm.patchValue({\r\n                title: user.title,\r\n                surnameOrg: user.surnameOrg,\r\n                firstName: user.firstName,\r\n                middleNames: user.middleNames,\r\n                gender: this.globalS.searchOf(user.gender, this.genderArr, this.genderArr[2]),\r\n                year: this.globalS.filterYear(user.dateOfBirth),\r\n                month: this.globalS.searchOf(this.globalS.filterMonth(user.dateOfBirth), months, 'December'),\r\n                day: this.globalS.filterDay(user.dateOfBirth),\r\n\r\n                casemanager: user.recipient_Coordinator,\r\n                file1: user.agencyIdReportingCode,\r\n                branch: user.branch,\r\n                file2: user.urNumber,\r\n                subCategory: user.ubdMap,\r\n                serviceRegion: user.agencyDefinedGroup\r\n            });\r\n\r\n            console.log(this.userForm.value)\r\n            // this.contactIssueGroup.patchValue({\r\n            //     value: user.contactIssues\r\n            // })\r\n\r\n            // this.rosterAlertGroup.patchValue({\r\n            //     value: user.notes\r\n            // })\r\n\r\n            // this.runsheetAlertGroup.patchValue({\r\n            //     value: user.specialConsiderations\r\n            // })\r\n\r\n        }\r\n\r\n        if (this.innerValue.view === 'staff') {\r\n            this.userForm.patchValue({\r\n                title: user.title,\r\n                surnameOrg: user.lastName,\r\n                firstName: user.firstName,\r\n                middleNames: user.middleNames,\r\n                gender: this.globalS.searchOf(user.gender, this.genderArr, this.genderArr[2]),\r\n                year: this.globalS.filterYear(user.dob),\r\n                month: this.globalS.searchOf(this.globalS.filterMonth(user.dob), months, 'December'),\r\n                day: this.globalS.filterDay(user.dob),\r\n                preferredName: user.preferredName,\r\n\r\n                casemanager: user.pan_Manager,\r\n                type: user.category,\r\n                stf_Department: user.stf_Department,\r\n                jobCategory: user.staffGroup,\r\n                adminCategory: user.subCategory,\r\n                team: user.staffTeam,\r\n                serviceRegion: user.serviceRegion,\r\n                gridNo: user.ubdMap,\r\n                dLicense: user.dLicence,\r\n                mvReg: user.vRegistration,\r\n                nReg: user.nRegistration,\r\n                rating: user.rating,\r\n\r\n                caldStatus: user.caldStatus,\r\n                indigStatus: user.cstda_Indiginous,\r\n                primaryDisability: user.cstda_DisabilityGroup,\r\n                note: user.contactIssues,\r\n\r\n                isEmail: user.emailTimesheet,\r\n                isRosterable: user.isRosterable,\r\n                isCaseLoad: user.caseManager\r\n            });\r\n\r\n            // this.notesGroup.patchValue({\r\n            //     notes: user.contactIssues,\r\n            //     caldStatus: user.caldStatus ? user.caldStatus.toUpperCase() : null,\r\n            //     indigStatus: user.cstda_Indiginous ? user.cstda_Indiginous.toUpperCase() : null,\r\n            //     primaryDisability: user.cstda_DisabilityGroup ? user.cstda_DisabilityGroup.toUpperCase() : null\r\n            // })\r\n\r\n        }\r\n    }\r\n\r\n    pathForm(token: Dto.ProfileInterface) {\r\n\r\n        if (this.globalS.isEmpty(token))\r\n            return;\r\n\r\n        if (token.view == view.recipient) {\r\n            this.clientS.getprofile(token.name).pipe(\r\n                mergeMap(data => {\r\n                    this.user = data;\r\n                    this.patchTheseValuesInForm(this.user)\r\n                    return this.getUserData(data.uniqueID);\r\n                })).subscribe(data => {\r\n\r\n                    // this.backgroundImage = this.refreshDynamicPicture(this.user)\r\n\r\n                    this.user.addresses = data[0];\r\n                    this.user.contacts = data[1];\r\n                    this.user.casestaff = data[2]\r\n\r\n                    // this.globalS.userProfile = this.user;\r\n\r\n                    // this.addresses = data[0];\r\n                    // this.contacts = data[1];\r\n\r\n                    // this.patchTheseValuesInForm(this.user)\r\n\r\n                    // this.addressForm.setControl('addresses', this.formBuilder.array(this.addressBuilder(data[0]) || []));\r\n                    // this.contactForm.setControl('contacts', this.formBuilder.array(this.contactBuilder(data[1]) || []));\r\n\r\n                    // this.tempContactArray = this.contactForm.get('contacts').value;\r\n                });\r\n        }\r\n\r\n        if (token.view == view.staff) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getUserData(code: any) {\r\n        return forkJoin([\r\n            this.clientS.getaddress(code),\r\n            this.clientS.getcontacts(code),\r\n            this.timeS.getcasestaff(code)\r\n        ]);\r\n    }\r\n\r\n    cancel(v: number): void {\r\n\r\n    }\r\n\r\n    confirm(view: number, data: any): void {\r\n\r\n        if (view == 1) {\r\n            this.clientS.deleteaddress({\r\n                RecordNumber: data.recordNumber,\r\n                PersonID: data.personID\r\n            }).subscribe(data => {\r\n                if (data.success) {\r\n                    this.globalS.sToast('Success', 'Address deleted')\r\n                    this.pathForm(this.innerValue);\r\n                }\r\n            })\r\n        }\r\n\r\n        if (view == 2) {\r\n            this.clientS.deletecontact({\r\n                RecordNumber: data.recordNumber,\r\n                PersonID: data.personID\r\n            }).subscribe(data => {\r\n                if (data.success) {\r\n                    this.globalS.sToast('Success', 'Contact deleted')\r\n                    this.pathForm(this.innerValue);\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleCancel(): void {\r\n        this.editModalOpen = false;\r\n    }\r\n\r\n    formatDate(data: any): string {\r\n        let year = data.get('year').value;\r\n        let month = this.months.indexOf(data.get('month').value) + 1;\r\n        let day = data.get('day').value;\r\n\r\n        if (year == null || day == null || month == 0)\r\n            return null;\r\n\r\n        return year + '/' + month + '/' + day + ' ' + '00' + ':' + '00' + ':' + '00';\r\n    }\r\n\r\n    formatContact(contactForm: FormGroup): Array<Dto.PhoneFaxOther> {\r\n        let temp: Array<Dto.PhoneFaxOther> = [];\r\n\r\n        const { id, type, details, personId } = contactForm.value;\r\n\r\n        let pf: Dto.PhoneFaxOther = {\r\n            RecordNumber: id,\r\n            Type: type,\r\n            Detail: details,\r\n            PersonID: personId\r\n        }\r\n\r\n        temp.push(pf);\r\n        return temp;\r\n    }\r\n\r\n    formatAddress(addressForm: FormGroup): Array<Dto.NamesAndAddresses> {\r\n        const { pcodesuburb, address, description, id, personId } = addressForm.value;\r\n\r\n        let pcode = /(\\d+)/g.test(pcodesuburb) ? pcodesuburb.match(/(\\d+)/g)[0].trim() : \"\";\r\n        let suburb = /(\\D+)/g.test(pcodesuburb) ? pcodesuburb.match(/(\\D+)/g)[0].trim() : \"\"\r\n        let state = suburb && suburb.split(',').length > 1 ? suburb.split(',')[1].trim() : '';\r\n\r\n        let temp: Array<Dto.NamesAndAddresses> = [];\r\n\r\n        let na: Dto.NamesAndAddresses = {\r\n            Suburb: suburb && suburb.split(',').length > 0 ? suburb.split(',')[0] : suburb,\r\n            PostCode: pcode,\r\n            Stat: state,\r\n            Description: description,\r\n            Address1: address,\r\n            RecordNumber: id,\r\n            PersonID: personId\r\n        }\r\n\r\n        temp.push(na);\r\n        return temp;\r\n    }\r\n\r\n    editProfile(): void {\r\n        let data = this.userForm.value;\r\n        let birthdate = this.formatDate(this.userForm);\r\n\r\n        if (this.innerValue.view == 'staff') {\r\n            let user: Dto.Staffs = {\r\n                accountNo: this.innerValue.name,\r\n                firstName: data.firstName,\r\n                middleNames: data.middleNames,\r\n                lastName: data.surnameOrg,\r\n                gender: data.gender,\r\n                title: data.title,\r\n                dob: birthdate,\r\n\r\n                rating: data.rating,\r\n                pan_Manager: data.casemanager,\r\n                category: data.type,\r\n                stf_Department: data.stf_Department,\r\n                staffGroup: data.jobCategory,\r\n                subCategory: data.adminCategory,\r\n                staffTeam: data.team,\r\n                serviceRegion: data.serviceRegion,\r\n                ubdMap: data.gridNo,\r\n                dLicence: data.dLicense,\r\n                vRegistration: data.mvReg,\r\n                nRegistration: data.nReg,\r\n                caseManager: data.isCaseLoad,\r\n                isRosterable: data.isRosterable,\r\n                emailTimesheet: data.isEmail,\r\n\r\n                preferredName: data.preferredName\r\n            }\r\n            //this.subSArr.push(this.staffS.updateusername(user));\r\n        }\r\n\r\n        if (this.innerValue.view == 'recipient') {\r\n            let user: Dto.Recipients = {\r\n                accountNo: this.innerValue.name,\r\n                firstName: data.firstName,\r\n                middleNames: data.middleNames,\r\n                surnameOrg: data.surnameOrg,\r\n                gender: data.gender,\r\n                title: data.title,\r\n                dateOfBirth: birthdate,\r\n\r\n                recipient_Coordinator: data.casemanager,\r\n                agencyIdReportingCode: data.file1,\r\n                urNumber: data.file2,\r\n                branch: data.branch,\r\n                agencyDefinedGroup: data.serviceRegion,\r\n                ubdMap: data.subCategory\r\n\r\n            }\r\n            this.subscriptionArray.push(this.clientS.updateusername(user));\r\n        }\r\n        this.processSubscriptions();\r\n    }\r\n\r\n    processSubscriptions() {\r\n        this.loading = true;\r\n        forkJoin(this.subscriptionArray).subscribe(\r\n            data => {\r\n                this.subscriptionArray = [];\r\n                this.globalS.sToast('Success', 'Profile Updated!');\r\n                this.pathForm(this.innerValue);\r\n\r\n                this.closeDrawer();\r\n                // let result = data.filter(x => x.success == false);\r\n                // if (result.length > 0)\r\n                //     this.resultToast.fail = true;\r\n                // else {\r\n                //     this.showAlert();\r\n                //     this.pathForm();\r\n                // }\r\n\r\n                // this.resetForms();\r\n            }, err => {\r\n\r\n            }, () => {\r\n\r\n                this.loading = false;\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n    edit(): void {\r\n\r\n        if (this.window == 1) {\r\n            this.loading = true;\r\n            this.clientS.updateuseraddress(this.formatAddress(this.addressForm))\r\n                .subscribe(data => {\r\n                    if (data.success) {\r\n                        this.globalS.sToast('Success', 'Address Updated!');\r\n                        this.pathForm(this.innerValue);\r\n                    }\r\n                }, (err) => {\r\n\r\n                }, () => {\r\n                    this.loading = false;\r\n                    this.editModalOpen = false;\r\n                })\r\n        }\r\n\r\n        if (this.window == 2) {\r\n            this.clientS.updateusercontact(this.formatContact(this.contactForm)).subscribe(data => {\r\n                if (data.success) {\r\n                    this.globalS.sToast('Success', 'Contact Updated!');\r\n                    this.pathForm(this.innerValue);\r\n                }\r\n            }, (err) => {\r\n\r\n            }, () => {\r\n                this.loading = false;\r\n                this.editModalOpen = false;\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    editProfileOpen() {\r\n        this.editProfileDrawer = true;\r\n    }\r\n\r\n    addAddressOpen() {\r\n        this.addAddressDrawer = true;\r\n        this.addressForm.reset();\r\n        this.POPULATE_ADDRESS();\r\n    }\r\n\r\n    addContactOpen() {\r\n        this.addContactDrawer = true;\r\n        this.contactForm.reset();\r\n        this.POPULATE_CONTACTS();\r\n    }\r\n\r\n    addContact() {\r\n        for (const i in this.contactForm.controls) {\r\n            this.contactForm.controls[i].markAsDirty();\r\n            this.contactForm.controls[i].updateValueAndValidity();\r\n        }\r\n\r\n        if (!this.contactForm.valid)\r\n            return;\r\n\r\n        this.contactForm.patchValue({\r\n            personId: this.user.uniqueID,\r\n            id: -1\r\n        });\r\n\r\n\r\n        //console.log(this.contactForm.value);\r\n\r\n        this.subscriptionArray.push(this.clientS.addcontact(this.formatContact(this.contactForm)));\r\n        this.processSubscriptions();\r\n    }\r\n\r\n    addAddress(): void {\r\n\r\n        for (const i in this.addressForm.controls) {\r\n            this.addressForm.controls[i].markAsDirty();\r\n            this.addressForm.controls[i].updateValueAndValidity();\r\n        }\r\n\r\n        if (!this.addressForm.valid)\r\n            return;\r\n\r\n        this.addressForm.patchValue({\r\n            personId: this.user.uniqueID,\r\n            id: -1\r\n        });\r\n\r\n        this.subscriptionArray.push(this.clientS.addaddress(this.formatAddress(this.addressForm)));\r\n        this.processSubscriptions();\r\n\r\n    }\r\n\r\n    editAddressOpen(address: any): void {\r\n        this.editModalOpen = true;\r\n        this.window = 1;\r\n        this.addressForm.reset();\r\n\r\n        this.addressForm.patchValue({\r\n            id: address.recordNumber,\r\n            description: address.description,\r\n            address: address.address1,\r\n            pcodesuburb: `${address.postCode} ${address.suburb ? address.suburb.trim() : ''} ${address.stat ? `, ${address.stat}` : ''}`,\r\n            personId: address.personID\r\n        });\r\n\r\n        this.POPULATE_ADDRESS();\r\n    }\r\n\r\n    editContactOpen(contact: any): void {\r\n        this.editModalOpen = true;\r\n        this.window = 2;\r\n\r\n        this.contactForm.patchValue({\r\n            id: contact.recordNumber,\r\n            type: contact.type,\r\n            details: contact.detail,\r\n            personId: contact.personID,\r\n\r\n        });\r\n\r\n        this.POPULATE_CONTACTS();\r\n    }\r\n\r\n    POPULATE_ADDRESS(): void {\r\n        this.clientS.getaddresstype()\r\n            .subscribe(data => {\r\n                this.addressArray = data.map(x => {\r\n                    return (new RemoveFirstLast().transform(x.description)).trim().toUpperCase();\r\n                });\r\n            })\r\n    }\r\n\r\n    POPULATE_CONTACTS(): void {\r\n        this.clientS.getcontacttype().subscribe(data => {\r\n            this.contactsArray = data.map(x => {\r\n                return (new RemoveFirstLast().transform(x.description)).trim().toUpperCase();\r\n            });\r\n        })\r\n    }\r\n\r\n    //From ControlValueAccessor interface\r\n    writeValue(value: any) {\r\n\r\n        if (value != null && !_.isEqual(value, this.innerValue)) {\r\n            this.innerValue = value;\r\n            this.pathForm(this.innerValue);\r\n            // this.tab = 1;\r\n        }\r\n    }\r\n\r\n    //From ControlValueAccessor interface\r\n    registerOnChange(fn: any) {\r\n        this.onChangeCallback = fn;\r\n    }\r\n\r\n    //From ControlValueAccessor interface\r\n    registerOnTouched(fn: any) {\r\n        this.onTouchedCallback = fn;\r\n    }\r\n\r\n    POPULATE_DATE_DROPDOWNS() {\r\n        this.months = months;\r\n        this.years = this.globalS.year();\r\n        this.days = days;\r\n\r\n        forkJoin([\r\n            this.clientS.getmanagers(),\r\n            this.listS.getlistcasemanagers()\r\n        ]).subscribe(data => {\r\n            this.casemanagers = data[0]\r\n        });\r\n    }\r\n\r\n    closeDrawer() {\r\n        this.editProfileDrawer = false;\r\n        this.addAddressDrawer = false;\r\n        this.addContactDrawer = false;\r\n    }\r\n\r\n}","<div class=\"avatar-container\">\r\n    <nz-avatar [nzSize]=\"64\" nzIcon=\"user\"></nz-avatar>\r\n</div>\r\n<div class=\"space-top\" style=\"margin:3rem 0\">\r\n    <div class=\"form-group\">\r\n        <label for=\"\" class=\"info\">Profile Information</label>\r\n        <div class=\"edit-btn\"><button nz-button nzType=\"default\" class=\"right\" (click)=\"editProfileOpen()\"><i nz-icon\r\n                    nzType=\"edit\" nzTheme=\"outline\"></i> Edit Profile</button>\r\n        </div>\r\n        <div class=\"space-top\">\r\n            <nz-descriptions [nzSize]=\"'small'\" [nzColumn]=\"{ xxl: 4, xl: 4, lg: 4, md: 4, sm: 2, xs: 1 }\"\r\n                [nzColon]=\"false\" nzTitle=\"\" nzLayout=\"vertical\">\r\n                <nz-descriptions-item nzTitle=\"Title\"><b>{{ user?.title }}</b></nz-descriptions-item>\r\n                <nz-descriptions-item nzTitle=\"Lastname\"><b>{{ user?.surnameOrg }}</b></nz-descriptions-item>\r\n                <nz-descriptions-item nzTitle=\"Firstname\"><b>{{ user?.firstName }}</b></nz-descriptions-item>\r\n                <nz-descriptions-item nzTitle=\"Middlename\"><b>{{ user?.middleNames }}</b></nz-descriptions-item>\r\n                <nz-descriptions-item nzTitle=\"Gender\"><b>{{ user?.gender }}</b></nz-descriptions-item>\r\n                <nz-descriptions-item nzTitle=\"Birthdate\"><b>{{ user?.dateOfBirth | date }}</b></nz-descriptions-item>\r\n                <nz-descriptions-item nzTitle=\"Case Manager\"><b>{{ user?.recipient_Coordinator }}</b>\r\n                </nz-descriptions-item>\r\n            </nz-descriptions>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"space-top\">\r\n    <div class=\"form-group\">\r\n        <label for=\"\" class=\"info\">Address Information</label>\r\n        <div class=\"edit-btn\"><button nz-button nzType=\"default\" (click)=\"addAddressOpen()\" class=\"right\"><i nz-icon\r\n                    nzType=\"plus\" nzTheme=\"outline\"></i> Add Address</button></div>\r\n        <nz-table #basicTable [nzData]=\"user?.addresses\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n            [nzShowPagination]=\"false\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Description</th>\r\n                    <th>Address</th>\r\n                    <th>Suburb</th>\r\n                    <th>Postcode</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data\">\r\n                    <td>{{ data.description }}</td>\r\n                    <td>{{ data.address1 }}</td>\r\n                    <td>{{ data.suburb }}</td>\r\n                    <td>{{ data.postCode }}</td>\r\n                    <td>\r\n                        <a (click)=\"editAddressOpen(data)\">Edit</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this address?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"confirm(1,data)\"\r\n                            (nzOnCancel)=\"cancel(1)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n\r\n    <div class=\"form-group space-top\">\r\n        <label for=\"\" class=\"info\">Contact Information</label>\r\n        <div class=\"edit-btn\"><button nz-button nzType=\"default\" (click)=\"addContactOpen()\" class=\"right\"><i nz-icon\r\n                    nzType=\"plus\" nzTheme=\"outline\"></i> Add Contact</button></div>\r\n        <nz-table #contactTable [nzData]=\"user?.contacts\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n            [nzShowPagination]=\"false\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Type</th>\r\n                    <th>Detail</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of contactTable.data\">\r\n                    <td>{{ data.type }}</td>\r\n                    <td>{{ data.detail }}</td>\r\n                    <td>\r\n                        <a (click)=\"editContactOpen(data)\">Edit</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this contact?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"confirm(2, data)\"\r\n                            (nzOnCancel)=\"cancel(2)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n<nz-modal [(nzVisible)]=\"editModalOpen\" [nzTitle]=\"window == 1 ? 'Edit Address': 'Edit Contact'\"\r\n    [nzFooter]=\"modalFooter\" (nzOnCancel)=\"handleCancel()\">\r\n    <div>\r\n\r\n        <div nz-row nzGutter=\"16\" *ngIf=\"window == 1\" [formGroup]=\"addressForm\">\r\n            <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                <label for=\"\">Description</label>\r\n                <nz-select formControlName=\"description\" nzAllowClear nzPlaceHolder=\"\"\r\n                    [nzDropdownMatchSelectWidth]=\"false\">\r\n                    <nz-option *ngFor=\"let address of addressArray\" [nzValue]=\"address\" [nzLabel]=\"address\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n            <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                <label for=\"\">Postcode & Suburb</label>\r\n                <suburb formControlName=\"pcodesuburb\"></suburb>\r\n            </div>\r\n            <div nz-col nzSpan=\"24\" class=\"form-group\">\r\n                <label for=\"\">Address</label>\r\n                <input nz-input type=\"text\" formControlName=\"address\">\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"window == 2\" [formGroup]=\"contactForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Contact Type</label>\r\n                <nz-select formControlName=\"type\" nzAllowClear nzPlaceHolder=\"\" [nzDropdownMatchSelectWidth]=\"false\">\r\n                    <nz-option *ngFor=\"let contact of contactsArray\" [nzValue]=\"contact\" [nzLabel]=\"contact\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Details</label>\r\n                <input nz-input type=\"text\" formControlName=\"details\">\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <ng-template #modalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Close</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"edit()\" [nzLoading]=\"loading\">Save</button>\r\n    </ng-template>\r\n</nz-modal>\r\n\r\n\r\n<nz-drawer [nzVisible]=\"editProfileDrawer\" [nzMaskClosable]=\"false\" [nzWidth]=\"640\" (nzOnClose)=\"closeDrawer()\"\r\n    [nzBodyStyle]=\"{ height: 'calc(100% - 55px)', overflow: 'auto', 'padding-bottom': '53px' }\">\r\n    <p class=\"title\" style=\" margin-bottom: 24px;\">User Profile</p>\r\n\r\n    <div [formGroup]=\"userForm\">\r\n        <div class=\"form-row\" nz-row nzGutter=\"16\">\r\n            <div nz-col nzSpan=\"4\" class=\"form-group\">\r\n                <label for=\"\">Title</label>\r\n                <nz-select class=\"title\" formControlName=\"title\" nzAllowClear nzPlaceHolder=\"\"\r\n                    [nzDropdownMatchSelectWidth]=\"false\">\r\n                    <nz-option *ngFor=\"let title of titles\" [nzValue]=\"title\" [nzLabel]=\"title\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-row\" nz-row nzGutter=\"16\">\r\n            <div nz-col nzSpan=\"5\" class=\"form-group\">\r\n                <label for=\"\">Gender</label>\r\n                <nz-select class=\"title\" formControlName=\"gender\" nzAllowClear nzPlaceHolder=\"\"\r\n                    [nzDropdownMatchSelectWidth]=\"false\">\r\n                    <nz-option *ngFor=\"let gender of genderArr\" [nzValue]=\"gender\" [nzLabel]=\"gender\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n            <div nz-col nzSpan=\"15\" class=\"form-group\">\r\n                <label for=\"\">Birthdate</label>\r\n                <div nz-row nzGutter=\"16\">\r\n                    <div nz-col nzSpan=\"9\">\r\n                        <nz-select class=\"title\" formControlName=\"month\" nzAllowClear nzPlaceHolder=\"\"\r\n                            [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let month of months\" [nzValue]=\"month\" [nzLabel]=\"month\">\r\n                            </nz-option>\r\n                        </nz-select>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"7\">\r\n                        <nz-select class=\"title\" formControlName=\"day\" nzAllowClear nzPlaceHolder=\"\"\r\n                            [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let day of days\" [nzValue]=\"day\" [nzLabel]=\"day\">\r\n                            </nz-option>\r\n                        </nz-select>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"7\">\r\n                        <nz-select class=\"title\" formControlName=\"year\" nzAllowClear nzPlaceHolder=\"\"\r\n                            [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let year of years\" [nzValue]=\"year\" [nzLabel]=\"year\">\r\n                            </nz-option>\r\n                        </nz-select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-row\" nz-row nzGutter=\"16\">\r\n            <div nz-col nzSpan=\"8\" class=\"form-group\">\r\n                <label for=\"\">Lastname</label>\r\n                <input type=\"text\" formControlName=\"surnameOrg\" nz-input autocomplete=\"palong\">\r\n            </div>\r\n            <div nz-col nzSpan=\"8\" class=\"form-group\">\r\n                <label for=\"\">Firstname</label>\r\n                <input type=\"text\" formControlName=\"firstName\" nz-input autocomplete=\"palong\">\r\n            </div>\r\n            <div nz-col nzSpan=\"8\" class=\"form-group\">\r\n                <label for=\"\">Middlename</label>\r\n                <input type=\"text\" formControlName=\"middleNames\" nz-input autocomplete=\"palong\">\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"footer\">\r\n        <button type=\"button\" (click)=\"closeDrawer()\" class=\"ant-btn\"\r\n            style=\"margin-right: 8px;\"><span>Cancel</span></button>\r\n        <button type=\"button\" nz-button (click)=\"editProfile()\" [nzLoading]=\"loading\"\r\n            class=\"ant-btn ant-btn-primary\"><span>Save</span></button>\r\n    </div>\r\n</nz-drawer>\r\n\r\n<nz-drawer [nzVisible]=\"addAddressDrawer\" [nzMaskClosable]=\"false\" [nzWidth]=\"640\" (nzOnClose)=\"closeDrawer()\"\r\n    [nzBodyStyle]=\"{ height: 'calc(100% - 55px)', overflow: 'auto', 'padding-bottom': '53px' }\">\r\n    <p class=\"title\" style=\" margin-bottom: 24px;\">Add Address Information</p>\r\n\r\n    <form nz-row nzGutter=\"16\" nz-form [nzLayout]=\"'vertical'\" [formGroup]=\"addressForm\">\r\n        <div nz-col nzSpan=\"12\">\r\n            <nz-form-item>\r\n                <nz-form-label>Description</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Description is required!\">\r\n                    <nz-select formControlName=\"description\" nzAllowClear nzPlaceHolder=\"\"\r\n                        [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let address of addressArray\" [nzValue]=\"address\" [nzLabel]=\"address\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n        <div nz-col nzSpan=\"12\">\r\n            <nz-form-item>\r\n                <nz-form-label>Suburb</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Suburb is required!\">\r\n                    <suburb formControlName=\"pcodesuburb\"></suburb>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n        <div nz-col nzSpan=\"24\">\r\n            <nz-form-item>\r\n                <nz-form-label>Address</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Address is required!\">\r\n                    <input nz-input type=\"text\" formControlName=\"address\">\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n    </form>\r\n\r\n    <div class=\"footer\">\r\n        <button type=\"button\" (click)=\"closeDrawer()\" class=\"ant-btn\"\r\n            style=\"margin-right: 8px;\"><span>Cancel</span></button>\r\n        <button type=\"button\" nz-button [nzLoading]=\"loading\" (click)=\"addAddress()\"\r\n            class=\"ant-btn ant-btn-primary\"><span>Save</span></button>\r\n    </div>\r\n</nz-drawer>\r\n\r\n<nz-drawer [nzVisible]=\"addContactDrawer\" [nzMaskClosable]=\"false\" [nzWidth]=\"420\" (nzOnClose)=\"closeDrawer()\"\r\n    [nzBodyStyle]=\"{ height: 'calc(100% - 55px)', overflow: 'auto', 'padding-bottom': '53px' }\">\r\n    <p class=\"title\" style=\" margin-bottom: 24px;\">Add Contact Information</p>\r\n\r\n    <form nz-row nzGutter=\"16\" nz-form [nzLayout]=\"'vertical'\" [formGroup]=\"contactForm\">\r\n        <div nz-col nzSpan=\"12\">\r\n            <nz-form-item>\r\n                <nz-form-label>Contact Type</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Contact Type is required!\">\r\n                    <nz-select formControlName=\"type\" nzAllowClear nzPlaceHolder=\"\"\r\n                        [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let contact of contactsArray\" [nzValue]=\"contact\" [nzLabel]=\"contact\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n        <div nz-col nzSpan=\"24\">\r\n            <nz-form-item>\r\n                <nz-form-label>Details</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Contact Details is required!\">\r\n                    <input nz-input type=\"text\" formControlName=\"details\">\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n    </form>\r\n\r\n    <div class=\"footer\">\r\n        <button type=\"button\" (click)=\"closeDrawer()\" class=\"ant-btn\"\r\n            style=\"margin-right: 8px;\"><span>Cancel</span></button>\r\n        <button type=\"button\" nz-button (click)=\"addContact()\" [nzLoading]=\"loading\"\r\n            class=\"ant-btn ant-btn-primary\"><span>Save</span></button>\r\n    </div>\r\n</nz-drawer>","import { Component, OnInit, Input, forwardRef, ViewChild, OnDestroy, Inject, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n\r\nimport { TimeSheetService, GlobalService, view, ClientService, StaffService, ListService, UploadService, months, days, gender, types, titles, caldStatuses, roles, SettingsService } from '@services/index';\r\nimport * as _ from 'lodash';\r\nimport { mergeMap, takeUntil, concatMap, switchMap, map } from 'rxjs/operators';\r\nimport { forkJoin, Observable, EMPTY } from 'rxjs';\r\n\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { RemoveFirstLast } from '@pipes/pipes';\r\n\r\ndeclare var Dto: any;\r\n\r\nconst noop = () => {\r\n};\r\n\r\nconst PROFILEPAGE_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  multi: true,\r\n  useExisting: forwardRef(() => ProfileComponent),\r\n};\r\n\r\n@Component({\r\n  selector: 'app-profile-page',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css'],\r\n  providers: [\r\n    PROFILEPAGE_VALUE_ACCESSOR\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class ProfileComponent implements OnInit, OnDestroy, ControlValueAccessor {\r\n\r\n  @Input() isAdmin: boolean = false;\r\n  \r\n  private onTouchedCallback: () => void = noop;\r\n  private onChangeCallback: (_: any) => void = noop;\r\n\r\n  showUpload: boolean = false;\r\n  innerValue: Dto.ProfileInterface;\r\n\r\n  profileStaffModal: boolean = false;\r\n  profileStaffOptionsModal: boolean = false;\r\n  profileStaffPreferredModal: boolean = false;\r\n\r\n  tabIndex: number = 0;\r\n\r\n  profileRecipientOptionsModal: boolean = false;\r\n\r\n  editModalOpen: boolean = false;\r\n  user: any;\r\n\r\n  window: number;\r\n  view = view;\r\n\r\n  selectedValue: any\r\n\r\n  contactsArray: Array<any> = [];\r\n  addressArray: Array<any> = [];\r\n\r\n  years: Array<string> = [];\r\n  months: Array<string> = [];\r\n  days: Array<string> = [];\r\n\r\n  casemanagers: Array<any> = [];\r\n  subscriptionArray: Array<Observable<any>> = []\r\n\r\n  contactForm: FormGroup;\r\n  addressForm: FormGroup;\r\n  userForm: FormGroup;\r\n  emailCoordinatorGroup: FormGroup;\r\n  contactIssueGroup: FormGroup;\r\n\r\n  loading: boolean = false;\r\n  editProfileDrawer: boolean = false;\r\n  addAddressDrawer: boolean = false;\r\n  addContactDrawer: boolean = false;\r\n  changeProfilePictureModal: boolean = false;\r\n\r\n  titles: Array<string> = titles;\r\n  genderArr: Array<string> = gender;\r\n  typesArr: Array<string> = types;\r\n  caldStatuses: Array<string> = caldStatuses\r\n\r\n  showMailManagerBtn: boolean = false;\r\n  emailManagerOpen: boolean = false;\r\n  emailManagerNoEmailShowNotif: boolean = false;\r\n\r\n  caseManagerDetails: any;\r\n  dropDowns: Dto.DropDowns;\r\n\r\n  _settings: SettingsService;\r\n\r\n  imgSrc: any;\r\n  defaultURL: any;\r\n\r\n  showAvatar: boolean;\r\n\r\n  constructor(\r\n    private globalS: GlobalService,\r\n    private clientS: ClientService,\r\n    private staffS: StaffService,\r\n    private timeS: TimeSheetService,\r\n    private listS: ListService,\r\n    private formBuilder: FormBuilder,\r\n    private message: NzMessageService,\r\n    private settings: SettingsService,\r\n    private cd: ChangeDetectorRef,\r\n    private uploadS: UploadService,\r\n    private ds: DomSanitizer\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    const { role } = this.globalS.decode();\r\n    this._settings = this.settings;\r\n\r\n    if (role == roles.client) {\r\n      this.showMailManagerBtn = true;\r\n    }\r\n\r\n    \r\n    this.buildForms();\r\n    this.POPULATE_DATE_DROPDOWNS();\r\n    this.POPULATE_OTHER_DROPDOWNS();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n  }\r\n\r\n  buildForms(): void {\r\n\r\n    this.contactIssueGroup = this.formBuilder.group({\r\n      value: ''\r\n    });\r\n\r\n    this.contactForm = this.formBuilder.group({\r\n      id: [''],\r\n      type: ['', [Validators.required]],\r\n      details: ['', [Validators.required]],\r\n      personId: ['']\r\n    });\r\n\r\n    this.addressForm = this.formBuilder.group({\r\n      id: [''],\r\n      description: [null, [Validators.required]],\r\n      address: [null, [Validators.required]],\r\n      pcodesuburb: [null],\r\n      personId: ['']\r\n    });\r\n\r\n\r\n    this.userForm = this.formBuilder.group({\r\n      surnameOrg: [''],\r\n      preferredName: [''],\r\n      firstName: [''],\r\n      middleNames: [''],\r\n      gender: [''],\r\n      year: [''],\r\n      month: [''],\r\n      day: [''],\r\n      title: [''],\r\n      uniqueID: '',\r\n\r\n      file1: [''],\r\n      file2: [''],\r\n      subCategory: [''],\r\n      branch: [''],\r\n\r\n      serviceRegion: [''],\r\n      casemanager: [''],\r\n\r\n      caldStatus: [''],\r\n      indigStatus: [''],\r\n      primaryDisability: [''],\r\n      note: [''],\r\n      type: [''],\r\n      jobCategory: [''],\r\n      adminCategory: [''],\r\n      team: [''],\r\n      gridNo: [''],\r\n      dLicense: [''],\r\n      mvReg: [''],\r\n      nReg: [''],\r\n      isEmail: false,\r\n      isRosterable: false,\r\n      isCaseLoad: false,\r\n      stf_Department: '',\r\n      rating: ''\r\n    });\r\n\r\n    this.resetEmailCoordinator();\r\n\r\n  }\r\n\r\n  patchTheseValuesInForm(user = this.user) {\r\n\r\n    if (this.innerValue.view === view.recipient) {\r\n      this.userForm.patchValue({\r\n        title: user.title,\r\n        surnameOrg: user.surnameOrg,\r\n        firstName: user.firstName,\r\n        middleNames: user.middleNames,\r\n        gender: this.globalS.searchOf(user.gender, this.genderArr, this.genderArr[2]),\r\n        year: this.globalS.filterYear(user.dateOfBirth),\r\n        month: this.globalS.searchOf(this.globalS.filterMonth(user.dateOfBirth), months, 'December'),\r\n        day: this.globalS.filterDay(user.dateOfBirth),\r\n\r\n        casemanager: user.recipient_Coordinator,\r\n        file1: user.agencyIdReportingCode,\r\n        branch: user.branch,\r\n        file2: user.urNumber,\r\n        subCategory: user.ubdMap,\r\n        serviceRegion: user.agencyDefinedGroup\r\n      });\r\n\r\n      this.contactIssueGroup.patchValue({\r\n        value: user.contactIssues\r\n      })\r\n\r\n      // this.contactIssueGroup.patchValue({\r\n      //     value: user.contactIssues\r\n      // })\r\n\r\n      // this.rosterAlertGroup.patchValue({\r\n      //     value: user.notes\r\n      // })\r\n\r\n      // this.runsheetAlertGroup.patchValue({\r\n      //     value: user.specialConsiderations\r\n      // })\r\n\r\n    }\r\n\r\n    if (this.innerValue.view === view.staff) {\r\n\r\n      this.userForm.patchValue({\r\n        title: user.title,\r\n        surnameOrg: user.lastName,\r\n        firstName: user.firstName,\r\n        middleNames: user.middleNames,\r\n        gender: this.globalS.searchOf(user.gender, this.genderArr, this.genderArr[2]),\r\n        year: this.globalS.filterYear(user.dob),\r\n        month: this.globalS.searchOf(this.globalS.filterMonth(user.dob), months, 'December'),\r\n        day: this.globalS.filterDay(user.dob),\r\n        preferredName: user.preferredName,\r\n\r\n        casemanager: user.pan_Manager,\r\n        type: user.category,\r\n        stf_Department: user.stf_Department,\r\n        jobCategory: user.staffGroup,\r\n        adminCategory: user.subCategory,\r\n        team: user.staffTeam,\r\n        serviceRegion: user.serviceRegion,\r\n        gridNo: user.ubdMap,\r\n        dLicense: user.dLicence,\r\n        mvReg: user.vRegistration,\r\n        nReg: user.nRegistration,\r\n        rating: user.rating,\r\n\r\n        caldStatus: user.caldStatus,\r\n        indigStatus: user.cstda_Indiginous,\r\n        primaryDisability: user.cstda_DisabilityGroup,\r\n        note: user.contactIssues,\r\n\r\n        isEmail: user.emailTimesheet,\r\n        isRosterable: user.isRosterable,\r\n        isCaseLoad: user.caseManager\r\n      });\r\n\r\n      this.cd.markForCheck();\r\n      this.cd.detectChanges();\r\n\r\n      // this.notesGroup.patchValue({\r\n      //     notes: user.contactIssues,\r\n      //     caldStatus: user.caldStatus ? user.caldStatus.toUpperCase() : null,\r\n      //     indigStatus: user.cstda_Indiginous ? user.cstda_Indiginous.toUpperCase() : null,\r\n      //     primaryDisability: user.cstda_DisabilityGroup ? user.cstda_DisabilityGroup.toUpperCase() : null\r\n      // })\r\n\r\n    }\r\n  }\r\n\r\n\r\n  resetEmailCoordinator() {\r\n    this.emailCoordinatorGroup = this.formBuilder.group({\r\n      subject: new FormControl('', [Validators.required]),\r\n      content: new FormControl('', [Validators.required])\r\n    });\r\n  }\r\n\r\n  emailManager() {\r\n    this.emailCoordinatorGroup.reset();\r\n\r\n    this.emailManagerOpen = true;\r\n    this.caseManagerDetails = this.casemanagers.find(x => { return x.description == this.user.recipient_Coordinator });\r\n    \r\n    this.emailManagerNoEmailShowNotif = this.globalS.isEmpty(this.caseManagerDetails) ? false : true; \r\n  }\r\n\r\n  pathForm(token: Dto.ProfileInterface) {\r\n\r\n    if (this.globalS.isEmpty(token))\r\n      return;\r\n\r\n    if (token.view == view.recipient) {\r\n      this.clientS.getprofile(token.name).pipe(\r\n        concatMap(data => {\r\n          this.user = data;\r\n          \r\n          this.patchTheseValuesInForm(data);\r\n          return this.getUserData(data.uniqueID);\r\n        }),\r\n        concatMap(data => {\r\n          // this.backgroundImage = this.refreshDynamicPicture(this.user);\r\n\r\n          this.user.addresses = this.addressBuilder(data[0]);\r\n          this.user.contacts = this.contactBuilder(data[1]);\r\n          this.user.casestaff = data[2];\r\n\r\n          this.cd.markForCheck();\r\n          this.cd.detectChanges();\r\n\r\n          // this.globalS.userProfile = this.user;\r\n\r\n          // this.addresses = data[0];\r\n          // this.contacts = data[1];\r\n\r\n          // this.patchTheseValuesInForm(this.user)\r\n\r\n          // this.addressForm.setControl('addresses', this.formBuilder.array(this.addressBuilder(data[0]) || []));\r\n          // this.contactForm.setControl('contacts', this.formBuilder.array(this.contactBuilder(data[1]) || []));\r\n\r\n          // this.tempContactArray = this.contactForm.get('contacts').value;\r\n          return this.staffS.getimages({ directory: this.user.filePhoto })\r\n        })\r\n      ).subscribe(blob => {\r\n        if (blob.isValid) {\r\n          this.showAvatar = false;\r\n          this.defaultURL = 'data:image/png;base64,' + blob.image;\r\n\r\n          this.imgSrc = this.ds.bypassSecurityTrustUrl(this.defaultURL);\r\n          this.src = this.defaultURL;\r\n        } else {\r\n          this.showAvatar = true;\r\n          this.src = null;\r\n        }\r\n\r\n        this.cd.markForCheck();\r\n        this.cd.detectChanges();\r\n      });     \r\n    }\r\n\r\n    if (token.view == view.staff) {\r\n      this.staffS.getprofile(token.name).pipe(\r\n        concatMap(data => {\r\n          if (!data) return EMPTY;\r\n          \r\n          this.user = data;\r\n          this.user.rating = data.rating ? data.rating.split('*').length - 1 : 0;\r\n          this.patchTheseValuesInForm(data);\r\n          return this.getUserData(data.uniqueID);\r\n        }),\r\n        concatMap(data => {\r\n          \r\n          //this.src = this.imgSrc;\r\n          // this.backgroundImage = this.refreshDynamicPicture(this.user)\r\n\r\n          this.user.addresses = this.addressBuilder(data[0]);\r\n          this.user.contacts = this.contactBuilder(data[1]);\r\n\r\n          this.cd.markForCheck();\r\n          this.cd.detectChanges();\r\n\r\n          // this.globalS.userProfile = this.user;\r\n\r\n          // this.addresses = data[0];\r\n          // this.contacts = data[1];\r\n\r\n          // this.patchTheseValuesInForm(this.user);\r\n          // this.addressForm.setControl('addresses', this.formBuilder.array(this.addressBuilder(data[0]) || []));\r\n          // this.contactForm.setControl('contacts', this.formBuilder.array(this.contactBuilder(data[1]) || []));\r\n          // this.tempContactArray = this.contactForm.get('contacts').value;\r\n          return this.staffS.getimages({ directory: this.user.filePhoto })\r\n        })\r\n      ).subscribe(blob => {\r\n\r\n        if (blob.isValid) {\r\n          this.showAvatar = false;\r\n          this.defaultURL = 'data:image/png;base64,' + blob.image;\r\n\r\n          this.imgSrc = this.ds.bypassSecurityTrustUrl(this.defaultURL);\r\n          this.src = this.defaultURL;\r\n\r\n        } else {\r\n          this.showAvatar = true;\r\n          this.src = null;\r\n        }\r\n\r\n        this.cd.markForCheck();\r\n        this.cd.detectChanges();\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n  addressBuilder(data: Array<any>): Array<any> {\r\n    data.forEach(e => {\r\n      e.description = new RemoveFirstLast().transform(e.description).trim()\r\n    });\r\n    return data;\r\n  }\r\n\r\n  contactBuilder(data: Array<any>): Array<any>{\r\n    data.forEach(e => {\r\n      e.type = new RemoveFirstLast().transform(e.type).trim()\r\n    });\r\n    return data;\r\n  }\r\n\r\n  getUserData(code: any) {\r\n    return forkJoin([\r\n      this.clientS.getaddress(code),\r\n      this.clientS.getcontacts(code),\r\n      this.timeS.getcasestaff(code)\r\n    ]);\r\n  }\r\n\r\n  cancel(v: number): void {\r\n\r\n  }\r\n\r\n  confirm(view: number, data: any): void {\r\n\r\n    if (view == 1) {\r\n      this.clientS.deleteaddress({\r\n        RecordNumber: data.recordNumber,\r\n        PersonID: data.personID\r\n      }).subscribe(data => {\r\n        if (data.success) {\r\n          this.globalS.sToast('Success', 'Address deleted')\r\n          this.pathForm(this.innerValue);\r\n        }\r\n      })\r\n    }\r\n\r\n    if (view == 2) {\r\n      this.clientS.deletecontact({\r\n        RecordNumber: data.recordNumber,\r\n        PersonID: data.personID\r\n      }).subscribe(data => {\r\n        if (data.success) {\r\n          this.globalS.sToast('Success', 'Contact deleted')\r\n          this.pathForm(this.innerValue);\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  tabChange(index: number) {\r\n    \r\n    if (index == 0) {\r\n      this.contactIssueGroup.patchValue({\r\n        value: this.user.contactIssues\r\n      })\r\n    }\r\n\r\n    if (index == 1) {\r\n      console.log(this.user)\r\n      this.contactIssueGroup.patchValue({\r\n        value: this.user.notes\r\n      })\r\n    }\r\n\r\n    if (index == 2) {\r\n      this.contactIssueGroup.patchValue({\r\n        value: this.user.specialConsiderations\r\n      })\r\n    }\r\n  }\r\n\r\n  handleCancel(): void {\r\n    \r\n    this.addressForm.reset();\r\n    this.editModalOpen = false;\r\n    this.profileStaffModal = false;\r\n    this.profileStaffOptionsModal = false;\r\n    this.profileStaffPreferredModal = false;\r\n    this.profileRecipientOptionsModal = false;\r\n    this.changeProfilePictureModal = false;\r\n    this.loadPhoto = false;\r\n    this.src = '';\r\n  }\r\n\r\n  formatDate(data: any): string {\r\n    let year = data.get('year').value;\r\n    let month = this.months.indexOf(data.get('month').value) + 1;\r\n    let day = data.get('day').value;\r\n\r\n    if (year == null || day == null || month == 0)\r\n      return null;\r\n\r\n    return year + '/' + month + '/' + day + ' ' + '00' + ':' + '00' + ':' + '00';\r\n  }\r\n\r\n  formatContact(contactForm: FormGroup): Array<Dto.PhoneFaxOther> {\r\n    let temp: Array<Dto.PhoneFaxOther> = [];\r\n\r\n    const { id, type, details, personId } = contactForm.value;\r\n\r\n    let pf: Dto.PhoneFaxOther = {\r\n      RecordNumber: id,\r\n      Type: type,\r\n      Detail: details,\r\n      PersonID: personId\r\n    }\r\n\r\n    temp.push(pf);\r\n    return temp;\r\n  }\r\n\r\n  convertRatingToString(rating: number): string {\r\n    if (!rating) rating = 0;\r\n    var ratingStr = \"\";\r\n    for (var a = 0; a < rating; a++){\r\n      ratingStr += '*';\r\n    }\r\n    return ratingStr;\r\n  }\r\n\r\n  saveNotes() {\r\n    const notes = this.userForm.value;\r\n    // console.log(notes);\r\n    let staff: Dto.Staffs = {\r\n      accountNo: this.user.accountNo,\r\n      uniqueID: this.user.uniqueID,\r\n      caldStatus: notes.caldStatus,\r\n      cstda_Indiginous: notes.indigStatus,\r\n      cstda_DisabilityGroup: notes.primaryDisability,\r\n      contactIssues: notes.note\r\n    }\r\n\r\n    this.subscriptionArray.push(this.staffS.updatedisabilitystatus(staff));\r\n    this.processSubscriptions();\r\n  }\r\n\r\n  saveProfile() {\r\n\r\n    if (this.userForm.dirty) {\r\n      let data = this.userForm.value;\r\n      let birthdate = this.formatDate(this.userForm);\r\n\r\n      if (this.innerValue.view == 'staff') {\r\n        let user: Dto.Staffs = {\r\n          accountNo: this.innerValue.name,\r\n          firstName: data.firstName,\r\n          middleNames: data.middleNames,\r\n          lastName: data.surnameOrg,\r\n          gender: data.gender,\r\n          title: data.title,\r\n          dob: birthdate,\r\n\r\n          rating: this.convertRatingToString(data.rating),\r\n          pan_Manager: data.casemanager,\r\n          category: data.type,\r\n          stf_Department: data.stf_Department,\r\n          staffGroup: data.jobCategory,\r\n          subCategory: data.adminCategory,\r\n          staffTeam: data.team,\r\n          serviceRegion: data.serviceRegion,\r\n          ubdMap: data.gridNo,\r\n          dLicence: data.dLicense,\r\n          vRegistration: data.mvReg,\r\n          nRegistration: data.nReg,\r\n          caseManager: data.isCaseLoad,\r\n          isRosterable: data.isRosterable,\r\n          emailTimesheet: data.isEmail,\r\n\r\n          preferredName: data.preferredName\r\n        }\r\n        \r\n        this.subscriptionArray.push(this.staffS.updateusername(user));\r\n      }\r\n\r\n      if (this.innerValue.view == 'recipient') {\r\n        let user: Dto.Recipients = {\r\n          accountNo: this.innerValue.name,\r\n          firstName: data.firstName,\r\n          middleNames: data.middleNames,\r\n          surnameOrg: data.surnameOrg,\r\n          gender: data.gender,\r\n          title: data.title,\r\n          dateOfBirth: birthdate,\r\n\r\n          recipient_Coordinator: data.casemanager,\r\n          agencyIdReportingCode: data.file1,\r\n          urNumber: data.file2,\r\n          branch: data.branch,\r\n          agencyDefinedGroup: data.serviceRegion,\r\n          ubdMap: data.subCategory\r\n\r\n        }\r\n\r\n        this.subscriptionArray.push(this.clientS.updateusername(user));\r\n      }\r\n\r\n      this.processSubscriptions();\r\n    }\r\n  }\r\n\r\n  formatAddress(addressForm: FormGroup): Array<Dto.NamesAndAddresses> {\r\n    const { pcodesuburb, address, description, id, personId } = addressForm.value;\r\n\r\n    let pcode = /(\\d+)/g.test(pcodesuburb) ? pcodesuburb.match(/(\\d+)/g)[0].trim() : \"\";\r\n    let suburb = /(\\D+)/g.test(pcodesuburb) ? pcodesuburb.match(/(\\D+)/g)[0].trim() : \"\"\r\n    let state = suburb && suburb.split(',').length > 1 ? suburb.split(',')[1].trim() : '';\r\n\r\n    let temp: Array<Dto.NamesAndAddresses> = [];\r\n\r\n    let na: Dto.NamesAndAddresses = {\r\n      Suburb: suburb && suburb.split(',').length > 0 ? suburb.split(',')[0] : suburb,\r\n      PostCode: pcode,\r\n      Stat: state,\r\n      Description: description,\r\n      Address1: address,\r\n      RecordNumber: id,\r\n      PersonID: personId\r\n    }\r\n\r\n    temp.push(na);\r\n    return temp;\r\n  }\r\n\r\n  editProfile(): void {\r\n    let data = this.userForm.value;\r\n    let birthdate = this.formatDate(this.userForm);\r\n\r\n    if (this.innerValue.view == 'staff') {\r\n      let user: Dto.Staffs = {\r\n        accountNo: this.innerValue.name,\r\n        firstName: data.firstName,\r\n        middleNames: data.middleNames,\r\n        lastName: data.surnameOrg,\r\n        gender: data.gender,\r\n        title: data.title,\r\n        dob: birthdate,\r\n\r\n        rating: data.rating,\r\n        pan_Manager: data.casemanager,\r\n        category: data.type,\r\n        stf_Department: data.stf_Department,\r\n        staffGroup: data.jobCategory,\r\n        subCategory: data.adminCategory,\r\n        staffTeam: data.team,\r\n        serviceRegion: data.serviceRegion,\r\n        ubdMap: data.gridNo,\r\n        dLicence: data.dLicense,\r\n        vRegistration: data.mvReg,\r\n        nRegistration: data.nReg,\r\n        caseManager: data.isCaseLoad,\r\n        isRosterable: data.isRosterable,\r\n        emailTimesheet: data.isEmail,\r\n\r\n        preferredName: data.preferredName\r\n      }\r\n      this.subscriptionArray.push(this.staffS.updateusername(user));\r\n    }\r\n\r\n    if (this.innerValue.view == 'recipient') {\r\n      let user: Dto.Recipients = {\r\n        accountNo: this.innerValue.name,\r\n        firstName: data.firstName,\r\n        middleNames: data.middleNames,\r\n        surnameOrg: data.surnameOrg,\r\n        gender: data.gender,\r\n        title: data.title,\r\n        dateOfBirth: birthdate,\r\n\r\n        recipient_Coordinator: data.casemanager,\r\n        agencyIdReportingCode: data.file1,\r\n        urNumber: data.file2,\r\n        branch: data.branch,\r\n        agencyDefinedGroup: data.serviceRegion,\r\n        ubdMap: data.subCategory\r\n\r\n      }\r\n      this.subscriptionArray.push(this.clientS.updateusername(user));\r\n    }\r\n    this.processSubscriptions();\r\n  }\r\n\r\n  processSubscriptions() {\r\n    this.loading = true;\r\n    forkJoin(this.subscriptionArray).subscribe(\r\n      data => {\r\n        this.subscriptionArray = [];\r\n        this.globalS.sToast('Success', 'Profile Updated!');\r\n        this.pathForm(this.innerValue);\r\n\r\n        this.closeDrawer();\r\n        // let result = data.filter(x => x.success == false);\r\n        // if (result.length > 0)\r\n        //     this.resultToast.fail = true;\r\n        // else {\r\n        //     this.showAlert();\r\n        //     this.pathForm();\r\n        // }\r\n\r\n        // this.resetForms();\r\n      }, err => {\r\n\r\n      }, () => {\r\n\r\n        this.loading = false;\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n\r\n  edit(): void {\r\n\r\n    if (this.window == 1) {\r\n      this.loading = true;\r\n      this.clientS.updateuseraddress(this.formatAddress(this.addressForm))\r\n        .subscribe(data => {\r\n          if (data.success) {\r\n            this.globalS.sToast('Success', 'Address Updated!');\r\n            this.pathForm(this.innerValue);\r\n          }\r\n        }, (err) => {\r\n\r\n        }, () => {\r\n          this.loading = false;\r\n          this.editModalOpen = false;\r\n        })\r\n    }\r\n\r\n    if (this.window == 2) {\r\n      this.clientS.updateusercontact(this.formatContact(this.contactForm)).subscribe(data => {\r\n        if (data.success) {\r\n          this.globalS.sToast('Success', 'Contact Updated!');\r\n          this.pathForm(this.innerValue);\r\n        }\r\n      }, (err) => {\r\n\r\n      }, () => {\r\n        this.loading = false;\r\n        this.editModalOpen = false;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  editProfileOpen() {\r\n    this.editProfileDrawer = true;\r\n  }\r\n\r\n  addAddressOpen() {\r\n    this.addAddressDrawer = true;\r\n    this.addressForm.reset({\r\n      description: null,\r\n      address: null,\r\n      pcodesuburb: null,\r\n    });\r\n    this.POPULATE_ADDRESS();\r\n  }\r\n\r\n  addContactOpen() {\r\n    this.addContactDrawer = true;\r\n    this.contactForm.reset();\r\n    this.POPULATE_CONTACTS();\r\n  }\r\n\r\n  addContact() {\r\n    for (const i in this.contactForm.controls) {\r\n      this.contactForm.controls[i].markAsDirty();\r\n      this.contactForm.controls[i].updateValueAndValidity();\r\n    }\r\n\r\n    if (!this.contactForm.valid)\r\n      return;\r\n\r\n    this.contactForm.patchValue({\r\n      personId: this.user.uniqueID,\r\n      id: -1\r\n    });\r\n\r\n\r\n    //console.log(this.contactForm.value);\r\n\r\n    this.subscriptionArray.push(this.clientS.addcontact(this.formatContact(this.contactForm)));\r\n    this.processSubscriptions();\r\n  }\r\n\r\n  addAddress(): void {\r\n\r\n    for (const i in this.addressForm.controls) {\r\n      this.addressForm.controls[i].markAsDirty();\r\n      this.addressForm.controls[i].updateValueAndValidity();\r\n    }\r\n\r\n    if(this.globalS.isEmpty(this.addressForm.value.pcodesuburb)){\r\n      this.addressForm.controls.pcodesuburb.setErrors({'incorrect': true});\r\n    }\r\n\r\n    if (!this.addressForm.valid && this.globalS.isEmpty(this.addressForm.value.pcodesuburb)){\r\n      this.globalS.wToast('Warning','All items are required');      \r\n      return;\r\n    }\r\n      \r\n\r\n    this.addressForm.patchValue({\r\n      personId: this.user.uniqueID,\r\n      id: -1\r\n    });\r\n\r\n    this.subscriptionArray.push(this.clientS.addaddress(this.formatAddress(this.addressForm)));\r\n    this.processSubscriptions();\r\n\r\n  }\r\n\r\n  editAddressOpen(address: any): void {\r\n\r\n    this.editModalOpen = true;\r\n    this.window = 1;\r\n    this.addressForm.reset();\r\n\r\n    this.addressForm.patchValue({\r\n      id: address.recordNumber,\r\n      description: address.description,\r\n      address: address.address1,\r\n      pcodesuburb: `${address.postCode} ${address.suburb ? address.suburb.trim() : ''} ${address.stat ? `, ${address.stat}` : ''}`,\r\n      personId: address.personID\r\n    });\r\n\r\n    this.POPULATE_ADDRESS();\r\n  }\r\n\r\n  editContactOpen(contact: any): void {\r\n    this.editModalOpen = true;\r\n    this.window = 2;\r\n\r\n    this.contactForm.patchValue({\r\n      id: contact.recordNumber,\r\n      type: contact.type,\r\n      details: contact.detail,\r\n      personId: contact.personID,\r\n\r\n    });\r\n\r\n    this.POPULATE_CONTACTS();\r\n  }\r\n\r\n  POPULATE_ADDRESS(): void {\r\n    this.clientS.getaddresstype()\r\n      .subscribe(data => {\r\n        this.addressArray = data.map(x => {\r\n          return (new RemoveFirstLast().transform(x.description)).trim().toUpperCase();\r\n        });\r\n      })\r\n  }\r\n\r\n  POPULATE_CONTACTS(): void {\r\n    this.clientS.getcontacttype().subscribe(data => {\r\n      this.contactsArray = data.map(x => {\r\n        return (new RemoveFirstLast().transform(x.description)).trim().toUpperCase();\r\n      });\r\n    })\r\n  }\r\n\r\n  //From ControlValueAccessor interface\r\n  writeValue(value: any) {\r\n    if (value != null && !_.isEqual(value, this.innerValue)) {\r\n      this.innerValue = value;\r\n      this.pathForm(this.innerValue);\r\n      console.log(value);\r\n      // this.tab = 1;\r\n    }\r\n  }\r\n\r\n  //From ControlValueAccessor interface\r\n  registerOnChange(fn: any) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  //From ControlValueAccessor interface\r\n  registerOnTouched(fn: any) {\r\n    this.onTouchedCallback = fn;\r\n  }\r\n\r\n  POPULATE_OTHER_DROPDOWNS() {\r\n    forkJoin([\r\n      this.listS.getlistbranches(),\r\n      this.listS.getliststaffgroup(),\r\n      this.listS.getliststaffadmin(),\r\n      this.listS.getliststaffteam(),\r\n      this.listS.getlistcasemanagers(),\r\n      this.listS.getserviceregion(),\r\n      this.listS.getlistdisabilities(),\r\n      this.listS.getlistindigstatus()\r\n    ]).subscribe(data=> {\r\n      this.dropDowns = {\r\n        branchesArr: data[0],\r\n        jobCategoryArr: data[1],\r\n        adminCategoryArr: data[2],\r\n        teamArr: data[3],\r\n        managerArr: data[4],\r\n        serviceRegionArr: data[5],\r\n        disabilitiesArr: data[6],\r\n        indigenousArr: data[7]\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  POPULATE_DATE_DROPDOWNS() {\r\n    this.months = months;\r\n    this.years = this.globalS.year();\r\n    this.days = days;\r\n\r\n    forkJoin([\r\n      this.clientS.getmanagers(),\r\n      this.listS.getlistcasemanagers()\r\n    ]).subscribe(data => {\r\n      this.casemanagers = data[0];\r\n    });\r\n  }\r\n\r\n  closeDrawer() {\r\n    this.editProfileDrawer = false;\r\n    this.addAddressDrawer = false;\r\n    this.addContactDrawer = false;\r\n  }\r\n\r\n  messageFinal: any;\r\n\r\n  sendMail() {\r\n    for (const i in this.emailCoordinatorGroup.controls) {\r\n      this.emailCoordinatorGroup.controls[i].markAsDirty();\r\n      this.emailCoordinatorGroup.controls[i].updateValueAndValidity();\r\n    }\r\n\r\n    if (!this.emailCoordinatorGroup.valid)\r\n      return;\r\n    \r\n    console.log(this.user);\r\n    const { title, firstName, surnameOrg, accountNo } = this.user;\r\n    const { subject, content } = this.emailCoordinatorGroup.value;\r\n    const { detail, description } = this.caseManagerDetails;\r\n\r\n    const emailData = {\r\n        Subject: subject,\r\n        Content: content,\r\n        RecipientName: `${title} ${firstName} ${surnameOrg}(${accountNo})`,\r\n        CCAddresses: [],\r\n        FromAddresses: [],\r\n        ToAddresses: [{\r\n            Name: description,\r\n            Address: detail\r\n        }]\r\n    }\r\n    this.message\r\n      .loading('Processing', { nzDuration: 2000 })      \r\n      .onClose!.pipe(       \r\n        switchMap(() => {\r\n          this.messageFinal = this.message.loading('Sending Email', { nzDuration: 0 }).messageId;\r\n          return this.clientS.postemailcoordinator(emailData)\r\n        }),\r\n        concatMap((x) => {\r\n          this.message.remove(this.messageFinal);\r\n          this.emailManagerOpen = false;\r\n          if(x) {\r\n            return this.message.success('Email Sent', { nzDuration: 1000 }).onClose!\r\n          } else {\r\n            return this.message.error('An error occured!').onClose!\r\n          }\r\n        })\r\n      )\r\n      .subscribe(() => {\r\n        \r\n      });\r\n    \r\n  }\r\n\r\n  saveTab() {\r\n    const { sqlId } = this.user;\r\n\r\n    if (this.tabIndex == 0) {\r\n\r\n      this.timeS.updatealertsissues({\r\n        sqlId: sqlId,\r\n        issueType: 'ci',\r\n        notes: this.contactIssueGroup.value.value\r\n      }).subscribe(data => {\r\n        this.globalS.sToast('Success', 'Contact Issues Updated');\r\n      });\r\n      this.contactIssueGroup.markAsPristine();\r\n\r\n    }\r\n\r\n    if (this.tabIndex == 1) {\r\n      this.timeS.updatealertsissues({\r\n        sqlId: sqlId,\r\n        issueType: 'roa',\r\n        notes: this.contactIssueGroup.value.value\r\n      }).subscribe(data => {\r\n        this.globalS.sToast('Success', 'Roster Alert Updated');        \r\n      })\r\n      this.contactIssueGroup.markAsPristine();\r\n    }\r\n\r\n    if (this.tabIndex == 2) {\r\n      this.timeS.updatealertsissues({\r\n        sqlId: sqlId,\r\n        issueType: 'rua',\r\n        notes: this.contactIssueGroup.value.value\r\n      }).subscribe(data => {\r\n        this.globalS.sToast('Success', 'Runoff Alert Updated');\r\n      });\r\n      this.contactIssueGroup.markAsPristine();\r\n    }\r\n\r\n  }\r\n\r\n  changeProfilePicture() {\r\n    this.changeProfilePictureModal = true;\r\n    this.src = this.defaultURL;\r\n  }\r\n\r\n  errorUrl(event: any) {\r\n    this.imgSrc = '';\r\n    this.showAvatar = true;\r\n  }\r\n\r\n  src: any;\r\n  uploadChange(e: Event | any) {\r\n    e.preventDefault();\r\n    var fileLen = e.target.files.length;\r\n    var file = e.target.files;\r\n\r\n    if (fileLen == 0) {\r\n      this.globalS.wToast('Warning', 'Select a picture');\r\n      return;\r\n    }\r\n\r\n    if (fileLen > 1) {\r\n      this.globalS.wToast('Warning', 'File limit exceeded');\r\n      return;\r\n    }\r\n\r\n    this.src = file[0];\r\n  }\r\n\r\n  private imgBlobData: any;\r\n  imgBLOB(file: any) {\r\n    this.imgBlobData = file;\r\n  }\r\n\r\n  loadPhoto: boolean = false;\r\n  uploadPicture() {\r\n\r\n    this.loadPhoto = true;\r\n    this.uploadS.uploadProfilePicture(this.imgBlobData.formData)\r\n      .subscribe(blob => {\r\n        this.defaultURL = 'data:image/png;base64,' + blob.image;\r\n\r\n        this.imgSrc = this.ds.bypassSecurityTrustUrl(this.defaultURL);\r\n        this.globalS.sToast('Success', 'Profile picture updated');\r\n        this.showAvatar = false;\r\n\r\n        this.handleCancel();\r\n      });\r\n  }\r\n}","<ng-container *ngIf=\"!isAdmin\">\r\n    <div class=\"space-top\" style=\"margin:3rem 0\">\r\n        <div class=\"form-group\">\r\n            <!-- <label for=\"\" class=\"info\">Profile Information</label> -->\r\n            <div class=\"edit-btn\">\r\n                <div class=\"right-btns\">\r\n                    <button *ngIf=\"showMailManagerBtn\" (click)=\"emailManager()\" nz-button nzType=\"default\"><i nz-icon\r\n                            nzType=\"mail\" nzTheme=\"outline\"></i> EMAIL Manager</button>\r\n                    <button nz-button nzType=\"primary\" nzValue=\"small\" (click)=\"editProfileOpen()\"><i nz-icon style=\"color:#fff\" nzType=\"edit\"\r\n                            nzTheme=\"outline\"></i> Edit Profile</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"space-top\">\r\n                <div nz-row>\r\n                    <div class=\"avatar-container\" [class.alert-show]=\"showUpload\" (mouseover)=\"showUpload=true\"\r\n                        (mouseleave)=\"showUpload=false\">\r\n                        <img *ngIf=\"showAvatar == false\" [src]=\"imgSrc\" alt=\"\" (error)=\"errorUrl($event)\">\r\n                        <nz-avatar *ngIf=\"showAvatar == true\"  [nzShape]=\"'square'\" [nzSize]=\"64\" nzIcon=\"user\"></nz-avatar>\r\n                    \r\n                        <div class=\"prof-alert\" (click)=\"changeProfilePicture()\">\r\n                            <i class=\"material-icons\"> photo_camera </i>\r\n                            Upload\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <h3>{{ user?.uniqueID || '-' }}</h3>\r\n                        <h2 class=\"highlight\">{{ user?.title }} {{ user?.firstName }} {{ user?.middleNames }} {{ user?.lastName || user?.surnameOrg  }}<span\r\n                                *ngIf=\"user?.preferredName\" style=\"color:#8c928e\">({{ user?.preferredName }})</span></h2>\r\n                    </div>\r\n                </div>                \r\n                <div nz-row nzGutter=\"16\">\r\n                    <div nz-col nzSpan=\"4\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"highlight\"><i nz-icon class=\"icon\" nzType=\"calendar\" nzTheme=\"outline\"></i> Birthdate</label>\r\n                            <span *ngIf=\"innerValue?.view === view.recipient\">{{ user?.dateOfBirth | date: 'dd / MM / yyyy' || '-' }}</span>\r\n                            <span *ngIf=\"innerValue?.view === view.staff\">{{ user?.dob | date: 'dd / MM / yyyy' || '-' }}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"4\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"highlight\"><i nz-icon class=\"icon\" nzType=\"woman\" nzTheme=\"outline\"></i> Gender</label>\r\n                            <span>{{ user?.gender }}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"4\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"highlight\"><i nz-icon class=\"icon\" nzType=\"alert\" nzTheme=\"outline\"></i> Case Manager</label>\r\n                            <span>{{ user?.recipient_Coordinator || '-' }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- <nz-descriptions [nzSize]=\"'small'\" [nzColumn]=\"{ xxl: 4, xl: 4, lg: 4, md: 4, sm: 2, xs: 1 }\"\r\n                    [nzColon]=\"false\" nzTitle=\"\" nzLayout=\"vertical\">\r\n                    <nz-descriptions-item nzTitle=\"Title\"><b>{{ user?.title || '-' }}</b></nz-descriptions-item>\r\n                    <nz-descriptions-item nzTitle=\"Lastname\">\r\n                        <b *ngIf=\"innerValue?.view === view.recipient\">{{ user?.surnameOrg || '-' }}</b>\r\n                        <b *ngIf=\"innerValue?.view === view.staff\">{{ user?.lastName || '-' }}</b>\r\n                    </nz-descriptions-item>\r\n                    <nz-descriptions-item nzTitle=\"Firstname\"><b>{{ user?.firstName || '-' }}</b></nz-descriptions-item>\r\n                    <nz-descriptions-item nzTitle=\"Middlename\"><b>{{ user?.middleNames || '-' }}</b></nz-descriptions-item>\r\n                    <nz-descriptions-item nzTitle=\"Gender\"><b>{{ user?.gender || '-' }}</b></nz-descriptions-item>\r\n                    <nz-descriptions-item nzTitle=\"Birthdate\">\r\n                        <b *ngIf=\"innerValue?.view === view.recipient\">{{ user?.dateOfBirth | date }}</b>\r\n                        <b *ngIf=\"innerValue?.view === view.staff\">{{ user?.dob | date }}</b>\r\n                    </nz-descriptions-item>\r\n                    <nz-descriptions-item *ngIf=\"innerValue?.view === view.recipient\" nzTitle=\"Case Manager\">\r\n                        <b>{{ user?.recipient_Coordinator || '-' }}</b>\r\n                    </nz-descriptions-item>\r\n                </nz-descriptions> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"space-top\">\r\n        <div class=\"form-group\">\r\n            <label for=\"\" class=\"info\"><i class=\"material-icons icon\"> location_on </i> Address Information</label>\r\n            <div class=\"edit-btn\">\r\n                <div class=\"right-btns\">\r\n                    <button nz-button nzType=\"default\" nzValue=\"small\" (click)=\"addAddressOpen()\" class=\"right\"><i nz-icon\r\n                            nzType=\"plus\" nzTheme=\"outline\"></i> Add Address</button>\r\n                </div>\r\n            </div>\r\n            <ul style=\"width: 50%;\">\r\n                <li *ngFor=\"let data of user?.addresses\">\r\n                    <div class=\"options\">\r\n                        <i nz-icon nzType=\"edit\" nzTooltipTitle=\"Update\" nz-tooltip nzTooltipPlacement=\"top\" nzTheme=\"outline\"\r\n                            class=\"neutral\" (click)=\"editAddressOpen(data)\"></i>\r\n                        <i nz-icon nzType=\"delete\" class=\"neutral\" nz-tooltip nzTooltipTitle=\"Delete\" nzTooltipPlacement=\"top\"\r\n                            nzTheme=\"outline\" nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this address?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"confirm(1,data)\" (nzOnCancel)=\"cancel(1)\"></i>\r\n                    </div>\r\n                    <div>{{ data.postCode }} {{ data.address1 }}, {{ data.suburb}}</div>\r\n                    <b>{{ data.description }}</b>\r\n                </li>\r\n            </ul>\r\n            <!-- <nz-table #basicTable [nzData]=\"user?.addresses\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n                [nzShowPagination]=\"false\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Description</th>\r\n                        <th>Address</th>\r\n                        <th>Suburb</th>\r\n                        <th>Postcode</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let data of basicTable.data\">\r\n                        <td>{{ data.description }}</td>\r\n                        <td>{{ data.address1 }}</td>\r\n                        <td>{{ data.suburb }}</td>\r\n                        <td>{{ data.postCode }}</td>\r\n                        <td>\r\n                            <a (click)=\"editAddressOpen(data)\">Edit</a>\r\n                            <nz-divider nzType=\"vertical\"></nz-divider>\r\n                            <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this address?\"\r\n                                nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"confirm(1,data)\"\r\n                                (nzOnCancel)=\"cancel(1)\">Delete</a>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </nz-table> -->\r\n        </div>\r\n    \r\n        <div class=\"form-group space-top\">\r\n            <label for=\"\" class=\"info\"><i class=\"material-icons icon\"> phone </i> Contact Information</label>\r\n            <div class=\"edit-btn\">\r\n                <div class=\"right-btns\">\r\n                    <button nz-button nzType=\"default\" nzValue=\"small\" (click)=\"addContactOpen()\" class=\"right\"><i nz-icon\r\n                            nzType=\"plus\" nzTheme=\"outline\"></i> Add Contact</button>\r\n                </div>\r\n            </div>\r\n            <!-- <nz-table #contactTable [nzData]=\"user?.contacts\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n                [nzShowPagination]=\"false\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Type</th>\r\n                        <th>Detail</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let data of contactTable.data\">\r\n                        <td>{{ data.type }}</td>\r\n                        <td>{{ data.detail }}</td>\r\n                        <td>\r\n                            <a (click)=\"editContactOpen(data)\">Edit</a>\r\n                            <nz-divider nzType=\"vertical\"></nz-divider>\r\n                            <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this contact?\"\r\n                                nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"confirm(2, data)\"\r\n                                (nzOnCancel)=\"cancel(2)\">Delete</a>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </nz-table> -->\r\n            <ul style=\"width: 50%;\">\r\n                <li *ngFor=\"let data of user?.contacts\">\r\n                    <div class=\"options\">\r\n                        <i nz-icon nzType=\"edit\" nzTooltipTitle=\"Update\" (click)=\"editContactOpen(data)\" nz-tooltip\r\n                            nzTooltipPlacement=\"top\" nzTheme=\"outline\" class=\"neutral\"></i>\r\n                        <i nz-icon nzType=\"delete\" class=\"neutral\" nz-tooltip nzTooltipTitle=\"Delete\" nzTooltipPlacement=\"top\"\r\n                            nzTheme=\"outline\" nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this contact?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"confirm(2, data)\" (nzOnCancel)=\"cancel(2)\"></i>\r\n                    </div>\r\n                    <div>{{ data.detail }}</div>\r\n                    <b>{{ data.type }}</b>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n\r\n\r\n<ng-container *ngIf=\"isAdmin\">\r\n    <div nz-row style=\"margin-top:2rem\" nzGutter=\"16\">\r\n\r\n        <ng-container *ngIf=\"this.innerValue?.view == 'staff'\">\r\n            <div nz-col nzSpan=\"12\">\r\n                <div nz-row class=\"divider\">\r\n                    <i nz-icon nzType=\"edit\" nzTheme=\"outline\" (click)=\"profileStaffModal = true;patchTheseValuesInForm()\"></i>\r\n                    <div nz-row>\r\n                        <div class=\"avatar-container\" [class.alert-show]=\"showUpload\" (mouseover)=\"showUpload=true\" (mouseleave)=\"showUpload=false\">\r\n                            <img *ngIf=\"showAvatar == false\" [src]=\"imgSrc\" alt=\"\" (error)=\"errorUrl($event)\">\r\n                            <nz-avatar *ngIf=\"showAvatar == true\" [nzShape]=\"'square'\" [nzSize]=\"64\" nzIcon=\"user\"></nz-avatar>\r\n\r\n                            <div class=\"prof-alert\" (click)=\"changeProfilePicture()\">\r\n                                <i class=\"material-icons\"> photo_camera </i>\r\n                                Upload\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <h3>{{ user?.uniqueID || '-' }}</h3>\r\n                            <h2 class=\"highlight\">{{ user?.title }} {{ user?.firstName }} {{ user?.middleNames }} {{ user?.lastName }}<span *ngIf=\"user?.preferredName\" style=\"color:#8c928e\">({{ user?.preferredName }})</span></h2>\r\n                        </div>\r\n                    </div>\r\n                    <div nz-row nzGutter=\"16\">\r\n                        <div nz-col nzSpan=\"12\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"highlight\"><i nz-icon nzType=\"calendar\" nzTheme=\"outline\"></i> Birthdate</label>\r\n                                <span>{{ user?.dob | date: 'dd / MM / yyyy' || '-' }}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div nz-col nzSpan=\"12\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"highlight\"><i nz-icon nzType=\"woman\" nzTheme=\"outline\"></i> Gender</label>\r\n                                <span>{{ user?.gender }}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <div nz-row nzGutter=\"16\">                        \r\n                        <div nz-col nzSpan=\"12\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"highlight\"><i nz-icon nzType=\"calendar\" nzTheme=\"outline\"></i> Birthdate</label>\r\n                                <span>{{ user?.dob | date: 'dd / MM / yyyy' || '-' }}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div> -->\r\n                    <hr>\r\n                    <div nz-row>\r\n                        <div class=\"form-group\">\r\n                            <div>\r\n                                <label class=\"highlight\"><i class=\"material-icons\"> location_on </i>Address </label>\r\n                                <i nz-icon nzType=\"plus\" nzTooltipTitle=\"Add Address\" (click)=\"addAddressOpen()\" nz-tooltip nzTooltipPlacement=\"top\" nzTheme=\"outline\"\r\n                                    class=\"good add\"></i>\r\n                            </div>                           \r\n                            <ul>\r\n                                <li *ngFor=\"let data of user?.addresses\">\r\n                                    <div class=\"options\">\r\n                                        <i nz-icon nzType=\"edit\" nzTooltipTitle=\"Update\" nz-tooltip nzTooltipPlacement=\"top\" nzTheme=\"outline\" class=\"neutral\" (click)=\"editAddressOpen(data)\"></i>\r\n                                        <i nz-icon nzType=\"delete\" class=\"neutral\" nz-tooltip nzTooltipTitle=\"Delete\" nzTooltipPlacement=\"top\" nzTheme=\"outline\"  nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this address?\"\r\n                                    nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"confirm(1,data)\"\r\n                                    (nzOnCancel)=\"cancel(1)\"></i>                                        \r\n                                    </div>\r\n                                    <div>{{ data.postCode }} {{ data.address1 }}, {{ data.suburb}}</div>\r\n                                    <b>{{ data.description }}</b>\r\n                                </li>\r\n                                <li *ngIf=\"user?.addresses?.length == 0\">\r\n                                    <nz-alert nzType=\"warning\" nzMessage=\"No Addresses\" nzShowIcon></nz-alert>\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div nz-row>\r\n                        <div class=\"form-group\">\r\n                            <div>\r\n                                <label class=\"highlight\"><i class=\"material-icons\"> phone </i>Contacts</label>\r\n                                <i nz-icon nzType=\"plus\" nzTooltipTitle=\"Add Contact\" (click)=\"addContactOpen()\" nz-tooltip nzTooltipPlacement=\"top\" nzTheme=\"outline\"\r\n                                    class=\"good add\"></i>\r\n                            </div>\r\n                            <ul>\r\n                                <li *ngFor=\"let data of user?.contacts\">\r\n                                    <div class=\"options\">\r\n                                        <i nz-icon nzType=\"edit\" nzTooltipTitle=\"Update\" (click)=\"editContactOpen(data)\" nz-tooltip nzTooltipPlacement=\"top\" nzTheme=\"outline\" class=\"neutral\"></i>\r\n                                        <i nz-icon nzType=\"delete\" class=\"neutral\" nz-tooltip nzTooltipTitle=\"Delete\" nzTooltipPlacement=\"top\"\r\n                                            nzTheme=\"outline\" nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this contact?\"\r\n                                    nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"confirm(2, data)\"\r\n                                    (nzOnCancel)=\"cancel(2)\"></i>\r\n                                    </div>\r\n                                    <div>{{ data.detail }}</div>\r\n                                    <b>{{ data.type }}</b>\r\n                                </li>\r\n                                <li *ngIf=\"user?.contacts?.length == 0\">\r\n                                    <nz-alert nzType=\"warning\" nzMessage=\"No Contacts\" nzShowIcon></nz-alert>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>                \r\n            </div>\r\n            \r\n            <div nz-col nzSpan=\"12\">\r\n                <div nz-row class=\"divider sec-highlight\">\r\n                    <i nz-icon nzType=\"edit\" nzTheme=\"outline\" (click)=\"profileStaffOptionsModal=true;patchTheseValuesInForm()\"></i>\r\n                    <nz-descriptions nzLayout=\"vertical\" [nzColon]=\"false\" [nzColumn]=2 *ngIf=\"user\">\r\n                        <nz-descriptions-item nzTitle=\"Type\">{{ user?.category || '-' }}</nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"Staff #\">{{ user?.stf_Code || '-' }}</nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"Branch/Department\">{{ user?.stf_Department || '-' }}</nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"Job Category\">{{ user?.staffGroup || '-' }}</nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"Admin Category\">{{ user?.subCategory || '-' }}</nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"Team/Area\">{{ user?.staffTeam || '-' }}</nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"Coordinator/Manager\">{{ user?.pan_Manager || '-' }}</nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"Service Region\">{{ user?.serviceRegion || '-' }}</nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"Grid #\">{{ user?.ubdMap || '-' }}</nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"Driver's License\">{{ user?.dLicence || '-' }}</nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"MV Reg\">{{ user?.vRegistration || '-' }}</nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"Rating\">\r\n                            <nz-rate [ngModel]=\"user?.rating\" [nzCount]=\"7\" nzDisabled></nz-rate>\r\n                        </nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"N Registration #\">{{ user?.nRegistration || '-' }}</nz-descriptions-item>\r\n                    </nz-descriptions>\r\n                </div>\r\n\r\n                <div nz-row class=\"divider sec-highlight\">\r\n                \r\n                    <i nz-icon nzType=\"edit\" nzTheme=\"outline\"\r\n                        (click)=\"profileStaffPreferredModal = true;patchTheseValuesInForm();\"></i>\r\n                    <div nz-col nzSpan=\"11\">\r\n                        <nz-descriptions nzLayout=\"vertical\" [nzColon]=\"false\" [nzColumn]=1>\r\n                            <nz-descriptions-item nzTitle=\"Preferred Availability/Notes\">\r\n                                <textarea rows=\"4\" style=\"height: 174px; width: 13rem;\" nz-input [ngModel]=\"user?.contactIssues\"\r\n                                    readonly></textarea>\r\n                            </nz-descriptions-item>\r\n                        </nz-descriptions>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"13\">\r\n                        <nz-descriptions nzLayout=\"vertical\" [nzColon]=\"false\" [nzColumn]=1>\r\n                            <nz-descriptions-item nzTitle=\"Cald Status\">{{ user?.caldStatus || '-' }}</nz-descriptions-item>\r\n                            <nz-descriptions-item nzTitle=\"Indigenous Status\">{{ user?.cstda_Indiginous || '-' }}\r\n                            </nz-descriptions-item>\r\n                            <nz-descriptions-item nzTitle=\"Primary Disability\">{{ user?.cstda_DisabilityGroup || '-' }}\r\n                            </nz-descriptions-item>\r\n                        </nz-descriptions>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"this.innerValue?.view == 'recipient' \">\r\n            <div nz-col nzSpan=\"12\">\r\n                <div nz-row class=\"divider\">\r\n                    <i nz-icon nzType=\"edit\" nzTheme=\"outline\" (click)=\"profileStaffModal = true;patchTheseValuesInForm()\"></i>\r\n  \r\n                    <div nz-row>\r\n                        <div class=\"avatar-container\" [class.alert-show]=\"showUpload\" (mouseover)=\"showUpload=true\"\r\n                            (mouseleave)=\"showUpload=false\">\r\n                            <img *ngIf=\"showAvatar == false\" [src]=\"imgSrc\" alt=\"\" (error)=\"errorUrl($event)\">\r\n                            <nz-avatar *ngIf=\"showAvatar == true\" [nzShape]=\"'square'\" [nzSize]=\"64\" nzIcon=\"user\"></nz-avatar>\r\n                        \r\n                            <div class=\"prof-alert\" (click)=\"changeProfilePicture()\">\r\n                                <i class=\"material-icons\"> photo_camera </i>\r\n                                Upload\r\n                            </div>                          \r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <h3>{{ user?.uniqueID || '-' }}</h3>\r\n                            <h2 class=\"highlight\">{{ user?.title }} {{ user?.firstName }} {{ user?.middleNames }} {{ user?.surnameOrg }}<span *ngIf=\"user?.preferredName\" style=\"color:#8c928e\">({{ user?.preferredName }})</span></h2>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div nz-row nzGutter=\"16\">\r\n                        <div nz-col nzSpan=\"12\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"highlight\"><i nz-icon nzType=\"woman\" nzTheme=\"outline\"></i> Gender</label>\r\n                                <span>{{ (user?.gender) ? user?.gender : '*'  }}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div nz-col nzSpan=\"12\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"highlight\"><i nz-icon nzType=\"calendar\" nzTheme=\"outline\"></i> Birthdate</label>\r\n                                <span>{{ (user?.dateOfBirth) ? (user?.dateOfBirth | date: 'dd / MM / yyyy') : '*'}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div nz-row>\r\n                        <div class=\"form-group\">\r\n                            <div>\r\n                                <label class=\"highlight\"><i class=\"material-icons\"> location_on </i>Address</label>\r\n                                <i nz-icon nzType=\"plus\" nzTooltipTitle=\"Add Address\" (click)=\"addAddressOpen()\" nz-tooltip nzTooltipPlacement=\"top\"\r\n                                    nzTheme=\"outline\" class=\"good add\"></i>\r\n                            </div>\r\n                            <ul>\r\n                                <li *ngFor=\"let data of user?.addresses\">\r\n                                    <div class=\"options\">\r\n                                        <i nz-icon nzType=\"edit\" nzTooltipTitle=\"Update\" nz-tooltip nzTooltipPlacement=\"top\" nzTheme=\"outline\"\r\n                                            class=\"neutral\" (click)=\"editAddressOpen(data)\"></i>\r\n                                        <i nz-icon nzType=\"delete\" class=\"neutral\" nz-tooltip nzTooltipTitle=\"Delete\" nzTooltipPlacement=\"top\"\r\n                                            nzTheme=\"outline\" nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this address?\"\r\n                                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"confirm(1,data)\" (nzOnCancel)=\"cancel(1)\"></i>\r\n                                    </div>\r\n                                    <div>{{ data.postCode }} {{ data.address1 }}, {{ data.suburb}}</div>\r\n                                    <b>{{ data.description }}</b>\r\n                                </li>\r\n                                <li *ngIf=\"user?.addresses?.length == 0\">\r\n                                    <nz-alert nzType=\"warning\" nzMessage=\"No Addresses\" nzShowIcon></nz-alert>\r\n                                </li>\r\n                            </ul>\r\n                           \r\n                        </div>\r\n                    </div>\r\n                    <div nz-row>\r\n                        <div class=\"form-group\">\r\n                            <div>\r\n                                <label class=\"highlight\"><i class=\"material-icons\"> phone </i>Contacts</label>\r\n                                <i nz-icon nzType=\"plus\" nzTooltipTitle=\"Add Contact\" (click)=\"addContactOpen()\" nz-tooltip nzTooltipPlacement=\"top\"\r\n                                    nzTheme=\"outline\" class=\"good add\"></i>\r\n                            </div>\r\n                            <ul>\r\n                                <li *ngFor=\"let data of user?.contacts\">\r\n                                    <div class=\"options\">\r\n                                        <i nz-icon nzType=\"edit\" nzTooltipTitle=\"Update\" (click)=\"editContactOpen(data)\" nz-tooltip nzTooltipPlacement=\"top\"\r\n                                            nzTheme=\"outline\" class=\"neutral\"></i>\r\n                                        <i nz-icon nzType=\"delete\" class=\"neutral\" nz-tooltip nzTooltipTitle=\"Delete\" nzTooltipPlacement=\"top\"\r\n                                            nzTheme=\"outline\" nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this contact?\"\r\n                                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"confirm(2, data)\" (nzOnCancel)=\"cancel(2)\"></i>\r\n                                    </div>\r\n                                    <div>{{ data.detail }}</div>\r\n                                    <b>{{ data.type }}</b>\r\n                                </li>\r\n                                <li *ngIf=\"user?.contacts?.length == 0\">\r\n                                    <nz-alert nzType=\"warning\" nzMessage=\"No Contacts\" nzShowIcon></nz-alert>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>               \r\n            </div>\r\n            <div nz-col nzSpan=\"12\">\r\n                <div nz-row class=\"divider sec-highlight\">\r\n                    <i nz-icon nzType=\"edit\" nzTheme=\"outline\" (click)=\"profileRecipientOptionsModal=true;patchTheseValuesInForm()\"></i>\r\n                    <nz-descriptions nzLayout=\"vertical\" [nzColon]=\"false\" [nzColumn]=2 *ngIf=\"user\">\r\n                        <nz-descriptions-item nzTitle=\"File #1\">{{ user?.agencyIdReportingCode || '-' }}</nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"File #2\">{{ user?.urNumber || '-' }}</nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"Admitting Branch\">{{ user?.branch || '-' }}</nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"Service Region/Main Category\">{{ user?.agencyDefinedGroup || '-' }}</nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"Sub Category\">{{ user?.ubdMap || '-' }}</nz-descriptions-item>\r\n                        <nz-descriptions-item nzTitle=\"Primary Case Manager\">{{ user?.recipient_Coordinator || '-' }}</nz-descriptions-item>                       \r\n                    </nz-descriptions>\r\n                </div>\r\n\r\n                <div nz-row class=\"divider sec-highlight\">\r\n                    <button class=\"botton success\" (click)=\"saveTab()\">Save</button>\r\n                    <nz-tabset (nzSelectedIndexChange)=\"tabChange($event)\" [nzSelectedIndex]=\"tabIndex\">\r\n                        <nz-tab nzTitle=\"Contact Issues\" [formGroup]=\"contactIssueGroup\">\r\n                            <textarea rows=\"4\" nz-input type=\"text\" formControlName=\"value\"></textarea>\r\n                        </nz-tab>\r\n                        <nz-tab nzTitle=\"Roster Alerts\" [formGroup]=\"contactIssueGroup\">\r\n                            <textarea rows=\"4\" nz-input type=\"text\" formControlName=\"value\"></textarea>\r\n                        </nz-tab>\r\n                        <nz-tab nzTitle=\"Runsheet Alerts\" [formGroup]=\"contactIssueGroup\">\r\n                            <textarea rows=\"4\" nz-input type=\"text\" formControlName=\"value\"></textarea>\r\n                        </nz-tab>\r\n                    </nz-tabset>\r\n                </div>\r\n\r\n                <div nz-row class=\"divider\">\r\n                    <button class=\"botton success\">Add Case Staff</button>\r\n                </div>\r\n\r\n            </div>\r\n        </ng-container>\r\n\r\n    </div>\r\n\r\n    <div nz-row *ngIf=\"!isAdmin\">\r\n        <div class=\"space-top\">\r\n            <div class=\"form-group\">\r\n                <label for=\"\" class=\"info\">Address Information</label>\r\n                <div class=\"edit-btn\">\r\n                    <div class=\"right-btns\">\r\n                        <button nz-button nzType=\"default\" nzValue=\"small\" (click)=\"addAddressOpen()\" class=\"right\"><i nz-icon\r\n                                nzType=\"plus\" nzTheme=\"outline\"></i> Add Address</button>\r\n                    </div>\r\n                </div>\r\n                <nz-table #basicTable [nzData]=\"user?.addresses\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n                    [nzShowPagination]=\"false\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Description</th>\r\n                            <th>Address</th>\r\n                            <th>Suburb</th>\r\n                            <th>Postcode</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let data of basicTable.data\">\r\n                            <td>{{ data.description }}</td>\r\n                            <td>{{ data.address1 }}</td>\r\n                            <td>{{ data.suburb }}</td>\r\n                            <td>{{ data.postCode }}</td>\r\n                            <td>\r\n                                <a (click)=\"editAddressOpen(data)\">Edit</a>\r\n                                <nz-divider nzType=\"vertical\"></nz-divider>\r\n                                <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this address?\"\r\n                                    nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"confirm(1,data)\"\r\n                                    (nzOnCancel)=\"cancel(1)\">Delete</a>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </nz-table>\r\n            </div>\r\n        \r\n            <div class=\"form-group space-top\">\r\n                <label for=\"\" class=\"info\">Contact Information</label>\r\n                <div class=\"edit-btn\">\r\n                    <div class=\"right-btns\">\r\n                        <button nz-button nzType=\"default\" nzValue=\"small\" (click)=\"addContactOpen()\" class=\"right\"><i nz-icon\r\n                                nzType=\"plus\" nzTheme=\"outline\"></i> Add Contact</button>\r\n                    </div>\r\n                </div>\r\n                <nz-table #contactTable [nzData]=\"user?.contacts\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n                    [nzShowPagination]=\"false\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Type</th>\r\n                            <th>Detail</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let data of contactTable.data\">\r\n                            <td>{{ data.type }}</td>\r\n                            <td>{{ data.detail }}</td>\r\n                            <td>\r\n                                <a (click)=\"editContactOpen(data)\">Edit</a>\r\n                                <nz-divider nzType=\"vertical\"></nz-divider>\r\n                                <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this contact?\"\r\n                                    nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"confirm(2, data)\"\r\n                                    (nzOnCancel)=\"cancel(2)\">Delete</a>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </nz-table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n <nz-modal [(nzVisible)]=\"profileStaffModal\" [nzStyle]=\"{ top: '20px' }\" nzTitle=\"Update Profile\" (nzOnCancel)=\"handleCancel()\">\r\n\r\n    <div nz-row nzGutter=\"16\" [formGroup]=\"userForm\">\r\n        <div nz-row>\r\n            <div nz-col nzSpan=\"8\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">Preferred Name</label>\r\n                    <input nz-input type=\"text\" formControlName=\"preferredName\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div nz-row nzGutter=\"16\">\r\n\r\n            <div nz-col  class=\"form-group\" nzSpan=\"8\">\r\n                <label for=\"\">Lastname</label>\r\n                <input nz-input type=\"text\" formControlName=\"surnameOrg\">\r\n            </div>\r\n\r\n            <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                <label for=\"\">Firstname</label>\r\n                <input nz-input type=\"text\" formControlName=\"firstName\">\r\n            </div>\r\n            <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                <label for=\"\">Middlename</label>\r\n                <input nz-input type=\"text\" formControlName=\"middleNames\">\r\n            </div>\r\n\r\n        </div>\r\n        <div nz-row nzGutter=\"16\">\r\n          \r\n                <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                    <label for=\"\">Title</label>\r\n                    <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"title\">\r\n                        <nz-option *ngFor=\"let title of titles\" [nzValue]=\"title\" [nzLabel]=\"title\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </div>\r\n                <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                    <label for=\"\">Gender</label>\r\n                    <nz-select formControlName=\"gender\" nzAllowClear nzPlaceHolder=\"\">\r\n                        <nz-option *ngFor=\"let gender of genderArr\" [nzValue]=\"gender\" [nzLabel]=\"gender\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </div>\r\n        \r\n        </div>\r\n        <div nz-row nzGutter=\"16\">\r\n            <div nz-col nzSpan=\"24\" class=\"form-group\">\r\n                <label for=\"\">Birthdate</label>\r\n                <div nz-col nzSpan=\"6\">\r\n                    <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"year\">\r\n                        <nz-option *ngFor=\"let year of years\" [nzValue]=\"year\" [nzLabel]=\"year\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </div>\r\n                <div nz-col nzSpan=\"7\">\r\n                    <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"month\">\r\n                        <nz-option *ngFor=\"let month of months\" [nzValue]=\"month\" [nzLabel]=\"month\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </div>\r\n                <div nz-col nzSpan=\"4\">\r\n                    <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"day\">\r\n                        <nz-option *ngFor=\"let day of days\" [nzValue]=\"day\" [nzLabel]=\"day\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" [nzLoading]=\"loading\"  (click)=\"saveProfile()\">Save</button>\r\n    </div>\r\n\r\n</nz-modal>\r\n\r\n<nz-modal [(nzVisible)]=\"profileStaffPreferredModal\" [nzStyle]=\"{ top: '20px' }\" nzTitle=\"Update Profile Options\"\r\n    (nzOnCancel)=\"handleCancel()\">\r\n\r\n    <div nz-row nzGutter=\"16\" [formGroup]=\"userForm\">\r\n\r\n        <div nz-row nzGutter=\"16\">\r\n            <div nz-col class=\"form-group\" nzSpan=\"24\">\r\n                <label for=\"\">Cald Status</label>\r\n                <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"caldStatus\">\r\n                    <nz-option *ngFor=\"let list of caldStatuses\" [nzValue]=\"list\" [nzLabel]=\"list\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n\r\n            <div nz-col class=\"form-group\" nzSpan=\"24\">\r\n                <label for=\"\">Indigenous Status</label>\r\n                <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"indigStatus\">\r\n                    <nz-option *ngFor=\"let list of dropDowns?.indigenousArr\" [nzValue]=\"list\" [nzLabel]=\"list\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n            <div nz-col class=\"form-group\" nzSpan=\"24\">\r\n                <label for=\"\">Primary Disability</label>\r\n                <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"primaryDisability\">\r\n                    <nz-option *ngFor=\"let title of dropDowns?.disabilitiesArr\" [nzValue]=\"title\" [nzLabel]=\"title\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n            <div nz-col class=\"form-group\" nzSpan=\"24\">\r\n                <label for=\"\">Preferred Availability / Notes</label>\r\n                <textarea rows=\"4\" nz-input type=\"text\" formControlName=\"note\"></textarea>\r\n            </div>\r\n           \r\n        </div>\r\n        \r\n\r\n    </div>\r\n\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" [nzLoading]=\"loading\" (click)=\"saveNotes()\">Save</button>\r\n    </div>\r\n\r\n</nz-modal>\r\n\r\n<nz-modal [(nzVisible)]=\"profileRecipientOptionsModal\" [nzStyle]=\"{ top: '20px' }\" nzTitle=\"Update Profile Options\"\r\n    [nzWidth]=\"960\" (nzOnCancel)=\"handleCancel()\">\r\n\r\n    <div nz-row nzGutter=\"16\" [formGroup]=\"userForm\">\r\n\r\n        <div nz-row nzGutter=\"16\">\r\n            <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                <label for=\"\">File #1</label>\r\n                <input nz-input type=\"text\" formControlName=\"file1\">\r\n            </div>\r\n\r\n            <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                <label for=\"\">File #2</label>\r\n                <input nz-input type=\"text\" formControlName=\"file2\">\r\n            </div>\r\n            <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                <label for=\"\">Sub Category</label>\r\n                <input nz-input type=\"text\" formControlName=\"subCategory\">\r\n            </div>\r\n        </div>\r\n\r\n        <div nz-row nzGutter=\"16\">\r\n\r\n            <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                <label for=\"\">Admitting Branch</label>\r\n                <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"branch\">\r\n                    <nz-option *ngFor=\"let title of dropDowns?.branchesArr\" [nzValue]=\"title\" [nzLabel]=\"title\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n\r\n            <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                <label for=\"\">Service Region/Main Category</label>\r\n                <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"serviceRegion\">\r\n                    <nz-option *ngFor=\"let title of dropDowns?.serviceRegionArr\" [nzValue]=\"title\" [nzLabel]=\"title\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n\r\n            <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                <label for=\"\">Primary Case Manager</label>\r\n                <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"casemanager\">\r\n                    <nz-option *ngFor=\"let title of dropDowns?.managerArr\" [nzValue]=\"title\" [nzLabel]=\"title\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" [nzLoading]=\"loading\" (click)=\"saveProfile()\">Save</button>\r\n    </div>\r\n\r\n</nz-modal>\r\n\r\n\r\n<nz-modal [(nzVisible)]=\"profileStaffOptionsModal\" [nzStyle]=\"{ top: '20px' }\" nzTitle=\"Update Profile Options\" [nzWidth]=\"960\"\r\n    (nzOnCancel)=\"handleCancel()\">\r\n\r\n    <div nz-row nzGutter=\"16\" [formGroup]=\"userForm\">\r\n        <div nz-row nzGutter=\"16\">\r\n            <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                <label for=\"\">Type</label>\r\n                <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"type\">\r\n                    <nz-option *ngFor=\"let list of typesArr\" [nzValue]=\"list\" [nzLabel]=\"list\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n            \r\n            <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                <label for=\"\">Branch</label>\r\n                <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"stf_Department\">\r\n                    <nz-option *ngFor=\"let list of dropDowns?.branchesArr\" [nzValue]=\"list\" [nzLabel]=\"list\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n            <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                <label for=\"\">Job Category</label>\r\n                <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"jobCategory\">\r\n                    <nz-option *ngFor=\"let title of dropDowns?.jobCategoryArr\" [nzValue]=\"title\" [nzLabel]=\"title\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n        </div>\r\n        <div nz-row nzGutter=\"16\">\r\n\r\n            <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                <label for=\"\">Admin Category</label>\r\n                <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"adminCategory\">\r\n                    <nz-option *ngFor=\"let title of dropDowns?.adminCategoryArr\" [nzValue]=\"title\" [nzLabel]=\"title\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n\r\n            <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                <label for=\"\">Team/Area</label>\r\n                <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"team\">\r\n                    <nz-option *ngFor=\"let title of dropDowns?.teamArr\" [nzValue]=\"title\" [nzLabel]=\"title\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n            <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                <label for=\"\">Coordinator/Manager</label>\r\n                <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"casemanager\">\r\n                    <nz-option *ngFor=\"let title of dropDowns?.managerArr\" [nzValue]=\"title\" [nzLabel]=\"title\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n        </div>\r\n        <div nz-row nzGutter=\"16\">\r\n\r\n            <div nz-col class=\"form-group\" nzSpan=\"8\">\r\n                <label for=\"\">Service Region</label>\r\n                <nz-select nzAllowClear nzPlaceHolder=\"\" formControlName=\"serviceRegion\">\r\n                    <nz-option *ngFor=\"let title of dropDowns?.serviceRegionArr\" [nzValue]=\"title\" [nzLabel]=\"title\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n\r\n        </div>\r\n        <div nz-row nzGutter=\"16\">           \r\n            <div nz-col class=\"form-group\" nzSpan=\"6\">\r\n                <label for=\"\">Grid No</label>\r\n                <input nz-input type=\"text\" formControlName=\"gridNo\">\r\n            </div>\r\n\r\n            <div nz-col class=\"form-group\" nzSpan=\"6\">\r\n                <label for=\"\">Drivers License</label>\r\n                <input nz-input type=\"text\" formControlName=\"dLicense\">\r\n            </div>\r\n\r\n            <div nz-col class=\"form-group\" nzSpan=\"6\">\r\n                <label for=\"\">Has Caseload</label>\r\n                <label nz-checkbox formControlName=\"isCaseLoad\"></label>\r\n            </div>\r\n\r\n            <div nz-col class=\"form-group\" nzSpan=\"6\">\r\n                <label for=\"\">Is Rosterable</label>\r\n                <label nz-checkbox formControlName=\"isRosterable\"></label>\r\n            </div>\r\n        </div>\r\n\r\n        <div nz-row nzGutter=\"16\">\r\n            <div nz-col class=\"form-group\" nzSpan=\"6\">\r\n                <label for=\"\">MV Registration</label>\r\n                <input nz-input type=\"text\" formControlName=\"mvReg\">\r\n            </div>\r\n            <div nz-col class=\"form-group\" nzSpan=\"6\">\r\n                <label for=\"\">N Registration</label>\r\n                <input nz-input type=\"text\" formControlName=\"nReg\">\r\n            </div>\r\n            <div nz-col class=\"form-group\" nzSpan=\"6\">\r\n                <label for=\"\">Email Timesheet</label>\r\n                <label nz-checkbox formControlName=\"isEmail\"></label>\r\n            </div>\r\n            <div nz-col class=\"form-group\" nzSpan=\"6\">\r\n                <label for=\"\">Star Rating</label>\r\n                <nz-rate formControlName=\"rating\" [nzCount]=\"7\"></nz-rate>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" [nzLoading]=\"loading\" (click)=\"saveProfile()\">Save</button>\r\n    </div>\r\n\r\n</nz-modal>\r\n\r\n\r\n\r\n<nz-modal [(nzVisible)]=\"emailManagerOpen\" nzTitle=\"Email Manager\" [nzFooter]=\"modalFooter\" (nzOnCancel)=\"emailManagerOpen = false\">\r\n   <div>\r\n       <div *ngIf=\"emailManagerNoEmailShowNotif\">\r\n            <div nz-row nzGutter=\"16\" [formGroup]=\"emailCoordinatorGroup\">\r\n                <div nz-col nzSpan=\"24\" class=\"form-group\">\r\n                    <nz-form-item>\r\n                        <nz-form-label>Subject</nz-form-label>\r\n                        <nz-form-control nzErrorTip=\"Subject is required!\">\r\n                            <input nz-input type=\"text\" formControlName=\"subject\">\r\n                        </nz-form-control>\r\n                    </nz-form-item>\r\n                </div>\r\n                <div nz-col nzSpan=\"24\" class=\"form-group\">\r\n                    <nz-form-item>\r\n                        <nz-form-label>Body</nz-form-label>\r\n                        <nz-form-control nzErrorTip=\"Body is required!\">\r\n                            <textarea rows=\"4\" nz-input type=\"text\" formControlName=\"content\"></textarea>\r\n                        </nz-form-control>\r\n                    </nz-form-item>\r\n                </div>\r\n            </div>\r\n       </div>\r\n        <nz-tag *ngIf=\"!emailManagerNoEmailShowNotif\" [nzColor]=\"'magenta'\">Your manager has no valid email!</nz-tag>\r\n   </div>\r\n    <ng-template #modalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"emailManagerOpen = false\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"sendMail()\">Send</button>\r\n    </ng-template>\r\n</nz-modal>\r\n\r\n<nz-modal [(nzVisible)]=\"editModalOpen\" [nzTitle]=\"window == 1 ? 'Edit Address': 'Edit Contact'\"\r\n    [nzFooter]=\"editModalFooter\" (nzOnCancel)=\"handleCancel()\">\r\n    <div>\r\n\r\n        <div nz-row nzGutter=\"16\" *ngIf=\"window == 1\" [formGroup]=\"addressForm\">\r\n            <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                <label for=\"\">Description</label>\r\n                <nz-select formControlName=\"description\" nzAllowClear nzPlaceHolder=\"\"\r\n                    [nzDropdownMatchSelectWidth]=\"false\">\r\n                    <nz-option *ngFor=\"let address of addressArray\" [nzValue]=\"address\" [nzLabel]=\"address\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n            <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                <label for=\"\">Postcode & Suburb</label>\r\n                <suburb formControlName=\"pcodesuburb\"></suburb>\r\n            </div>\r\n            <div nz-col nzSpan=\"24\" class=\"form-group\">\r\n                <label for=\"\">Address</label>\r\n                <input nz-input type=\"text\" formControlName=\"address\">\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"window == 2\" [formGroup]=\"contactForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Contact Type</label>\r\n                <nz-select formControlName=\"type\" nzAllowClear nzPlaceHolder=\"\" [nzDropdownMatchSelectWidth]=\"false\">\r\n                    <nz-option *ngFor=\"let contact of contactsArray\" [nzValue]=\"contact\" [nzLabel]=\"contact\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Details</label>\r\n                <input nz-input type=\"text\" formControlName=\"details\">\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <ng-template #editModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Close</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"edit()\" [nzLoading]=\"loading\">Save</button>\r\n    </ng-template>\r\n</nz-modal>\r\n\r\n\r\n<nz-drawer [nzVisible]=\"editProfileDrawer\" [nzMaskClosable]=\"false\" [nzWidth]=\"640\" (nzOnClose)=\"closeDrawer()\"\r\n    [nzBodyStyle]=\"{ height: 'calc(100% - 55px)', overflow: 'auto', 'padding-bottom': '53px' }\">\r\n    <p class=\"title\" style=\" margin-bottom: 24px;\">User Profile</p>\r\n\r\n    <div [formGroup]=\"userForm\">\r\n        <div class=\"form-row\" nz-row nzGutter=\"16\">\r\n            <div nz-col nzSpan=\"4\" class=\"form-group\">\r\n                <label for=\"\">Title</label>\r\n                <nz-select class=\"title\" formControlName=\"title\" nzAllowClear nzPlaceHolder=\"\"\r\n                    [nzDropdownMatchSelectWidth]=\"false\">\r\n                    <nz-option *ngFor=\"let title of titles\" [nzValue]=\"title\" [nzLabel]=\"title\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-row\" nz-row nzGutter=\"16\">\r\n            <div nz-col nzSpan=\"5\" class=\"form-group\">\r\n                <label for=\"\">Gender</label>\r\n                <nz-select class=\"title\" formControlName=\"gender\" nzAllowClear nzPlaceHolder=\"\"\r\n                    [nzDropdownMatchSelectWidth]=\"false\">\r\n                    <nz-option *ngFor=\"let gender of genderArr\" [nzValue]=\"gender\" [nzLabel]=\"gender\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n            <div nz-col nzSpan=\"15\" class=\"form-group\">\r\n                <label for=\"\">Birthdate</label>\r\n                <div nz-row nzGutter=\"16\">\r\n                    <div nz-col nzSpan=\"9\">\r\n                        <nz-select class=\"title\" formControlName=\"month\" nzAllowClear nzPlaceHolder=\"\"\r\n                            [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let month of months\" [nzValue]=\"month\" [nzLabel]=\"month\">\r\n                            </nz-option>\r\n                        </nz-select>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"7\">\r\n                        <nz-select class=\"title\" formControlName=\"day\" nzAllowClear nzPlaceHolder=\"\"\r\n                            [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let day of days\" [nzValue]=\"day\" [nzLabel]=\"day\">\r\n                            </nz-option>\r\n                        </nz-select>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"7\">\r\n                        <nz-select class=\"title\" formControlName=\"year\" nzAllowClear nzPlaceHolder=\"\"\r\n                            [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let year of years\" [nzValue]=\"year\" [nzLabel]=\"year\">\r\n                            </nz-option>\r\n                        </nz-select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-row\" nz-row nzGutter=\"16\">\r\n            <div nz-col nzSpan=\"8\" class=\"form-group\">\r\n                <label for=\"\">Lastname</label>\r\n                <input type=\"text\" formControlName=\"surnameOrg\" nz-input autocomplete=\"palong\">\r\n            </div>\r\n            <div nz-col nzSpan=\"8\" class=\"form-group\">\r\n                <label for=\"\">Firstname</label>\r\n                <input type=\"text\" formControlName=\"firstName\" nz-input autocomplete=\"palong\">\r\n            </div>\r\n            <div nz-col nzSpan=\"8\" class=\"form-group\">\r\n                <label for=\"\">Middlename</label>\r\n                <input type=\"text\" formControlName=\"middleNames\" nz-input autocomplete=\"palong\">\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"footer\">\r\n        <button type=\"button\" (click)=\"closeDrawer()\" class=\"ant-btn\"\r\n            style=\"margin-right: 8px;\"><span>Cancel</span></button>\r\n        <button type=\"button\" nz-button (click)=\"editProfile()\" [nzLoading]=\"loading\"\r\n            class=\"ant-btn ant-btn-primary\"><span>Save</span></button>\r\n    </div>\r\n</nz-drawer>\r\n\r\n<nz-drawer [nzVisible]=\"addAddressDrawer\" [nzMaskClosable]=\"false\" [nzWidth]=\"640\" (nzOnClose)=\"closeDrawer()\"\r\n    [nzBodyStyle]=\"{ height: 'calc(100% - 55px)', overflow: 'auto', 'padding-bottom': '53px' }\">\r\n    <p class=\"title\" style=\" margin-bottom: 24px;\">Add Address Information</p>\r\n\r\n    <form nz-row nzGutter=\"16\" nz-form [nzLayout]=\"'vertical'\" [formGroup]=\"addressForm\">\r\n        <div nz-col nzSpan=\"12\">\r\n            <nz-form-item>\r\n                <nz-form-label>Description</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Description is required!\">\r\n                    <nz-select formControlName=\"description\" nzAllowClear nzPlaceHolder=\"\"\r\n                        [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let address of addressArray\" [nzValue]=\"address\" [nzLabel]=\"address\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n        <div nz-col nzSpan=\"12\">\r\n            <nz-form-item>\r\n                <nz-form-label>Suburb</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Suburb is required!\">\r\n                    <suburb formControlName=\"pcodesuburb\"></suburb>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n        <div nz-col nzSpan=\"24\">\r\n            <nz-form-item>\r\n                <nz-form-label>Address</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Address is required!\">\r\n                    <input nz-input type=\"text\" formControlName=\"address\">\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n    </form>\r\n\r\n    <div class=\"footer\">\r\n        <button type=\"button\" (click)=\"closeDrawer()\" class=\"ant-btn\"\r\n            style=\"margin-right: 8px;\"><span>Cancel</span></button>\r\n        <button type=\"button\" nz-button [nzLoading]=\"loading\" (click)=\"addAddress()\"\r\n            class=\"ant-btn ant-btn-primary\"><span>Save</span></button>\r\n    </div>\r\n</nz-drawer>\r\n\r\n<nz-drawer [nzVisible]=\"addContactDrawer\" [nzMaskClosable]=\"false\" [nzWidth]=\"420\" (nzOnClose)=\"closeDrawer()\"\r\n    [nzBodyStyle]=\"{ height: 'calc(100% - 55px)', overflow: 'auto', 'padding-bottom': '53px' }\">\r\n    <p class=\"title\" style=\" margin-bottom: 24px;\">Add Contact Information</p>\r\n\r\n    <form nz-row nzGutter=\"16\" nz-form [nzLayout]=\"'vertical'\" [formGroup]=\"contactForm\">\r\n        <div nz-col nzSpan=\"12\">\r\n            <nz-form-item>\r\n                <nz-form-label>Contact Type</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Contact Type is required!\">\r\n                    <nz-select formControlName=\"type\" nzAllowClear nzPlaceHolder=\"\"\r\n                        [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let contact of contactsArray\" [nzValue]=\"contact\" [nzLabel]=\"contact\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n        <div nz-col nzSpan=\"24\">\r\n            <nz-form-item>\r\n                <nz-form-label>Details</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Contact Details is required!\">\r\n                    <input nz-input type=\"text\" formControlName=\"details\">\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n    </form>\r\n\r\n    <div class=\"footer\">\r\n        <button type=\"button\" (click)=\"closeDrawer()\" class=\"ant-btn\"\r\n            style=\"margin-right: 8px;\"><span>Cancel</span></button>\r\n        <button type=\"button\" nz-button (click)=\"addContact()\" [nzLoading]=\"loading\"\r\n            class=\"ant-btn ant-btn-primary\"><span>Save</span></button>\r\n    </div>\r\n</nz-drawer>\r\n\r\n<nz-modal [(nzVisible)]=\"changeProfilePictureModal\" nzTitle=\"Update Profile Picture\" (nzOnCancel)=\"handleCancel()\">\r\n    <div *ngIf=\"changeProfilePictureModal\">\r\n        <app-image-cropper [src]=\"src\" [role]=\"innerValue.view\" [id]=\"innerValue.id\" (imgBLOB)=\"imgBLOB($event)\"></app-image-cropper>\r\n        <input type=\"file\" id=\"file\" (change)=\"uploadChange($event)\">\r\n        <div><label for=\"file\" class=\"upload-pic\">Browse Directory</label></div>\r\n    </div>\r\n\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"uploadPicture()\" [nzLoading]=\"loadPhoto\">Upload</button>\r\n    </div>\r\n</nz-modal>","import { Component, OnInit, ViewEncapsulation, forwardRef, OnDestroy } from '@angular/core';\r\nimport { ListService, GlobalService } from '@services/index';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { Subject, EMPTY } from 'rxjs';\r\nimport { takeUntil, distinctUntilChanged, debounceTime, switchMap } from 'rxjs/operators';\r\n\r\nconst noop = () => {\r\n};\r\n\r\n@Component({\r\n  selector: 'app-recipient-popup',\r\n  templateUrl: './recipient-popup.component.html',\r\n  styleUrls: ['./recipient-popup.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => RecipientPopupComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class RecipientPopupComponent implements OnInit, OnDestroy,ControlValueAccessor {\r\n  \r\n  private onTouchedCallback: () => void = noop;\r\n  private onChangeCallback: (_: any) => void = noop;\r\n  private destroy$ = new Subject();\r\n  \r\n  private searchText = new Subject<string>();\r\n\r\n  value: any = '';\r\n  isVisible: boolean = false;\r\n  recipientSearchList: Array<any> = [];\r\n  counterRecipient: number = 0;\r\n\r\n  loading: boolean = false;\r\n  isDataLoaded: boolean = false;\r\n\r\n  selectedValue = null;\r\n  pageIndex: number = 1;\r\n  selectList: Array<any> = [];\r\n  selectedUser: any;\r\n  \r\n  constructor(\r\n    private listS: ListService\r\n  ) { \r\n      this.searchText.pipe(\r\n        takeUntil(this.destroy$),\r\n        distinctUntilChanged(),\r\n        debounceTime(800),\r\n        switchMap(x => {\r\n          if (!x) return EMPTY;\r\n          return this.listS.getrecipientsearch({\r\n            AccountNo: x,\r\n            RowNo: ''\r\n          })\r\n        })\r\n      ).subscribe(data => {\r\n        this.loading = false;\r\n        this.selectList = data;\r\n        if(data.length == 1){\r\n          this.isDataLoaded = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void{\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  openModal() {\r\n    this.isVisible = true;\r\n    this.index = -1;\r\n    this.GETLIST();\r\n  }\r\n\r\n  GETLIST(): void {\r\n    this.recipientSearchList = []\r\n    this.loading = true;\r\n    this.listS.getrecipientsearch({\r\n      AccountNo: '',\r\n      RowNo: ''\r\n    }).pipe(takeUntil(this.destroy$)).subscribe(data => {\r\n      this.loading = false;\r\n      this.recipientSearchList = data\r\n    });\r\n\r\n  }\r\n\r\n  trackByIndex(_: number, data: any): number {\r\n    return data.index;\r\n  }\r\n\r\n  handleCancel() {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouchedCallback = fn;\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    if(value){\r\n      this.isDataLoaded = false;\r\n      this.selectedValue = value;\r\n      this.searchText.next(value);      \r\n    }\r\n  }\r\n\r\n  onScroll(){\r\n    console.log('event');\r\n  }\r\n\r\n  index: number = -1;\r\n  selected(index: number) {\r\n    this.index = index;\r\n    const currentPage = ((this.pageIndex * 20) - 20) + index;\r\n    this.selectedUser = this.recipientSearchList[currentPage];\r\n  }\r\n\r\n  nzPageIndexChange(data: any) {\r\n    this.pageIndex = data;\r\n    this.index = -1;\r\n  }\r\n\r\n  nzOnSearch(data: any) {\r\n    this.loading = true;\r\n    this.searchText.next(data);\r\n  }\r\n\r\n  ngModelChange(event: string) {\r\n    this.selectedValue = event;\r\n    this.onChangeCallback(this.selectedValue);\r\n  }\r\n\r\n  handleOk() {\r\n    this.selectList = [];\r\n    \r\n    this.selectList.push({\r\n      accountNo: this.selectedUser.accountNo\r\n    });\r\n\r\n    this.selectedValue = this.selectedUser.accountNo;\r\n    this.onChangeCallback(this.selectedValue);\r\n\r\n    this.isVisible = false;\r\n  }\r\n\r\n}\r\n","<nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"\" [(ngModel)]=\"selectedValue\" (ngModelChange)=\"ngModelChange($event)\" (nzOnSearch)=\"nzOnSearch($event)\">\r\n    <nz-option *ngIf=\"!isDataLoaded\" [nzLabel]=\"selectedValue\"></nz-option>\r\n    <nz-option *ngFor=\"let list of selectList\" [nzLabel]=\"list.accountNo\" [nzValue]=\"list.accountNo\"></nz-option>\r\n</nz-select>\r\n<i nz-icon (click)=\"openModal()\" nzType=\"more\" nzTheme=\"outline\"></i>\r\n\r\n<nz-modal [nzWidth]=\"900\" [(nzVisible)]=\"isVisible\" nzTitle=\"Recipient List\" [nzFooter]=\"modalFooter\" (nzOnCancel)=\"handleCancel()\">\r\n    <div nz-row >\r\n        <nz-table #basicTable [nzSize]=\"'small'\" \r\n        [nzVirtualForTrackBy]=\"trackByIndex\"\r\n        [nzScroll]=\"{ x: '1200px', y: '240px' }\"\r\n        [nzData]=\"recipientSearchList\"\r\n        [nzPageSize]=\"20\"\r\n        [nzLoading]=\"loading\"\r\n        (nzPageIndexChange)=\"nzPageIndexChange($event)\">\r\n            <thead>\r\n                <tr>\r\n                    <th nzWidth=\"100px\" nzLeft=\"0px\">Account Name</th>\r\n                    <th nzWidth=\"120px\" nzLeft=\"100px\">Name</th>\r\n                    <th nzWidth=\"90px\" >Gender</th>\r\n                    <th nzWidth=\"120px\">Address</th>\r\n                    <th nzWidth=\"100px\">Contact</th>\r\n                    <th nzWidth=\"80px\">Type</th>\r\n                    <th nzWidth=\"80px\">Branch</th>\r\n                    <th nzWidth=\"80px\">Suburb</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index\" [class.selected]=\"i == index\" (click)=\"selected(i)\">\r\n                    <td nzWidth=\"140px\" nzLeft=\"0px\">{{data.accountNo}}</td>\r\n                    <td nzWidth=\"120px\" nzLeft=\"100px\">{{data.name}}</td>\r\n                    <td nzWidth=\"50px\" >{{data.gender}}</td>\r\n                    <td nzWidth=\"120px\">{{data.address}}</td>\r\n                    <td nzWidth=\"100px\">{{data.contact}}</td>\r\n                    <td nzWidth=\"80px\">{{data.type}}</td>\r\n                    <td nzWidth=\"80px\">{{data.branch}}</td>\r\n                    <td nzWidth=\"80px\">{{data.suburb}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n\r\n    <ng-template #modalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"handleOk()\">Select</button>\r\n    </ng-template>\r\n\r\n</nz-modal>","import { Component, OnInit, Input, OnChanges, SimpleChanges, ViewChild, ChangeDetectionStrategy, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-refer-in',\r\n  templateUrl: './refer-in.component.html',\r\n  styleUrls: ['./refer-in.component.css']\r\n})\r\nexport class ReferInComponent implements OnInit {\r\n\r\n  @Input() open: any;\r\n\r\n  current: number = 0;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    for (let property in changes) {\r\n      if (property == 'open' && !changes[property].firstChange && changes[property].currentValue != null) {\r\n        // this.buildForm();\r\n        this.open = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  pre() {\r\n    \r\n  }\r\n\r\n  next() {\r\n    \r\n  }\r\n\r\n  get canGoNext(): boolean {\r\n    return true;\r\n  }\r\n\r\n  get canBeDone(): boolean {\r\n    return true;\r\n  }\r\n\r\n  handleCancel() {\r\n    \r\n  }\r\n\r\n  handleOk() {\r\n    \r\n  }\r\n}\r\n","<nz-modal [(nzVisible)]=\"open\" [nzWidth]=\"800\" nzTitle=\"Add New Referral\" (nzOnCancel)=\"handleCancel()\" (nzOnOk)=\"handleOk()\">\r\n    <div nz-row>\r\n\r\n        <div class=\"flexy\">\r\n        \r\n            <nz-steps [nzSize]=\"'small'\" [nzCurrent]=\"current\" nzDirection=\"vertical\">\r\n                <nz-step class=\"mini\" nzTitle=\"Profile Information\" nzDescription=\"\"></nz-step>\r\n                <nz-step class=\"mini\" nzTitle=\"Contact Details\" nzDescription=\"\"></nz-step>\r\n                <nz-step class=\"mini\" nzTitle=\"Address Details\" nzDescription=\"\"></nz-step>\r\n                <nz-step class=\"mini\" nzTitle=\"Other Details\" nzDescription=\"\"></nz-step>\r\n            </nz-steps>\r\n        \r\n            <nz-divider class=\"full-height\" nzType=\"vertical\"></nz-divider>\r\n        \r\n            <div class=\"steps-content\" >\r\n                <div nz-row *ngIf=\"current == 0\" >\r\n                    \r\n                </div>\r\n\r\n                <div nz-row *ngIf=\"current == 1\">\r\n                  \r\n                </div>\r\n\r\n                <div nz-row *ngIf=\"current == 2\">\r\n                    \r\n                </div>\r\n\r\n                <div nz-row *ngIf=\"current == 3\">\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div *nzModalFooter>\r\n        <ng-container>\r\n            <button nz-button nzType=\"default\" (click)=\"pre()\" *ngIf=\"current > 0\">\r\n                <span>Previous</span>\r\n            </button>\r\n            <button nz-button nzType=\"default\" (click)=\"next()\" *ngIf=\"current < 3\" [disabled]=\"!canGoNext\">\r\n                <span>Next</span>\r\n            </button>\r\n            <button nz-button nzType=\"primary\" *ngIf=\"current === 3\" [disabled]=\"!canBeDone\">\r\n                <span>Done</span>\r\n            </button>\r\n        </ng-container>\r\n    </div>\r\n</nz-modal>","import { Component, OnInit, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, forwardRef, Input, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nimport { mergeMap, takeUntil, concatMap, switchMap } from 'rxjs/operators';\r\nimport { TimeSheetService, GlobalService, view, ClientService, StaffService, ListService, UploadService, months, days, gender, types, titles, caldStatuses, roles } from '@services/index';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\n\r\nconst noop = () => {\r\n};\r\n\r\ninterface SearchProperties{\r\n  uniqueID: string,\r\n  accountNo: string,\r\n  agencyDefinedGroup: string,\r\n  sysmgr: boolean,\r\n  view: string\r\n}\r\n\r\ninterface Refresh {\r\n  refresh: boolean\r\n}\r\n\r\n@Component({\r\n  selector: 'app-search-list',\r\n  templateUrl: './search-list.component.html',\r\n  styleUrls: ['./search-list.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      multi: true,\r\n      useExisting: forwardRef(() => SearchListComponent),\r\n    }\r\n  ],\r\n  //changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SearchListComponent implements OnInit , AfterViewInit, OnDestroy, ControlValueAccessor {\r\n\r\n  private onTouchedCallback: any = () => { };\r\n  private onChangeCallback: any = () => { };\r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  // 0 if recipient / 1 if staff\r\n  @Input() view: number;\r\n  searchModel: any;\r\n  lists: Array<any> = [];\r\n  loading: boolean = false;\r\n\r\n  constructor(\r\n    private cd: ChangeDetectorRef,\r\n    private timeS: TimeSheetService,\r\n    private globalS: GlobalService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.search();\r\n  }\r\n\r\n  ngAfterViewInit(): void{\r\n    // const user: SearchProperties = {\r\n    //   agencyDefinedGroup: 'event.agencyDefinedGroup',\r\n    //   accountNo: 'event.accountNo',\r\n    //   uniqueID: 'event.uniqueID',\r\n    //   sysmgr: true,\r\n    //   view: this.view == 0 ? 'recipient' : 'staff'\r\n    // }\r\n\r\n    // this.onChangeCallback(user);\r\n  }\r\n\r\n  ngOnDestroy(): void{\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  change(event: SearchProperties) {\r\n    let user: SearchProperties | null;\r\n\r\n    if (!event) {\r\n      user = null;\r\n    } else {\r\n      user = {\r\n        agencyDefinedGroup: event.agencyDefinedGroup,\r\n        accountNo: event.accountNo,\r\n        uniqueID: event.uniqueID,\r\n        sysmgr: true,\r\n        view: this.view == 0 ? 'recipient' : 'staff'\r\n      }\r\n    }\r\n\r\n    this.onChangeCallback(user);\r\n  }\r\n\r\n  search() {\r\n    this.loading = true;\r\n    if (this.view == 0) {\r\n      this.searchRecipient();\r\n    }\r\n\r\n    if (this.view == 1) {\r\n      this.searchStaff();\r\n    }\r\n  }\r\n\r\n  searchStaff(initLoad: boolean = false) {\r\n    this.lists = []\r\n    this.timeS.getstaff({\r\n      User: this.globalS.decode().nameid,\r\n      SearchString: ''\r\n    }).pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n      this.lists = data;\r\n      this.loading = false;\r\n      this.cd.markForCheck();\r\n    });\r\n  }\r\n\r\n  searchRecipient(initLoad: boolean = false, accountName: any = null): void {\r\n    this.lists = []\r\n    this.timeS.getrecipients({\r\n      User: this.globalS.decode().nameid,\r\n      SearchString: ''\r\n    }).pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n      this.lists = data;\r\n      this.loading = false;\r\n      this.cd.markForCheck();\r\n    });\r\n  }\r\n\r\n  //From ControlValueAccessor interface\r\n  writeValue(value: any) {\r\n    this.cd.detectChanges();\r\n\r\n    if (value != null) {\r\n      this.searchModel = value;\r\n    }\r\n\r\n    if (value instanceof Object) {\r\n      this.searchModel = null;\r\n      this.onChangeCallback(null);\r\n    }\r\n  }\r\n\r\n  //From ControlValueAccessor interface\r\n  registerOnChange(fn: any) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  //From ControlValueAccessor interface\r\n  registerOnTouched(fn: any) {\r\n    this.onTouchedCallback = fn;\r\n  }\r\n\r\n  viewResult(): string{\r\n    return this.view == 0 ? 'Search Recipient' :\r\n      'Search Staff';\r\n  }\r\n\r\n\r\n}\r\n","<nz-select nzShowSearch nzAllowClear [nzLoading]=\"loading\" [nzPlaceHolder]=\"viewResult()\" [nzMaxTagCount]=\"1000\" [(ngModel)]=\"searchModel\" (ngModelChange)=\"change($event)\">\r\n    <nz-option *ngFor=\"let l of lists\" [nzLabel]=\"l.accountNo\" [nzValue]=\"l\"></nz-option>   \r\n</nz-select>\r\n","import { Component, OnInit, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, forwardRef, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nimport { mergeMap, takeUntil, concatMap, switchMap } from 'rxjs/operators';\r\nimport { TimeSheetService, GlobalService, view, ClientService, StaffService, ListService, UploadService, months, days, gender, types, titles, caldStatuses, roles } from '@services/index';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\n\r\nconst noop = () => {\r\n};\r\n\r\n@Component({\r\n  selector: 'app-search-timesheet',\r\n  templateUrl: './search-timesheet.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      multi: true,\r\n      useExisting: forwardRef(() => SearchTimesheetComponent),\r\n    }\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./search-timesheet.component.css']\r\n})\r\nexport class SearchTimesheetComponent implements OnInit {\r\n  \r\n  private onTouchedCallback: any = () => { };\r\n  private onChangeCallback: any = () => { };\r\n  private innerValue: any;\r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  // 0 == staff 1 == recipient\r\n  @Input() view: number;\r\n  @Output() selected = new EventEmitter<any>();\r\n\r\n  searchModel: any;\r\n  lists: Array<any> = [];\r\n  loading: boolean = false;\r\n\r\n  switchStr: string;\r\n\r\n  constructor(\r\n    private cd: ChangeDetectorRef,\r\n    private timeS: TimeSheetService,\r\n    private globalS: GlobalService\r\n  ) { \r\n    cd.detach();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.search();\r\n  }\r\n\r\n  search() {\r\n    this.lists = [];\r\n\r\n    this.cd.reattach();\r\n    this.loading = true;\r\n    if (this.view == 0) {\r\n\r\n      this.timeS.getfilteredstaff({\r\n        User: '',\r\n        SearchString: '',\r\n        IncludeActive: false,\r\n        Status: ''\r\n      }).subscribe(data => { \r\n        this.lists = data;\r\n        this.loading = false;\r\n        this.cd.detectChanges();\r\n      });\r\n\r\n    } else if (this.view == 1) {\r\n\r\n      this.timeS.getfiltteredrecipient({\r\n        User: '',\r\n        SearchString: '',\r\n        IncludeActive: false,\r\n        Status: ''\r\n      }).subscribe(data => {\r\n        this.lists = data;\r\n        this.loading = false;\r\n        this.cd.detectChanges();\r\n      });\r\n\r\n    }\r\n  }\r\n  \r\n  change(user: any) {\r\n\r\n    const sel = {\r\n      option: this.view == 0 ? 0 : 1,\r\n      data: user\r\n    };\r\n\r\n    this.selected.emit(sel);\r\n  }\r\n\r\n  //From ControlValueAccessor interface\r\n  writeValue(value: any) {\r\n    this.cd.reattach();\r\n    if (value != null) {\r\n      this.innerValue = value;\r\n      // this.tab = 1;\r\n    }\r\n  }\r\n\r\n  //From ControlValueAccessor interface\r\n  registerOnChange(fn: any) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  //From ControlValueAccessor interface\r\n  registerOnTouched(fn: any) {\r\n    this.onTouchedCallback = fn;\r\n  }\r\n\r\n  switch() {\r\n    const sel = {\r\n      option: this.view,\r\n      data: ''\r\n    };\r\n\r\n    this.selected.emit(sel);\r\n\r\n    this.searchModel = null;\r\n    this.view = this.view == 0 ? 1 : 0;\r\n    this.search();\r\n  }\r\n\r\n  viewResult(): string {\r\n    return this.view == 0 ? 'Search Staff' :\r\n      'Search Recipient';\r\n  }\r\n\r\n}\r\n","<nz-select nzShowSearch nzAllowClear [nzLoading]=\"loading\" [nzPlaceHolder]=\"viewResult()\" [nzMaxTagCount]=\"1000\"\r\n    [(ngModel)]=\"searchModel\" (ngModelChange)=\"change($event)\">\r\n    <nz-option *ngFor=\"let l of lists\" [nzLabel]=\"l\" [nzValue]=\"l\"></nz-option>\r\n</nz-select>\r\n\r\n<button nz-button nzType=\"primary\" nzShape=\"circle\" nz-tooltip [nzTooltipTitle]=\"view == 0 ? 'Switch to Recipient' : 'Switch to Staff'\" (click)=\"switch()\"><i nz-icon nzType=\"swap\"></i></button>","import { Component, OnInit, ViewEncapsulation, forwardRef, OnDestroy } from '@angular/core';\r\nimport { ListService, GlobalService, ClientService } from '@services/index';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { Subject, EMPTY } from 'rxjs';\r\nimport { takeUntil, distinctUntilChanged, debounceTime, switchMap } from 'rxjs/operators';\r\nimport format from 'date-fns/format';\r\n\r\nconst noop = () => {\r\n};\r\n\r\n@Component({\r\n  selector: 'app-staff-popup',\r\n  templateUrl: './staff-popup.component.html',\r\n  styleUrls: ['./staff-popup.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => StaffPopupComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class StaffPopupComponent implements OnInit {\r\n\r\n  private onTouchedCallback: () => void = noop;\r\n  private onChangeCallback: (_: any) => void = noop;\r\n  private destroy$ = new Subject();\r\n  \r\n  private searchText = new Subject<string>();\r\n\r\n  value: any = '';\r\n  isVisible: boolean = false;\r\n  recipientSearchList: Array<any> = [];\r\n  counterRecipient: number = 0;\r\n\r\n  loading: boolean = false;\r\n  isDataLoaded: boolean = false;\r\n\r\n  selectedValue = null;\r\n  pageIndex: number = 1;\r\n  selectList: Array<any> = [];\r\n  selectedUser: any;\r\n\r\n  selectedStaff: any;\r\n  \r\n  constructor(\r\n    private clientS: ClientService\r\n  ) { \r\n      this.searchText.pipe(\r\n        takeUntil(this.destroy$),\r\n        distinctUntilChanged(),\r\n        debounceTime(800),\r\n        switchMap(x => {\r\n          if (!x) return EMPTY;\r\n          return this.clientS.getqualifiedstaff({\r\n              RecipientCode: '',\r\n              User: '',\r\n              BookDate: format(new Date(),'yyyy/MM/dd'),\r\n              StartTime: '09:00',\r\n              EndTime: '11:00',\r\n              EndLimit: '17:00',\r\n              Gender: '',\r\n              Competencys: '',\r\n              CompetenciesCount: 0\r\n          })\r\n        })\r\n      ).subscribe(data => {\r\n        this.loading = false;\r\n        this.selectList = data;\r\n        if(data.length == 1){\r\n          this.isDataLoaded = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void{\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  openModal() {\r\n    this.isVisible = true;\r\n    this.index = -1;\r\n    this.GETLIST();\r\n  }\r\n\r\n  GETLIST(): void {\r\n    this.recipientSearchList = []\r\n    this.loading = true;\r\n\r\n    \r\n    this.clientS.getqualifiedstaff({\r\n        RecipientCode: '',\r\n        User: '',\r\n        BookDate: format(new Date(),'yyyy/MM/dd'),\r\n        StartTime: '09:00',\r\n        EndTime: '11:00',\r\n        EndLimit: '17:00',\r\n        Gender: '',\r\n        Competencys: '',\r\n        CompetenciesCount: 0\r\n    }).subscribe((data: any) => {\r\n      \r\n        this.loading = false;\r\n        let original = data.map(x => {\r\n            var gender = -1;\r\n\r\n            if (x.gender && (x.gender[0]).toUpperCase() == 'F') {\r\n                gender = 0;\r\n            }\r\n\r\n            if (x.gender && (x.gender[0]).toUpperCase() == 'M') {\r\n                gender = 1;\r\n            }\r\n\r\n            return {\r\n                firstName: x.firstName,\r\n                age: x.age,\r\n                rating: x.rating,\r\n                km: x.km,\r\n                gender: gender,\r\n                accountNo: x.accountNo\r\n            };\r\n        });\r\n\r\n        this.selectList = original;\r\n      });\r\n  }\r\n\r\n  computeRating(rating: string): number{\r\n    if (!rating || rating == null || rating == '') return 0;\r\n    var ratingNo = rating.split('*').length - 1;\r\n\r\n    if (ratingNo > 7) return 7;\r\n    return ratingNo;\r\n}\r\n\r\n  trackByIndex(_: number, data: any): number {\r\n    return data.index;\r\n  }\r\n\r\n  handleCancel() {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouchedCallback = fn;\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    if(value){\r\n      this.isDataLoaded = false;\r\n      this.selectedValue = value;\r\n      this.searchText.next(value);      \r\n    }\r\n  }\r\n\r\n  onScroll(){\r\n    console.log('event');\r\n  }\r\n\r\n  index: number = -1;\r\n  \r\n  selected(index: number) {\r\n    this.index = index;\r\n    const currentPage = ((this.pageIndex * 20) - 20) + index;\r\n    this.selectedUser = this.recipientSearchList[currentPage];\r\n  }\r\n\r\n  nzPageIndexChange(data: any) {\r\n    this.pageIndex = data;\r\n    this.index = -1;\r\n  }\r\n\r\n  nzOnSearch(data: any) {\r\n    this.loading = true;\r\n    this.searchText.next(data);\r\n  }\r\n\r\n  ngModelChange(event: string) {\r\n    this.selectedValue = event;\r\n    this.onChangeCallback(this.selectedValue);\r\n  }\r\n\r\n  handleOk() {\r\n    // this.selectList = [];\r\n    \r\n    // this.selectList.push({\r\n    //   accountNo: this.selectedUser.accountNo\r\n    // });\r\n    const selectedStaff = this.selectedStaff.accountNo;\r\n\r\n    this.selectedValue = selectedStaff;\r\n    this.onChangeCallback(selectedStaff);\r\n\r\n    this.isVisible = false;\r\n  }\r\n\r\n}\r\n","<nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"\" [(ngModel)]=\"selectedValue\" (ngModelChange)=\"ngModelChange($event)\" (nzOnSearch)=\"nzOnSearch($event)\">\r\n    <nz-option *ngIf=\"!isDataLoaded\" [nzLabel]=\"selectedValue\"></nz-option>\r\n    <nz-option *ngFor=\"let list of selectList\" [nzLabel]=\"list.accountNo\" [nzValue]=\"list.accountNo\"></nz-option>\r\n</nz-select>\r\n<i nz-icon (click)=\"openModal()\" nzType=\"more\" nzTheme=\"outline\"></i>\r\n\r\n<nz-modal [nzStyle]=\"{ top: '20px' }\" [nzWidth]=\"1200\" [(nzVisible)]=\"isVisible\" nzTitle=\"Staff List\" [nzFooter]=\"modalFooter\" (nzOnCancel)=\"handleCancel()\">\r\n    <div nz-row nzGutter=\"16\">\r\n\r\n        <div nz-col nzSpan=\"15\">\r\n            <nz-tabset *ngIf=\"isVisible\">\r\n                <nz-tab nzTitle=\"Staff  List\">\r\n                    <div class=\"tab-container\">\r\n                        <nz-radio-group [(ngModel)]=\"selectedStaff\" nzName=\"radiogroup\" style=\"width:100%\">\r\n                            <ul>                        \r\n                                <li *ngFor=\"let staff of selectList;let i=index\">\r\n                                    <nz-avatar [nzShape]=\"'square'\" [nzSize]=\"'large'\" [nzIcon]=\"'user'\"></nz-avatar>\r\n                                    <h3>{{staff.accountNo}}</h3>\r\n                                    <h5>{{ staff.firstName}} <span> * {{ staff.age }} yrs old</span></h5>\r\n                                    <nz-rate [ngModel]=\"computeRating(staff.rating)\" nzDisabled></nz-rate>\r\n                                    <label nz-radio [nzValue]=\"staff\"></label>\r\n                                </li>\r\n                            </ul>\r\n                        </nz-radio-group>\r\n                    </div>\r\n                </nz-tab>\r\n                <nz-tab nzTitle=\"Competencies\">\r\n                  Content of Tab Pane 2\r\n                </nz-tab>\r\n                <nz-tab nzTitle=\"Approved/Excluded Staff\">\r\n                  Content of Tab Pane 3\r\n                </nz-tab>\r\n                <nz-tab nzTitle=\"Filters\">\r\n                    Content of Tab Pane 3\r\n                  </nz-tab>\r\n              </nz-tabset>\r\n        </div>\r\n\r\n        <div nz-col nzSpan=\"9\">\r\n            #\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #modalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"handleOk()\">Select</button>\r\n    </ng-template>\r\n\r\n</nz-modal>","import { Component, forwardRef, ElementRef, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef, SkipSelf, Optional } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\nimport { switchMap, distinctUntilChanged, debounceTime } from 'rxjs/operators';\r\nimport { Subject, Subscription, Observable, EMPTY } from 'rxjs';\r\nimport { take } from 'rxjs/operators'\r\nimport { ClientService, GlobalService } from '@services/index';\r\n\r\nconst noop = () => \r\n{\r\n};\r\n\r\n@Component({\r\n    selector: 'suburb',\r\n    templateUrl: './suburb.html',\r\n    styles: [`        \r\n        nz-select {\r\n            margin-right: 8px;\r\n            width: 100%;\r\n        }\r\n    `],\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        multi: true,\r\n        useExisting: forwardRef(() => SuburbComponent),\r\n    }],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class SuburbComponent implements OnInit, OnDestroy, ControlValueAccessor {\r\n    //Placeholders for the callbacks which are later provided\r\n    //by the Control Value Accessor\r\n    private onTouchedCallback: () => void = noop;\r\n    private onChangeCallback: (_: any) => void = noop;\r\n\r\n    @Input() placeholder: string = '';\r\n\r\n\r\n    private searchStream = new Subject<string>();\r\n    private _subscription$: Subscription;\r\n    private searchResult$: Observable<any>;\r\n\r\n    innerValue: any;\r\n    lists: Array<any> = [];\r\n    isLoading: boolean;\r\n\r\n    loadComponent: boolean;\r\n\r\n\r\n    constructor(\r\n        private clientS: ClientService,\r\n        private globalS: GlobalService,\r\n        private cd: ChangeDetectorRef,\r\n        // @SkipSelf() @Optional() private control: NgControl\r\n    ) {\r\n\r\n        // this.control.valueAccessor = this;\r\n\r\n        this.searchResult$ = this.searchStream.pipe(\r\n            debounceTime(200),\r\n            switchMap(data => {\r\n                if (!data) return EMPTY;\r\n\r\n                let pcode = /(\\d+)/g.test(data) ? data.match(/(\\d+)/g)[0] : \"\";\r\n                let suburb = /(\\D+)/g.test(data) ? data.match(/(\\D+)/g)[0] : \"\";\r\n\r\n                let finalSuburb = suburb && suburb.split(',').length > 0 ? suburb.split(',')[0] : suburb;\r\n                this.lists = [];\r\n\r\n                return this.clientS.getsuburb({\r\n                    Postcode: pcode,\r\n                    SuburbName: finalSuburb,\r\n                });\r\n            })\r\n        );\r\n\r\n        this._subscription$ = this.searchResult$.pipe(debounceTime(500)).subscribe(data => {\r\n\r\n            this.lists = data;\r\n\r\n            if (this.lists.length > 0 && this.innerValue) {\r\n                this.innerValue = `${this.lists[0].postcode} ${this.lists[0].suburb}, ${this.lists[0].state}`;                \r\n            }\r\n\r\n            this.select(this.innerValue);\r\n\r\n            this.isLoading = false;\r\n            this.loadComponent = false;\r\n\r\n            this.cd.markForCheck();\r\n            this.cd.detectChanges();\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.searchStream.next();\r\n        this.searchStream.complete();\r\n\r\n    }\r\n\r\n    change() {\r\n\r\n    }\r\n\r\n    select(value: any) {\r\n        this.onChangeCallback(value);\r\n    }\r\n\r\n    //From ControlValueAccessor interface\r\n    writeValue(value: any) {\r\n\r\n        let _value = value ? value.trim() : '';\r\n\r\n        if (this.globalS.isEmpty(_value)) {\r\n            this.lists = [];\r\n            this.innerValue = '';\r\n            this.select('');            \r\n        } else {\r\n            this.lists.push(this.innerValue);\r\n\r\n            this.innerValue = value;\r\n            this.loadComponent = true;          \r\n            this.searchStream.next(value);\r\n        }\r\n\r\n        this.cd.markForCheck();\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    //From ControlValueAccessor interface\r\n    registerOnChange(fn: any) {\r\n        this.onChangeCallback = fn;\r\n    }\r\n\r\n    //From ControlValueAccessor interface\r\n    registerOnTouched(fn: any) {\r\n        this.onTouchedCallback = fn;\r\n    }\r\n\r\n    search(value: string) {\r\n        if (!this.globalS.isEmpty(value)) {\r\n            this.isLoading = true;\r\n            this.searchStream.next(value);\r\n        }\r\n    }\r\n\r\n    format(value: any): string {\r\n        return `${value.postcode} ${value.suburb}, ${value.state}`\r\n    }\r\n\r\n    // ControlValueAccessor methods and others\r\n\r\n    //    public get invalid(): boolean {\r\n    //         return this.control ? this.control.invalid : false;\r\n    //     }\r\n\r\n    //     public get showError(): boolean {\r\n    //         if (!this.control) {\r\n    //         return false;\r\n    //         }\r\n\r\n    //         const { dirty, touched } = this.control;\r\n\r\n    //         return this.invalid ? (dirty || touched) : false;\r\n    //     }\r\n}","<nz-select nzAllowClear nzShowSearch *ngIf=\"!loadComponent\" nzServerSearch nzPlaceHolder=\"\" [ngModel]=\"innerValue\"\r\n    [nzShowArrow]=\"false\" [nzFilterOption]=\"true\" (nzOnSearch)=\"search($event)\" [nzDropdownMatchSelectWidth]=\"false\" [nzPlaceHolder]=\"placeholder\"\r\n     (ngModelChange)=\"select($event)\">\r\n\r\n    \r\n    <nz-option *ngFor=\"let list of lists\" [nzValue]=\"format(list)\" [nzLabel]=\"format(list)\"></nz-option>\r\n\r\n    \r\n    <nz-option *ngIf=\"isLoading\" nzDisabled nzCustomContent>\r\n        <i nz-icon nzType=\"loading\" class=\"loading-icon\"></i> Loading Data...\r\n    </nz-option>\r\n</nz-select>\r\n\r\n<nz-spin nzSimple *ngIf=\"loadComponent\" [nzSize]=\"'small'\"></nz-spin>","import { Component, OnInit, OnDestroy, Input, forwardRef } from '@angular/core'\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { UploadChangeParam } from 'ng-zorro-antd/upload';\r\n\r\nimport { UploadXHRArgs } from 'ng-zorro-antd/upload';\r\nimport { HttpClient, HttpEvent, HttpEventType, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nimport { TimeSheetService, GlobalService, UploadService } from '@services/index';\r\nimport * as _ from 'lodash';\r\n\r\nconst noop = () => {\r\n};\r\n\r\nconst UPLOADFILE_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  multi: true,\r\n  useExisting: forwardRef(() => UploadFileComponent),\r\n};\r\n\r\n@Component({\r\n  selector: 'app-upload-file',\r\n  templateUrl: './upload-file.component.html',\r\n  styleUrls: ['./upload-file.component.css'],\r\n  providers: [\r\n    UPLOADFILE_VALUE_ACCESSOR\r\n  ]\r\n})\r\nexport class UploadFileComponent implements OnInit, OnDestroy, ControlValueAccessor {\r\n\r\n  private onTouchedCallback: () => void = noop;\r\n  private onChangeCallback: (_: any) => void = noop;\r\n\r\n  acceptedTypes: string = \"image/png,image/jpeg,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/pdf\";\r\n  defaultFileList = [];\r\n  fileList2: Array<any> = [];\r\n  urlPath: string;\r\n\r\n  loadedFiles: Array<any> = [];\r\n  token: any;\r\n  loadDocument: boolean = false;\r\n\r\n  private innerValue: any;\r\n\r\n  constructor(\r\n    private msg: NzMessageService,\r\n    private http: HttpClient,\r\n    private uploadS: UploadService,\r\n    private globalS: GlobalService\r\n  ) {\r\n\r\n  }\r\n\r\n  handleChange({ file, fileList }: UploadChangeParam): void {\r\n    const status = file.status;\r\n    if (status !== 'uploading') {\r\n      // console.log(file, fileList);\r\n    }\r\n    if (status === 'done') {\r\n      this.msg.success(`${file.name} file uploaded successfully.`);\r\n      this.loadFiles();\r\n    } else if (status === 'error') {\r\n      this.msg.error(`${file.name} file upload failed.`);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.token = this.globalS.decode();\r\n  }\r\n\r\n  loadFiles() {\r\n    this.loadDocument = true;\r\n    this.uploadS.getFileDocuments(this.token.code, this.innerValue.view)\r\n      .subscribe(data => {\r\n        this.loadedFiles = data;\r\n        this.loadDocument = false;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n  }\r\n\r\n  customReq = (item: UploadXHRArgs) => {\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', item.file as any);\r\n\r\n    const req = new HttpRequest('POST', item.action!, formData, {\r\n      reportProgress: true,\r\n      withCredentials: true\r\n    });\r\n\r\n    return this.http.request(req).subscribe(\r\n      (event: HttpEvent<any>) => {\r\n        if (event.type === HttpEventType.UploadProgress) {\r\n          if (event.total! > 0) {\r\n            (event as any).percent = (event.loaded / event.total!) * 100;\r\n          }\r\n          item.onProgress!(event, item.file!);\r\n        } else if (event instanceof HttpResponse) {\r\n          item.onSuccess!(event.body, item.file!, event);\r\n        }\r\n      },\r\n      err => {\r\n        item.onError!(err, item.file!);\r\n      }\r\n    );\r\n  };\r\n\r\n  deleteDocument(index: number) {\r\n    if (index < 0) return;\r\n\r\n    const { docID, filename } = this.loadedFiles[index];\r\n    this.uploadS.deleteFileDocuments(this.token.code, {\r\n      id: docID,\r\n      filename: filename\r\n    }).subscribe(({ success }: any) => {\r\n      if (success) {\r\n        this.msg.success(`${filename} is deleted.`);\r\n        this.loadedFiles.splice(index, 1);\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadDocument(index: number) {\r\n    const { docID, filename, type, originalLocation } = this.loadedFiles[index];\r\n\r\n    this.uploadS.downloadFileDocuments({\r\n      PersonID: this.token.uniqueID,\r\n      Extension: type,\r\n      FileName: filename,\r\n      DocPath: originalLocation\r\n    }).subscribe(blob => {\r\n      // console.log(blob);\r\n      let data = window.URL.createObjectURL(blob);\r\n      let link = document.createElement('a');\r\n      link.href = data;\r\n      link.download = filename;\r\n      link.click();\r\n\r\n      setTimeout(() => {\r\n        window.URL.revokeObjectURL(data);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  //From ControlValueAccessor interface\r\n  writeValue(value: any) {\r\n    console.log(value);\r\n    if (value != null) {\r\n      this.innerValue = value;\r\n      this.urlPath = `api/v2/file/${this.token.uniqueID}`;\r\n\r\n      this.loadFiles();\r\n      // this.pathForm(this.innerValue);\r\n    }\r\n  }\r\n\r\n  //From ControlValueAccessor interface\r\n  registerOnChange(fn: any) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  //From ControlValueAccessor interface\r\n  registerOnTouched(fn: any) {\r\n    this.onTouchedCallback = fn;\r\n  }\r\n\r\n}\r\n","<div nz-row [nzGutter]=\"{ xs: 8, sm: 16, md: 24, lg: 32, xl: 32, xxl: 32 }\">\r\n    <div nz-col nzSpan=\"8\">\r\n        <nz-upload nzType=\"drag\" [nzMultiple]=\"true\" [nzLimit]=\"2\" [nzAccept]=\"acceptedTypes\"\r\n            [nzCustomRequest]=\"customReq\" [nzAction]=\"urlPath\" (nzChange)=\"handleChange($event)\" nzListType=\"picture\"\r\n            [(nzFileList)]=\"fileList2\">\r\n\r\n            <p class=\"ant-upload-drag-icon\">\r\n                <i nz-icon nzType=\"inbox\"></i>\r\n            </p>\r\n            <p class=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n            <p class=\"ant-upload-hint\">\r\n                Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\r\n            </p>\r\n        </nz-upload>\r\n    </div>\r\n    <div nz-col nzSpan=\"16\">\r\n        <h3>My Files</h3>\r\n        <nz-spin *ngIf=\"loadDocument\" nzSimple></nz-spin>\r\n        <ul *ngIf=\"!loadDocument\">\r\n            <li *ngFor=\"let file of loadedFiles;let i = index\">\r\n                <div>\r\n                    <div class=\"logo-group\">\r\n                        <i class=\"error\" *ngIf=\"file.extension == ''\" nz-icon nzType=\"file-unknown\"\r\n                            nzTheme=\"outline\"></i>\r\n                        <i class=\"good\" *ngIf=\"file.extension !== '' && file.extension == '.pdf'\" nz-icon\r\n                            nzType=\"file-pdf\" nzTheme=\"outline\"></i>\r\n                        <i class=\"good\"\r\n                            *ngIf=\"file.extension !== '' && (file.extension == '.jpg' || file.extension == '.png') \"\r\n                            nz-icon nzType=\"file-image\" nzTheme=\"outline\"></i>\r\n                        <i class=\"good\"\r\n                            *ngIf=\"file.extension !== '' && (file.extension == '.xlsx' || file.extension == '.xls') \"\r\n                            nz-icon nzType=\"file-excel\" nzTheme=\"outline\"></i>\r\n                        <i class=\"good\"\r\n                            *ngIf=\"file.extension !== '' && (file.extension == '.ppt' || file.extension == '.pptx')\"\r\n                            nz-icon nzType=\"file-ppt\" nzTheme=\"outline\"></i>\r\n                        <i class=\"good\"\r\n                            *ngIf=\"file.extension !== '' && (file.extension == '.doc' || file.extension == '.docx') \"\r\n                            nz-icon nzType=\"file-word\" nzTheme=\"outline\"></i>\r\n                        <i class=\"good\" *ngIf=\"file.extension !== '' && file.extension == '.txt'\" nz-icon\r\n                            nzType=\"file-text\" nzTheme=\"outline\"></i>\r\n                    </div>\r\n                    <div class=\"file-info\">\r\n                        <h5 [nzTooltipTitle]=\"file.title\" nzTooltipPlacement=\"topLeft\" nz-tooltip>\r\n                            {{ (file.title.length > 50)? (file.title | slice:0:50)+'..':(file.title) }}</h5>\r\n                        <span *ngIf=\"file.fileSize !== 0\">{{ file.fileSize | fileSizeFilter }}</span>\r\n                        <span class=\"error\" *ngIf=\"file.fileSize == 0\">FILE NOT FOUND!</span>\r\n                    </div>\r\n                    <div class=\"file-operations\">\r\n                        <i nz-icon nzType=\"eye\" nzTheme=\"outline\"></i>\r\n                        <i nz-icon nz-popconfirm nzPopconfirmTitle=\"Are you sure download this file?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"downloadDocument(i)\" nzType=\"cloud-download\"\r\n                            nzTheme=\"outline\"></i>\r\n                        <i nz-popconfirm nzPopconfirmTitle=\"Are you sure to delete this file?\"\r\n                            (nzOnConfirm)=\"deleteDocument(i)\" [nzIcon]=\"iconTpl\" nz-icon nzType=\"delete\"\r\n                            nzTheme=\"outline\"></i>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n        <nz-empty *ngIf=\"!loadDocument && loadedFiles?.length == 0\"></nz-empty>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #iconTpl>\r\n    <i nz-icon nzType=\"question-circle-o\" style=\"color: red;\"></i>\r\n</ng-template>","import {Directive, OnInit, OnDestroy, Output, EventEmitter, ElementRef, AfterViewInit} from '@angular/core';\r\nimport { Observable, fromEvent, Subscription } from 'rxjs';\r\nimport { delay, takeUntil, mergeMap, tap } from 'rxjs/operators';\r\n\r\n\r\n@Directive({\r\n  selector: '[click-outside]'\r\n})\r\n\r\nexport class ClickOutsideDirective implements OnInit, OnDestroy {\r\n    private listening:boolean;\r\n    private globalClick:Observable<MouseEvent>;\r\n    private subscription: Subscription;\r\n\r\n    @Output('clickOutside') clickOutside:EventEmitter<Object>; \r\n\r\n    constructor(private _elRef:ElementRef) {\r\n        this.listening = false;\r\n        this.clickOutside = new EventEmitter();\r\n    }  \r\n\r\n    ngOnInit() {\r\n        this.subscription = fromEvent<MouseEvent>(document, 'click')\r\n            .pipe(delay(1), tap(() => this.listening = true)).subscribe(event => this.onGlobalClick(event));\r\n    }\r\n    \r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    onGlobalClick(event:MouseEvent) {\r\n        if (event instanceof MouseEvent && this.listening === true) {\r\n            if(this.isDescendant(this._elRef.nativeElement, event.target) === true) {\r\n                this.clickOutside.emit({\r\n                target: (event.target || null),\r\n                value: false\r\n                });\r\n            } else {\r\n                this.clickOutside.emit({\r\n                target: (event.target || null),\r\n                value: true\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    isDescendant(parent, child) {\r\n        let node = child;\r\n        while (node !== null) {\r\n            if (node === parent) {\r\n                return true;\r\n            } else {\r\n                node = node.parentNode;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","export * from './click-outside.directive'\r\nexport * from './numeric.directive'","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[numeric]'\r\n})\r\nexport class NumberDirective {\r\n    constructor(\r\n        private el: ElementRef\r\n    ) { }\r\n\r\n\r\n    @HostListener('keydown', ['$event']) onKeyDown(event) {\r\n        let e = <KeyboardEvent>event;\r\n        if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||\r\n            // Allow: Ctrl+A\r\n            (e.keyCode === 65 && (e.ctrlKey || e.metaKey)) ||\r\n            // Allow: Ctrl+C\r\n            (e.keyCode === 67 && (e.ctrlKey || e.metaKey)) ||\r\n            // Allow: Ctrl+V\r\n            (e.keyCode === 86 && (e.ctrlKey || e.metaKey)) ||\r\n            // Allow: Ctrl+X\r\n            (e.keyCode === 88 && (e.ctrlKey || e.metaKey)) ||\r\n            // Allow: home, end, left, right\r\n            (e.keyCode >= 35 && e.keyCode <= 39)) {\r\n            // let it happen, don't do anything\r\n            return;\r\n        }\r\n        // Ensure that it is a number and stop the keypress\r\n        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\r\n            e.preventDefault();\r\n        }\r\n\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { NZ_ICONS } from 'ng-zorro-antd';\r\n\r\nimport {\r\n  MenuFoldOutline,\r\n  MenuUnfoldOutline,\r\n  FormOutline,\r\n  DashboardOutline\r\n} from '@ant-design/icons-angular/icons';\r\n\r\nconst icons = [MenuFoldOutline, MenuUnfoldOutline, DashboardOutline, FormOutline];\r\n\r\n@NgModule({\r\n  providers: [\r\n    { provide: NZ_ICONS, useValue: icons }\r\n  ]\r\n})\r\nexport class IconsProviderModule {\r\n}\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\n@Component({\r\n    styles: [`\r\n      \r\n    `],\r\n    templateUrl: './attendance.html'\r\n})\r\n\r\n\r\nexport class AttendanceAdmin implements OnInit, OnDestroy {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n\r\n    }\r\n}","<div>\r\n    attendance\r\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\n@Component({\r\n    styles: [`\r\n    .dm-input{\r\n        margin-bottom:1rem;\r\n    }\r\n    `],\r\n    templateUrl: './daymanager.html'\r\n})\r\n\r\n\r\nexport class DayManagerAdmin implements OnInit, OnDestroy {\r\n    date: any = new Date();\r\n    dayView: number = 7;\r\n    dayViewArr: Array<number> = [5, 7, 10, 14];\r\n    reload: boolean = false;\r\n    toBePasted: Array<any>;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n\r\n    }\r\n\r\n    showDetail(data: any) {\r\n        console.log(data);\r\n    }\r\n\r\n    showOptions(data: any) {\r\n        console.log(data);\r\n    }\r\n\r\n    highlighted(data: any) {\r\n\r\n    }\r\n\r\n    data(data: any) {\r\n\r\n    }\r\n\r\n    pasted(data: any) {\r\n\r\n    }\r\n\r\n}","<div nz-row>\r\n    <div nz-row class=\"dm-input\">\r\n        <div nz-col nzSpan=\"5\">\r\n            <label for=\"date\"> Date</label>\r\n            <nz-date-picker [(ngModel)]=\"date\"></nz-date-picker>\r\n        </div>\r\n        <div nz-col nzSpan=\"5\">\r\n            <label for=\"dayview\">Day View</label>\r\n            <nz-select [(ngModel)]=\"dayView\">\r\n                <nz-option *ngFor=\"let no of dayViewArr\" [nzValue]=\"no\" [nzLabel]=\"no\"></nz-option>\r\n            </nz-select>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <dm-calendar [startDate]=\"date\" [dayView]=\"dayView\" [reload]=\"reload\" [copyPaste]=\"toBePasted?.length > 0\"\r\n            (showDetail)=\"showDetail($event)\" (showOptions)=\"showOptions($event)\" (highlighted)=\"highlighted($event)\"\r\n            (data)=\"data($event)\" (paste)=\"pasted($event)\"></dm-calendar>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, OnDestroy, Input, AfterViewInit, ViewChild, ElementRef } from '@angular/core'\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\n\r\nimport { filter, tap, last } from 'rxjs/operators';\r\n\r\n@Component({\r\n    styles: [`\r\n      .logo {\r\n    height: 32px;\r\n    background: rgba(255, 255, 255, 0.2);\r\n    margin: 16px;\r\n}\r\n\r\nnz-header {\r\n    background: #fff;\r\n    padding: 0;\r\n}\r\n\r\nnz-content {\r\n    margin: 0 16px;\r\n}\r\n\r\nnz-breadcrumb {\r\n    margin: 16px 0;\r\n}\r\n\r\n.inner-content {\r\n    padding: 24px;\r\n    background: #fff;\r\n    min-height: 360px;\r\n}\r\n\r\nnz-footer {\r\n    text-align: center;\r\n}\r\n\r\nnz-layout{\r\n    height:100vh;\r\n}\r\n\r\n\r\n\r\n.nz-avatar-menu{\r\n    display: inline-block;\r\n    margin-right: 1rem;\r\n}\r\nnz-avatar{\r\n    cursor:pointer;\r\n    background-color:#87d068;\r\n}\r\n.dropdown{\r\n    position: absolute;\r\n    right: 7px;\r\n    width: 8rem;\r\n    background: #fff;\r\n    border: 1px solid #6161611a;\r\n    z-index: 10;\r\n}\r\n.dropdown ul{\r\n    list-style:none;\r\n    padding:0;\r\n    margin:0;\r\n}\r\n.dropdown ul li{\r\n    line-height:2.5rem;\r\n    cursor:pointer;\r\n    text-align:center;\r\n}\r\n.dropdown ul li i{\r\n    margin-right:10px;\r\n}\r\n.dropdown ul li:hover{\r\n    background: #f9f9f9;\r\n}\r\n.menu-button{\r\n    text-align:right;\r\n}\r\n\r\n.main-list > li >>> div{\r\n    font-size:12px;\r\n}\r\n.items li{\r\n    height: 28px;\r\n    line-height: 30px;\r\n    font-size: 12px;\r\n    margin:0;\r\n}\r\n.items li.ant-menu-submenu .ant-menu-submenu-title{    \r\n    line-height: 30px;\r\n    font-size: 12px;\r\n}\r\n.recipient{\r\n    background: inherit;\r\n    position: absolute;\r\n    top: -11rem;\r\n}\r\n.others{\r\n    background: inherit;\r\n    position: absolute;\r\n    top: -11rem;\r\n}\r\n.fix-to-top{\r\n    background: inherit;\r\n    position: absolute;\r\n    top: -2rem;\r\n}\r\n    `],\r\n    templateUrl: './home.html'\r\n})\r\n\r\n\r\nexport class HomeAdmin implements OnInit, OnDestroy, AfterViewInit {\r\n    @ViewChild('recipient') elRef: ElementRef;\r\n\r\n    isCollapsed = false;\r\n    breadcrumbs: Array<any> = [];\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // this.router.events.pipe(\r\n        //     filter(event => event instanceof NavigationEnd)\r\n        // ).subscribe(event => {\r\n        //     this.createBreadCrumb(this.activatedRoute.root);\r\n        // });\r\n        // this.createBreadCrumb(this.activatedRoute.root);\r\n    }\r\n    \r\n    ngOnDestroy(): void {\r\n\r\n    }\r\n\r\n    ngAfterViewInit(): void{\r\n       \r\n    }\r\n\r\n    toHome() {\r\n        this.router.navigate(['/admin/landing']);\r\n    }\r\n\r\n    change(event: any) {\r\n        if (event) {\r\n            var x = document.getElementById('cdk-overlay-2');\r\n            console.log(x);\r\n        }\r\n    }\r\n}","<nz-layout>\r\n    <nz-sider nzCollapsible [(nzCollapsed)]=\"isCollapsed\" [nzBreakpoint]=\"'lg'\" [nzCollapsedWidth]=\"0\"\r\n        [nzZeroTrigger]=\"zeroTrigger\">\r\n        <div class=\"logo\"></div>\r\n        <ul nz-menu [nzMode]=\"'vertical'\" nzTheme=\"dark\" class=\"main-list\">\r\n            <li nz-submenu nzTitle=\"Configuration\" nzIcon=\"mail\">\r\n                <ul class=\"items\">\r\n                    <li nz-submenu nzTitle=\"General Setup\">\r\n                        <ul class=\"items fix-to-top\">\r\n                            <li nz-menu-item>Companies</li>\r\n                            <li nz-menu-item>Branches</li>\r\n                            <li nz-menu-item>Funding Regions</li>\r\n                            <li nz-menu-item>CDC Claim Rates</li>\r\n                            <li nz-menu-item>CDC Target Groups</li>\r\n                            <li nz-menu-item>Package Purpose Statement</li>\r\n                            <li nz-menu-item>Activity Budget Groups</li>\r\n                            <li nz-menu-item>Budgets</li>\r\n                            <li nz-menu-item>User Details</li>\r\n                            <li nz-menu-item>Program Coordinators</li>\r\n                            <li nz-menu-item>Contact Groups</li>\r\n                            <li nz-menu-item>Contact Types</li>\r\n                            <li nz-menu-item>Address Types</li>\r\n                            <li nz-menu-item>Transport & Medical ...</li>\r\n                            <li nz-menu-item>Phone/Email Types</li>\r\n                            <li nz-menu-item>Occupations</li>\r\n                            <li nz-menu-item>Religions</li>\r\n                            <li nz-menu-item>Financial class</li>\r\n                            <li nz-menu-item>Postcodes</li>\r\n                            <li nz-menu-item>Holidays</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li nz-menu-item>System Administration</li>\r\n                    <li nz-menu-item>Document Management</li>\r\n                    <li nz-menu-item>Incidents</li>\r\n                    <li nz-submenu nzTitle=\"Recipients\" (nzOpenChange)=\"change($event)\">\r\n                        <ul class=\"items recipient\">\r\n                            <li nz-menu-item>Recipient Category</li>\r\n                            <li nz-menu-item>Recipient Groups</li>\r\n                            <li nz-menu-item>Recipient Minor Group</li>\r\n                            <li nz-menu-item>Recipient Billing Cycles</li>\r\n                            <li nz-menu-item>Debtor Terms</li>\r\n                            <li nz-menu-item>Recipient Goals</li>\r\n                            <li nz-menu-item>Recipient Consents</li>\r\n                            <li nz-menu-item>Plan Types</li>\r\n                            <li nz-menu-item>Clinical Note Categories</li>\r\n                            <li nz-menu-item>Case Note Categories</li>\r\n                            <li nz-menu-item>OP Notes Categories</li>\r\n                            <li nz-menu-item>Care Domains</li>\r\n                            <li nz-menu-item>Discharge Reasons</li>\r\n                            <li nz-menu-item>Referral Reasons/Presenting Issues</li>\r\n                            <li nz-menu-item>Recipient User Defined Reminders/Reviews/Alerts</li>\r\n                            <li nz-menu-item>Recipient Preferences</li>\r\n                            <li nz-menu-item>Mobility Codes</li>\r\n                            <li nz-menu-item>Tasks</li>\r\n                            <li nz-submenu nzTitle=\"Others\" (nzOpenChange)=\"change($event)\">\r\n                                <ul class=\"items others\">\r\n                                    <li nz-menu-item>Health Conditions</li>\r\n                                    <li nz-menu-item>Medications</li>\r\n                                    <li nz-menu-item>Nursing Diagnosis</li>\r\n                                    <li nz-menu-item>Medical Diagnosis</li>\r\n                                    <li nz-menu-item>Medical Procedures</li>\r\n                                    <li nz-menu-item>Clinical Reminders</li>\r\n                                    <li nz-menu-item>Clinical Alerts</li>\r\n                                    <li nz-menu-item>Admitting Priorities</li>\r\n                                    <li nz-menu-item>Service Note Categories</li>\r\n                                    <li nz-menu-item>Referral Sources</li>\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li nz-menu-item>Staff</li>\r\n                    <li nz-menu-item>Equipment</li>\r\n                    <li nz-menu-item>Activities/Items/Services</li>\r\n                    <li nz-menu-item>Pay Types</li>\r\n                    <li nz-menu-item>Funding Sources</li>\r\n                    <li nz-menu-item>Programs/Packages</li>\r\n                    <li nz-menu-item>Vehicles</li>\r\n                    <li nz-menu-item>Centres/Facilities/Outlets</li>\r\n                    <li nz-menu-item>Activity Groups</li>\r\n                </ul>\r\n            </li>\r\n            <li nz-submenu (nzOpenChange)=\"change($event)\" nzTitle=\"Publish & Print Rosters\" nzIcon=\"appstore\">\r\n                <ul>\r\n                    <li nz-menu-item>Option 5</li>\r\n                    <li nz-menu-item>Option 6</li>\r\n                    <li nz-submenu nzTitle=\"Submenu\">\r\n                        <ul>\r\n                            <li nz-menu-item>Option 7</li>\r\n                            <li nz-menu-item>Option 8</li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n            <li nz-submenu nzTitle=\"Timesheet Processing\" nzIcon=\"setting\">\r\n                <ul>\r\n                    <li nz-menu-item>Option 9</li>\r\n                    <li nz-menu-item>Option 10</li>\r\n                    <li nz-menu-item>Option 11</li>\r\n                </ul>\r\n            </li>\r\n            <li nz-submenu nzTitle=\"Billing\" nzIcon=\"mail\">\r\n                <ul>\r\n                    <li nz-menu-group nzTitle=\"Item 1\">\r\n                        <ul>\r\n                            <li nz-menu-item>asdasd</li>\r\n                            <li nz-menu-item>sdasd</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li nz-menu-group nzTitle=\"Item 2\">\r\n                        <ul>\r\n                            <li nz-menu-item>Option 3</li>\r\n                            <li nz-menu-item>Option 4</li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n            <li nz-submenu nzTitle=\"CDC Claims\" nzIcon=\"mail\">\r\n                <ul>\r\n                    <li nz-menu-group nzTitle=\"Item 1\">\r\n                        <ul>\r\n                            <li nz-menu-item>asdasd</li>\r\n                            <li nz-menu-item>sdasd</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li nz-menu-group nzTitle=\"Item 2\">\r\n                        <ul>\r\n                            <li nz-menu-item>Option 3</li>\r\n                            <li nz-menu-item>Option 4</li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n            <li nz-submenu nzTitle=\"NDIA Claims\" nzIcon=\"mail\">\r\n                <ul>\r\n                    <li nz-menu-group nzTitle=\"Item 1\">\r\n                        <ul>\r\n                            <li nz-menu-item>asdasd</li>\r\n                            <li nz-menu-item>sdasd</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li nz-menu-group nzTitle=\"Item 2\">\r\n                        <ul>\r\n                            <li nz-menu-item>Option 3</li>\r\n                            <li nz-menu-item>Option 4</li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n            <li nz-submenu nzTitle=\"Other Datasets\" nzIcon=\"mail\">\r\n                <ul class=\"items\">\r\n                    <li nz-menu-item>CTP MDS</li>\r\n                    <li nz-menu-item>ICTD MDS</li>\r\n                    <li nz-menu-item>HAS Reports</li>\r\n                    <li nz-menu-item>CSTDA MDS</li>\r\n                </ul>\r\n            </li>\r\n            <li nz-menu-item><i nz-icon nzType=\"account-book\" nzTheme=\"outline\"></i> Accounting</li>\r\n            <li nz-submenu nzTitle=\"Others\" nzIcon=\"mail\">\r\n                <ul class=\"items\">\r\n                    <li nz-menu-item>HACC Upload</li>\r\n                    <li nz-menu-item>DEX Upload</li>\r\n                    <li nz-menu-item>Price Updates</li>\r\n                </ul>\r\n            </li>          \r\n        </ul>\r\n    </nz-sider>\r\n    <nz-layout>\r\n        <nz-header>\r\n            <app-header-nav></app-header-nav>\r\n        </nz-header>\r\n        <nz-content>\r\n            <app-breadcrumbs></app-breadcrumbs>\r\n            <!-- <nz-breadcrumb>\r\n                <nz-breadcrumb-item (click)=\"toHome()\">Home</nz-breadcrumb-item>\r\n                <nz-breadcrumb-item *ngFor=\"let crumb of breadcrumbs\" [routerLink]=\"[crumb.url]\">{{  crumb.label }}</nz-breadcrumb-item>\r\n            </nz-breadcrumb> -->\r\n            <div class=\"inner-content\">\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n        </nz-content>\r\n        <!-- <nz-footer>Put footer here</nz-footer> -->\r\n    </nz-layout>\r\n</nz-layout>\r\n\r\n<ng-template #zeroTrigger>\r\n    <i nz-icon nzType=\"menu-fold\" nzTheme=\"outline\"></i>\r\n</ng-template>\r\n","import { Component, OnInit, OnDestroy, Input, AfterViewInit, ViewChild, ElementRef } from '@angular/core'\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\n\r\nimport { filter, tap, last } from 'rxjs/operators';\r\nimport { GlobalService } from '@services/index';\r\n\r\n@Component({\r\n    styles: [`\r\n.logo {\r\n    height: 2rem;\r\n    background: url(../../../assets/logo/image2.png) no-repeat;\r\n    background-size: 64%;\r\n    margin: 9px 17px;\r\n    width: 10rem;\r\n}\r\n\r\n\r\ni.fas , i.far{\r\n    margin-right: 13px;\r\n}\r\n\r\nnz-header {\r\n    padding: 0;\r\n}\r\n\r\nnz-content {\r\n    background: #85B9D5;\r\n    margin: 6px;\r\n}\r\n\r\nnz-breadcrumb {\r\n    margin: 16px 0;\r\n}\r\n\r\n.inner-content {\r\n    padding: 12px;\r\n    background: #fff;\r\n    min-height: 360px;\r\n}\r\n\r\nnz-footer {\r\n    text-align: center;\r\n}\r\n\r\n\r\n\r\n.nz-avatar-menu{\r\n    display: inline-block;\r\n    margin-right: 1rem;\r\n}\r\nnz-avatar{\r\n    cursor:pointer;\r\n    background-color:#87d068;\r\n}\r\n.dropdown{\r\n    position: absolute;\r\n    right: 7px;\r\n    width: 8rem;\r\n    background: #fff;\r\n    border: 1px solid #6161611a;\r\n    z-index: 10;\r\n}\r\n.dropdown ul{\r\n    list-style:none;\r\n    padding:0;\r\n    margin:0;\r\n}\r\n.dropdown ul li{\r\n    line-height:2.5rem;\r\n    cursor:pointer;\r\n    text-align:center;\r\n}\r\n.dropdown ul li i{\r\n    margin-right:10px;\r\n}\r\n.dropdown ul li:hover{\r\n    background: #f9f9f9;\r\n}\r\n.menu-button{\r\n    text-align:right;\r\n}\r\n\r\nnz-layout{\r\n    background: #85B9D5;\r\n    height:100vh;\r\n}\r\n\r\n.main-list > li >>> div{\r\n    font-size:12px;\r\n}\r\n.items li{\r\n    height: 28px;\r\n    line-height: 30px;\r\n    font-size: 12px;\r\n    margin:0;\r\n}\r\n.items li.ant-menu-submenu .ant-menu-submenu-title{    \r\n    line-height: 30px;\r\n    font-size: 12px;\r\n}\r\n.recipient{\r\n    background: inherit;\r\n    position: absolute;\r\n    top: -11rem;\r\n}\r\n.others{\r\n    background: inherit;\r\n    position: absolute;\r\n    top: -11rem;\r\n}\r\n.fix-to-top{\r\n    background: inherit;\r\n    position: absolute;\r\n    top: -2rem;\r\n}\r\nul li{\r\n    color:#fff;\r\n    margin:0;\r\n}\r\n\r\n//#007DBA\r\nul.main-list{\r\n    background:#004165 !important;\r\n}\r\nnz-sider{\r\n    background:#004165;\r\n}\r\n.ant-menu-submenu-popup.ant-menu-dark .ant-menu-item-selected, .ant-menu.ant-menu-dark .ant-menu-item-selected{\r\n    background-color: #85B9D5;\r\n    color: #004165;\r\n}\r\n.ant-menu-submenu-popup.ant-menu-dark .ant-menu-item-selected, .ant-menu.ant-menu-dark .ant-menu-item-selected i{\r\n    color: #004165;\r\n}\r\n.ant-menu-dark, .ant-menu-dark .ant-menu-sub{\r\n    background:#004165;\r\n}\r\n    `],\r\n    templateUrl: './homev2.html'\r\n})\r\n\r\n\r\nexport class HomeV2Admin implements OnInit, OnDestroy, AfterViewInit {\r\n    @ViewChild('recipient') elRef: ElementRef;\r\n\r\n    isCollapsed = false;\r\n    breadcrumbs: Array<any> = [];\r\n\r\n    ISTAFF_BYPASS: boolean = false;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute,\r\n        private globalS: GlobalService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.ISTAFF_BYPASS = this.globalS.ISTAFF_BYPASS == 'true' && this.globalS.ISTAFF_BYPASS != null ? true : false;\r\n        \r\n        // this.router.events.pipe(\r\n        //     filter(event => event instanceof NavigationEnd)\r\n        // ).subscribe(event => {\r\n        //     this.createBreadCrumb(this.activatedRoute.root);\r\n        // });\r\n        // this.createBreadCrumb(this.activatedRoute.root);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n\r\n    }\r\n\r\n    toHome() {\r\n        this.router.navigate(['/admin/landing']);\r\n    }\r\n\r\n    change(event: any) {\r\n        if (event) {\r\n            var x = document.getElementById('cdk-overlay-2');\r\n            console.log(x);\r\n        }\r\n    }\r\n}","<nz-layout>\r\n    <nz-sider nzCollapsible [(nzCollapsed)]=\"isCollapsed\" [nzBreakpoint]=\"'lg'\" [nzCollapsedWidth]=\"0\"\r\n        [nzZeroTrigger]=\"zeroTrigger\">\r\n        <div class=\"logo\"></div>\r\n        <ul nz-menu [nzMode]=\"'vertical'\" nzTheme=\"dark\" class=\"main-list\">\r\n            <li nz-menu-item *ngIf=\"!ISTAFF_BYPASS\" routerLinkActive=\"ant-menu-item-selected\" routerLink=\"/admin/daymanager\"><i nz-icon class=\"material-icons\"> date_range </i> Day Manager</li>\r\n            <li nz-menu-item *ngIf=\"!ISTAFF_BYPASS\" routerLinkActive=\"ant-menu-item-selected\" routerLink=\"/admin/recipient\"><i nz-icon class=\"material-icons\"> people_alt </i> Recipients</li>\r\n            <li nz-menu-item routerLinkActive=\"ant-menu-item-selected\" routerLink=\"/admin/staff\"><i class=\"fas fa-user-nurse\"></i> Staff</li>\r\n            <li nz-menu-item *ngIf=\"!ISTAFF_BYPASS\" routerLinkActive=\"ant-menu-item-selected\" routerLink=\"/admin/rosters\"><i class=\"far fa-address-card\"></i> Rosters</li>\r\n            <li nz-menu-item *ngIf=\"!ISTAFF_BYPASS\" routerLinkActive=\"ant-menu-item-selected\" routerLink=\"/admin/timesheet\"><i nz-icon class=\"material-icons\"> menu_book </i> Timesheets</li>\r\n            <li nz-menu-item *ngIf=\"!ISTAFF_BYPASS\" routerLinkActive=\"ant-menu-item-selected\"><i class=\"far fa-clock\"></i> Time & Attendance</li>\r\n            <li nz-menu-item *ngIf=\"!ISTAFF_BYPASS\" routerLinkActive=\"ant-menu-item-selected\" routerLink=\"/admin/reports\"><i nz-icon class=\"material-icons\"> poll </i> Reports</li>\r\n            <li nz-menu-item *ngIf=\"!ISTAFF_BYPASS\" routerLinkActive=\"ant-menu-item-selected\" routerLink=\"/admin/budget\"><i nz-icon class=\"material-icons\"> show_chart </i> Analyze & Budget</li>\r\n            <li nz-menu-item *ngIf=\"!ISTAFF_BYPASS\" routerLinkActive=\"ant-menu-item-selected\"><i nz-icon class=\"material-icons\"> search </i> At A Glance</li>\r\n\r\n            <li nz-submenu nzTitle=\"Configuration\" nzIcon=\"mail\">\r\n                <i nz-icon class=\"material-icons\"> settings_applications </i> Settings\r\n            </li>\r\n\r\n        </ul>\r\n    </nz-sider>\r\n    <nz-layout>\r\n        <nz-header>\r\n            <app-header-nav></app-header-nav>\r\n        </nz-header>\r\n        <nz-content>\r\n            <ng-container *ngIf=\"!ISTAFF_BYPASS\">\r\n                <!-- <app-breadcrumbs></app-breadcrumbs> -->\r\n            </ng-container>\r\n            <!-- <nz-breadcrumb>\r\n                <nz-breadcrumb-item (click)=\"toHome()\">Home</nz-breadcrumb-item>\r\n                <nz-breadcrumb-item *ngFor=\"let crumb of breadcrumbs\" [routerLink]=\"[crumb.url]\">{{  crumb.label }}</nz-breadcrumb-item>\r\n            </nz-breadcrumb> -->\r\n            <div class=\"inner-content\">\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n        </nz-content>\r\n        <!-- <nz-footer>Put footer here</nz-footer> -->\r\n    </nz-layout>\r\n</nz-layout>\r\n\r\n<ng-template #zeroTrigger>\r\n    <i nz-icon nzType=\"menu-fold\" nzTheme=\"outline\"></i>\r\n</ng-template>\r\n","export * from './attendance'\r\nexport * from './daymanager'\r\nexport * from './home'\r\nexport * from './homev2'\r\nexport * from './recipients'\r\nexport * from './reports'\r\nexport * from './rosters'\r\nexport * from './staff'\r\nexport * from './timesheet'\r\nexport * from './landing'\r\nexport * from './sessions'\r\nexport * from './side-main-menu'","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\n@Component({\r\n    styles: [`\r\n      .landing-container{\r\n        display: grid;\r\n        grid-template-columns: minmax(min-content, 1fr) minmax(min-content, 1fr) minmax(min-content, 1fr);\r\n        grid-gap: 1rem;\r\n        width: 50%;\r\n        margin: 0 auto;\r\n      }\r\n      figure{\r\n        min-width:4rem;\r\n        background-color:#1b549c;\r\n        color:#fff;\r\n        border-radius: 3px;\r\n        padding: 20px;\r\n        font-size: 30px;\r\n        text-align: center;\r\n        margin:0;\r\n        position: relative;\r\n        height: 8rem;\r\n        cursor:pointer;\r\n      }\r\n      figure:hover{\r\n        background-color: #2466b9;\r\n        color:#fff;\r\n        -webkit-transition: background-color 300ms linear;\r\n        -ms-transition: background-color 300ms linear;\r\n        transition: background-color 300ms linear;\r\n      }\r\n      figure i{\r\n        font-size: 2.7rem;\r\n      }\r\n      figcaption{\r\n        font-size: 1.12rem;\r\n        position: absolute;\r\n        bottom: 1rem;\r\n        left: 0;\r\n        right: 0;\r\n      }\r\n    `],\r\n    templateUrl: './landing.html'\r\n})\r\n\r\n\r\nexport class LandingAdmin implements OnInit, OnDestroy {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n\r\n    }\r\n}","<div class=\"landing-container\">\r\n\r\n    <figure routerLink=\"/admin/daymanager\">\r\n        <i class=\"material-icons\"> date_range </i>\r\n        <figcaption>Day Manager</figcaption>\r\n    </figure>\r\n\r\n    <figure routerLink=\"/admin/recipient\">\r\n        <i class=\"material-icons\"> people_alt </i>\r\n        <figcaption>Recipients</figcaption>\r\n    </figure>\r\n\r\n    <figure routerLink=\"/admin/staff\"> \r\n        <i class=\"fas fa-user-nurse\"></i>\r\n        <figcaption>Staff</figcaption>\r\n    </figure>\r\n\r\n    <figure routerLink=\"/admin/rosters\">\r\n        <i class=\"far fa-address-card\"></i>\r\n        <figcaption>Rosters</figcaption>\r\n    </figure>\r\n\r\n    <figure routerLink=\"/admin/timesheet\">\r\n        <i class=\"material-icons\"> menu_book </i>\r\n        <figcaption>Timesheets</figcaption>\r\n    </figure>\r\n\r\n    <figure>\r\n        <i class=\"far fa-clock\"></i>\r\n        <figcaption>Time & Attendance</figcaption>\r\n    </figure>\r\n\r\n    <figure routerLink=\"/admin/reports\">\r\n        <i class=\"material-icons\"> poll </i>\r\n        <figcaption>Reports</figcaption>\r\n    </figure>\r\n\r\n    <figure routerLink=\"/admin/budget\">\r\n        <i class=\"material-icons\"> show_chart </i>\r\n        <figcaption>Analyze & Budget</figcaption>\r\n    </figure>\r\n\r\n    <figure>\r\n        <i class=\"material-icons\"> search </i>\r\n        <figcaption>At A Glance</figcaption>\r\n    </figure>\r\n</div>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes, ClientService } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    styles: [`\r\n         nz-table{\r\n            margin-top:20px;\r\n        }\r\n        nz-select{\r\n            width:100%;\r\n        }\r\n         label.chk{\r\n            position: absolute;\r\n            top: 1.5rem;\r\n        }\r\n        .overflow-list{\r\n            overflow: auto;\r\n            height: 8rem;\r\n            border: 1px solid #e3e3e3;\r\n        }\r\n        ul{\r\n            list-style:none;\r\n        }\r\n        li{\r\n            margin:5px 0;\r\n        }\r\n        .chkboxes{\r\n            padding:4px;\r\n        }\r\n    `],\r\n    templateUrl: './casenote.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class RecipientCasenoteAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n    caseFormGroup: FormGroup;\r\n    tableData: Array<any>;\r\n    dateFormat: string = 'dd/MM/yyyy';\r\n\r\n    checked: boolean = false;\r\n    isDisabled: boolean = false;\r\n    loading: boolean = false;\r\n\r\n    modalOpen: boolean = false;\r\n\r\n    alist: Array<any> = [];\r\n    blist: Array<any> = [];\r\n    clist: Array<any> = [];\r\n    mlist: Array<any> = [];\r\n\r\n    recipientStrArr: Array<any> = [];\r\n\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private clientS: ClientService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'casenote')) {\r\n                this.user = data\r\n                this.search(data);\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    search(user: any = this.user) {        \r\n        this.getNotes(this.user);\r\n        this.getSelect();\r\n    }\r\n    \r\n    getNotes(user: any) {\r\n        this.loading = true;\r\n        this.clientS.getcasenotes(user.code).pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            let list: Array<any> = data.list || [];\r\n\r\n            if (list.length > 0) {\r\n                list.forEach(x => {\r\n                    if (!this.globalS.IsRTF2TextRequired(x.detailOriginal)) {\r\n                        x.detail = x.detailOriginal\r\n                    }\r\n                });\r\n                this.tableData = list;\r\n            }\r\n            \r\n            this.loading = false;\r\n            this.cd.markForCheck();\r\n        });\r\n    }\r\n\r\n    buildForm() {\r\n        this.inputForm = this.formBuilder.group({\r\n            autoLogout: [''],\r\n            emailMessage: false,\r\n            excludeShiftAlerts: false,\r\n            inAppMessage: false,\r\n            logDisplay: false,\r\n            pin: [''],\r\n            rosterPublish: false,\r\n            shiftChange: false,\r\n            smsMessage: false\r\n        });\r\n\r\n        this.caseFormGroup = this.formBuilder.group({\r\n            notes: '',\r\n            publishToApp: false,\r\n            restrictions: '',\r\n            restrictionsStr: 'public',\r\n            alarmDate: null,\r\n            whocode: '',\r\n            program: '*VARIOUS',\r\n            discipline: '*VARIOUS',\r\n            careDomain: '*VARIOUS',\r\n            category: '',\r\n            recordNumber: null\r\n        });\r\n        \r\n        this.caseFormGroup.get('restrictionsStr').valueChanges.subscribe(data => {\r\n            if (data == 'restrict') {\r\n                this.getSelect();\r\n            }\r\n        });\r\n    }\r\n\r\n    onKeyPress(data: KeyboardEvent) {\r\n        return this.globalS.acceptOnlyNumeric(data);\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    canDeactivate() {\r\n        if (this.inputForm && this.inputForm.dirty) {\r\n            this.modalService.confirm({\r\n                nzTitle: 'Save changes before exiting?',\r\n                nzContent: '',\r\n                nzOkText: 'Yes',\r\n                nzOnOk: () => {\r\n                    this.save();\r\n                },\r\n                nzCancelText: 'No',\r\n                nzOnCancel: () => {\r\n\r\n                }\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getSelect() {\r\n        this.timeS.getmanagerop().subscribe(data => {\r\n            this.mlist = data;\r\n            this.cd.markForCheck();\r\n        });\r\n\r\n        this.timeS.getdisciplineop().pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            data.push('*VARIOUS');\r\n            this.blist = data;\r\n        });\r\n        this.timeS.getcaredomainop().pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            data.push('*VARIOUS');\r\n            this.clist = data;\r\n        });\r\n        this.timeS.getprogramop(this.user.id).pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            data.push('*VARIOUS');\r\n            this.alist = data;\r\n        });\r\n    }\r\n\r\n    showAddModal() {\r\n        this.buildForm();\r\n        this.modalOpen = true;       \r\n    }\r\n\r\n    save() {\r\n\r\n        if (!this.globalS.IsFormValid(this.caseFormGroup))\r\n            return; \r\n        \r\n        const cleanDate = this.globalS.VALIDATE_AND_FIX_DATETIMEZONE_ANOMALY(\r\n            this.caseFormGroup.get('alarmDate').value);\r\n        \r\n        this.caseFormGroup.controls[\"alarmDate\"].setValue(cleanDate);\r\n        this.caseFormGroup.controls[\"whocode\"].setValue(this.user.code);\r\n        this.caseFormGroup.controls[\"restrictions\"].setValue(this.listStringify());\r\n        \r\n        this.loading = true;\r\n        this.clientS.postcasenotes(this.caseFormGroup.value, this.user.id)\r\n            .subscribe(data => {\r\n                this.globalS.sToast('Success', 'Note inserted');\r\n                this.loading = false;\r\n                this.handleCancel();\r\n                this.getNotes(this.user);\r\n            });\r\n          \r\n    }\r\n\r\n    listStringify(): string{\r\n        let tempStr = '';\r\n        this.recipientStrArr.forEach((data,index,array) =>{\r\n            array.length-1 != index ?\r\n                tempStr+= data.trim() + '|' :\r\n                    tempStr += data.trim() ;                \r\n        });\r\n        return tempStr;\r\n    }\r\n\r\n    handleCancel() {\r\n        this.modalOpen = false;\r\n        this.caseFormGroup.reset();\r\n    }\r\n\r\n    log(event: any) {\r\n        this.recipientStrArr = event;\r\n    }\r\n\r\n\r\n    checkChange(event: any, index: number) {\r\n        console.log(index);\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col nzSpan=\"24\">\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Case Note</button>\r\n        <nz-table #sss [nzShowPagination]=\"false\" [nzSize]=\"'small'\" [nzLoading]=\"loading\" [nzFrontPagination]=\"false\" [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"left\" style=\"width: 75%\">Details</th>\r\n                    <th>Detail Date</th>\r\n                    <th>Creator </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of sss.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">\r\n                        <div class=\"word-break\">\r\n                            {{ data.detail  }}\r\n                        </div>\r\n                    </td>\r\n                    <td>{{ data.detailDate | date: 'dd/MM/y' }}</td>\r\n                    <td>{{ data.creator || '-' | uppercase }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n<nz-modal [(nzVisible)]=\"modalOpen\" [nzTitle]=\"'Add Case Note'\" (nzOnCancel)=\"handleCancel()\" nzWidth=\"800\" [nzStyle]=\"{ top: '20px' }\">\r\n    <div nz-row nzGutter=\"16\">\r\n        <div nz-col nzSpan=\"7\" [formGroup]=\"caseFormGroup\">\r\n            <div nz-row>\r\n                <nz-form-item>\r\n                    <nz-form-label>Program</nz-form-label>\r\n                    <nz-form-control nzErrorTip=\"Required Field\">\r\n                        <nz-select nzAllowClear formControlName=\"program\" nzPlaceHolder=\"\" [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let list of alist\" [nzValue]=\"list\" [nzLabel]=\"list\"></nz-option>\r\n                        </nz-select>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n            </div>\r\n            <div nz-row>\r\n                <nz-form-item>\r\n                    <nz-form-label>Discipline</nz-form-label>\r\n                    <nz-form-control nzErrorTip=\"Required Field\">\r\n                        <nz-select nzAllowClear formControlName=\"discipline\" nzPlaceHolder=\"\" [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let list of blist\" [nzValue]=\"list\" [nzLabel]=\"list\"></nz-option>\r\n                        </nz-select>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n            </div>\r\n            <div nz-row>\r\n                <nz-form-item>\r\n                    <nz-form-label>Care Domain</nz-form-label>\r\n                    <nz-form-control nzErrorTip=\"Required Field\">\r\n                        <nz-select nzAllowClear formControlName=\"careDomain\" nzPlaceHolder=\"\" [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let list of clist\" [nzValue]=\"list\" [nzLabel]=\"list\"></nz-option>\r\n                        </nz-select>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n            </div>\r\n        </div>\r\n        <div nz-col nzSpan=\"14\">\r\n            <div nz-row nzGutter=\"32\" [formGroup]=\"caseFormGroup\">\r\n                <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                    <label for=\"\">Reminder Date</label>\r\n                    <nz-date-picker formControlName=\"alarmDate\" [nzFormat]=\"dateFormat\"></nz-date-picker>\r\n                </div>\r\n                <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                    <label formControlName=\"publishToApp\" class=\"chk\" nz-checkbox>Publish To Mobile App</label>\r\n                </div>\r\n            </div>\r\n            <div nz-row>\r\n               <div class=\"form-group\" [formGroup]=\"caseFormGroup\">\r\n                    <nz-radio-group formControlName=\"restrictionsStr\">\r\n                        <label nz-radio nzValue=\"public\" >Public</label>\r\n                        <label nz-radio nzValue=\"workgroup\">Workgroup Only</label>\r\n                        <label nz-radio nzValue=\"restrict\">Restrict To</label>\r\n                    </nz-radio-group>\r\n               </div>\r\n            </div>\r\n            <div nz-row class=\"overflow-list\"  *ngIf=\"caseFormGroup.get('restrictionsStr').value == 'restrict'\" >\r\n                <nz-checkbox-wrapper style=\"width: 100%;\" (nzOnChange)=\"log($event)\">\r\n                    <div nz-row *ngFor=\"let list of mlist; let i = index\">\r\n                        <div class=\"chkboxes\" nz-col nzOffset=\"2\" nzSpan=\"22\"><label nz-checkbox [nzValue]=\"list\">{{ list }}</label></div>\r\n                    </div>\r\n                </nz-checkbox-wrapper>\r\n            </div>\r\n            <div nz-row [formGroup]=\"caseFormGroup\">\r\n                <nz-form-item>\r\n                    <nz-form-label>Notes</nz-form-label>\r\n                    <nz-form-control nzErrorTip=\"Required Field\">\r\n                        <textarea rows=\"4\" nz-input formControlName=\"notes\"></textarea>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"loading\">Save</button>\r\n    </div>\r\n</nz-modal>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    templateUrl: './contacts.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class RecipientContactsAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n\r\n    checked: boolean = false;\r\n    isDisabled: boolean = false;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService\r\n    ) {\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'contacts')) {\r\n                this.user = data;\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n}","<div>\r\n    <app-contacts-details [user]=\"user\"></app-contacts-details>\r\n</div>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes, ClientService } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\n@Component({\r\n    styles: [`\r\n        ul{\r\n            list-style:none;\r\n        }\r\n\r\n        div.divider-subs div{\r\n            margin-top:2rem;\r\n        }\r\n        \r\n    `],\r\n    templateUrl: './history.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class RecipientHistoryAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any>;\r\n    \r\n    checked: boolean = false;\r\n    isDisabled: boolean = false;\r\n\r\n    loading: boolean = false;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private clientS: ClientService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'history')) {\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {        \r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    search(user: any) {\r\n        this.loading = true;\r\n        this.clientS.gethistory(user.code).subscribe(data => {\r\n            this.tableData = data.list;\r\n            this.loading = false;\r\n            this.cd.markForCheck();\r\n        });\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n \r\n\r\n}","<div nz-row>\r\n    <div nz-col>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n            [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"left\">Date</th>\r\n                    <th>Program</th>\r\n                    <th>Event</th>\r\n                    <th>Staff</th>\r\n                    <th>Amount</th>\r\n                    <th>Notes</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ data.date  }}</td>\r\n                    <td>{{ data.program }}</td>\r\n                    <td>{{ data.event }}</td>\r\n                    <td>{{ data.staff }}</td>\r\n                    <td>{{ data.amount || '0' | number : '1.2-2' }}</td>\r\n                    <td>{{ data.notes }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, ClientService } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    styles: [`\r\n        nz-table{\r\n            margin-top:20px;\r\n        }\r\n        \r\n    `],\r\n    templateUrl: './incident.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class RecipientIncidentAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any>;\r\n\r\n    checked: boolean = false;\r\n    isDisabled: boolean = false;\r\n    loading: boolean = false;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private clientS: ClientService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'incidents')) {\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    search(user: any) {\r\n        this.cd.reattach();\r\n        this.loading = true;\r\n        this.clientS.getincidents(user.id).subscribe(data => {\r\n            this.tableData = data.list;\r\n            this.loading = false;\r\n            this.cd.detectChanges();\r\n        })\r\n    }\r\n\r\n    patchData(data: any) {\r\n        this.inputForm.patchValue({\r\n            autoLogout: data.autoLogout,\r\n            emailMessage: data.emailMessage,\r\n            excludeShiftAlerts: data.excludeShiftAlerts,\r\n            inAppMessage: data.inAppMessage,\r\n            logDisplay: data.logDisplay,\r\n            pin: data.pin,\r\n            rosterPublish: data.rosterPublish,\r\n            shiftChange: data.shiftChange,\r\n            smsMessage: data.smsMessage\r\n        });\r\n    }\r\n\r\n\r\n    buildForm() {\r\n        this.inputForm = this.formBuilder.group({\r\n            autoLogout: [''],\r\n            emailMessage: false,\r\n            excludeShiftAlerts: false,\r\n            inAppMessage: false,\r\n            logDisplay: false,\r\n            pin: [''],\r\n            rosterPublish: false,\r\n            shiftChange: false,\r\n            smsMessage: false\r\n        });\r\n    }\r\n\r\n    onKeyPress(data: KeyboardEvent) {\r\n        return this.globalS.acceptOnlyNumeric(data);\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    save() {\r\n        const group = this.inputForm;\r\n\r\n        this.timeS.updatetimeandattendance({\r\n            AutoLogout: group.get('autoLogout').value,\r\n            EmailMessage: group.get('emailMessage').value,\r\n            ExcludeShiftAlerts: group.get('excludeShiftAlerts').value,\r\n            InAppMessage: group.get('inAppMessage').value,\r\n            LogDisplay: group.get('logDisplay').value,\r\n            Pin: group.get('pin').value,\r\n            RosterPublish: group.get('rosterPublish').value,\r\n            ShiftChange: group.get('shiftChange').value,\r\n            SmsMessage: group.get('smsMessage').value,\r\n            Id: this.user.id\r\n        }).pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            this.globalS.sToast('Success', 'Change successful');\r\n            this.inputForm.markAsPristine();            \r\n            return;            \r\n        });\r\n    }\r\n\r\n    canDeactivate() {\r\n        if (this.inputForm && this.inputForm.dirty) {\r\n            this.modalService.confirm({\r\n                nzTitle: 'Save changes before exiting?',\r\n                nzContent: '',\r\n                nzOkText: 'Yes',\r\n                nzOnOk: () => {\r\n                    this.save();\r\n                },\r\n                nzCancelText: 'No',\r\n                nzOnCancel: () => {\r\n\r\n                }\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n\r\n    showAddModal() {\r\n\r\n    }\r\n\r\n    showEditModal(index: number) {\r\n\r\n    }\r\n\r\n    delete(data: any) {\r\n\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col>\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Incident</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n            [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"left\">Status</th>\r\n                    <th>Date</th>\r\n                    <th>Type</th>\r\n                    <th>Sub Category</th>\r\n                    <th>Description</th>\r\n                    <th class=\"action\">Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ data.status  }}</td>\r\n                    <td>{{ data.date | date: 'dd/MM/y' }}</td>\r\n                    <td>{{ data.type }}</td>\r\n                    <td>{{ data.subCategory }}</td>\r\n                    <td>{{ data.description || '-' }}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this group?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"delete(data)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>","export * from './casenote';\r\nexport * from './contacts';\r\nexport * from './history';\r\nexport * from './incident';\r\nexport * from './intake';\r\nexport * from './opnote';\r\nexport * from './pension';\r\nexport * from './perm-roster';\r\nexport * from './personal';\r\nexport * from './quotes';\r\nexport * from './reminders';\r\n","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes, ClientService } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    selector: '',\r\n    templateUrl: './alerts.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class IntakeAlerts implements OnInit, OnDestroy {\r\n\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    loading: boolean = false;\r\n    modalOpen: boolean = false;\r\n    addOREdit: number;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any> = [];\r\n    alist: Array<any> = [];\r\n\r\n    alertGroup: FormGroup;\r\n    competencies: Array<any>\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/branches'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'alerts')) {\r\n                this.user = data;\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n\r\n    search(user: any = this.user) {\r\n        this.cd.reattach();\r\n\r\n        this.loading = true;\r\n        forkJoin([\r\n            this.timeS.gethealthalerts(user.id),\r\n            this.timeS.getrosteralerts(user.id),\r\n            this.timeS.getspecificcompetencies(user.id)\r\n        ]).pipe(takeUntil(this.unsubscribe))\r\n            .subscribe(data => {\r\n                this.loading = false\r\n\r\n                this.alertGroup.patchValue({\r\n                    safetyAlert: data[0].data,\r\n                    rosterAlert: data[1].data\r\n                });\r\n\r\n                this.competencies = data[2];\r\n                this.cd.markForCheck();\r\n            });\r\n    }\r\n\r\n    buildForm() {\r\n\r\n    }\r\n\r\n    save() {\r\n\r\n    }\r\n\r\n    showEditModal(index: number) {\r\n\r\n    }\r\n\r\n    delete(index: number) {\r\n\r\n    }\r\n\r\n    handleCancel() {\r\n\r\n    }\r\n\r\n    showAddModal() {\r\n        this.addOREdit = 1;\r\n        this.modalOpen = true;\r\n    }\r\n}","<div nz-row nzGutter=\"16\">\r\n    <div nz-col nzSpan=\"12\">\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Health & Safety Alerts</label>\r\n            <textarea rows=\"4\" nz-input></textarea>\r\n        </div>\r\n    </div>\r\n    <div nz-col nzSpan=\"12\">\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Health & Safety Alerts</label>\r\n            <textarea rows=\"4\" nz-input></textarea>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div nz-row>\r\n<div nz-col nzSpan=\"24\">\r\n    <button class=\"botton success\" (click)=\"showAddModal()\">Add Goal</button>\r\n    <nz-table #sss [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n        [nzData]=\"competencies\">\r\n        <thead>\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Competency</th>\r\n                <th>Mandatory</th>\r\n                <th>Notes</th>\r\n                <th class=\"action\">Actions</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let data of sss.data;let i = index;trackBy: trackByFn\">\r\n                <td class=\"left\">{{ i+1  }}</td>\r\n                <td>{{ data.competency}}</td>\r\n                <td>{{ data.notes }}</td>\r\n                <td>{{ data.notes }}</td>\r\n                <td>\r\n                    <a (click)=\"showEditModal(i)\">Update</a>\r\n                    <nz-divider nzType=\"vertical\"></nz-divider>\r\n                    <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this branch?\" nzPopconfirmPlacement=\"bottom\"\r\n                        (nzOnConfirm)=\"delete(i)\">Delete</a>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </nz-table>\r\n</div>\r\n</div>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes, ClientService } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n\r\n@Component({\r\n    selector: '',\r\n    styles: [`\r\n        nz-select{\r\n            width:100%\r\n        }\r\n    `],\r\n    templateUrl: './branches.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class IntakeBranches implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    loading: boolean = false;\r\n    modalOpen: boolean = false;\r\n    addOREdit: number;\r\n    inputForm: FormGroup;\r\n\r\n    tableData: Array<any> = [];\r\n    branches: Array<any> = [];\r\n\r\n    private default: any = {\r\n        recordNumber: '',\r\n        personID: '',\r\n        branch: null,\r\n        notes: ''\r\n    }\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'branches')) {\r\n                this.user = data;\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }   \r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    buildForm() {\r\n        this.inputForm = this.formBuilder.group({\r\n            recordNumber: '',\r\n            personID: '',\r\n            branch: [null, [Validators.required]],\r\n            notes: ''\r\n        });\r\n    }\r\n\r\n    search(user: any = this.user) {\r\n        this.cd.reattach();\r\n        this.loading = true;\r\n        this.timeS.getbranches(user.id).subscribe(branches => {\r\n            this.loading = false;\r\n            this.tableData = branches;\r\n            this.cd.detectChanges();\r\n        });\r\n\r\n        this.listDropDown();\r\n    }\r\n\r\n    listDropDown(user: any = this.user) {\r\n        this.branches = [];\r\n        this.listS.getintakebranches(user.id)\r\n            .subscribe(data => this.branches = data)\r\n    }\r\n\r\n    save() {\r\n        \r\n        if (!this.globalS.IsFormValid(this.inputForm))\r\n            return; \r\n        \r\n        this.inputForm.controls['personID'].setValue(this.user.id);\r\n\r\n        this.loading = true;\r\n        if (this.addOREdit == 1) {\r\n            this.timeS.postbranches(this.inputForm.value)\r\n                .subscribe(data => {\r\n                    this.globalS.sToast('Success', 'Branch Inserted');\r\n                    this.search();\r\n                    this.handleCancel();\r\n                });\r\n        }\r\n\r\n        if (this.addOREdit == 2) {\r\n            this.timeS.updatebranches(this.inputForm.value)\r\n                .subscribe(data => {\r\n                    this.globalS.sToast('Success', 'Branch Updated');\r\n                    this.search();\r\n                    this.handleCancel();\r\n                });\r\n        }\r\n    }\r\n\r\n    handleCancel() {\r\n        this.modalOpen = false;\r\n        this.loading = false;\r\n        this.inputForm.reset(this.default);\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    showAddModal() {\r\n        this.addOREdit = 1;\r\n        this.listDropDown();\r\n        this.modalOpen = true;\r\n    }\r\n\r\n    showEditModal(index: number) {\r\n        this.addOREdit = 2;\r\n        const { branch, recordNumber, notes } = this.tableData[index];\r\n        this.inputForm.patchValue({\r\n            recordNumber,\r\n            branch,\r\n            notes\r\n        });\r\n\r\n        this.modalOpen = true;\r\n    }\r\n\r\n    delete(index: number) {\r\n        const { recordNumber } = this.tableData[index];\r\n        this.timeS.deletebranches(recordNumber)\r\n                    .subscribe(data => {\r\n                        this.globalS.sToast('Success', 'Branch Deleted');\r\n                        this.search();\r\n                    })\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col nzSpan=\"15\">\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Branch</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\"\r\n            [nzFrontPagination]=\"false\" [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"left\">#</th>\r\n                    <th>Branch</th>\r\n                    <th>Notes</th>\r\n                    <th class=\"action\">Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ i+1  }}</td>\r\n                    <td>{{ data.branch }}</td>\r\n                    <td>{{ data.notes }}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this branch?\" nzPopconfirmPlacement=\"bottom\"\r\n                            (nzOnConfirm)=\"delete(i)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n<nz-modal [(nzVisible)]=\"modalOpen\" [nzTitle]=\"addOREdit == 1 ? 'Add Branch' : 'Edit Branch'\" (nzOnCancel)=\"handleCancel()\">\r\n    <div [formGroup]=\"inputForm\">\r\n        <div nz-row>\r\n            <nz-form-item *ngIf=\"addOREdit == 1\">\r\n                <nz-form-label [nzNoColon]=\"true\">Branch</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Branch is required!\">\r\n                    <nz-select formControlName=\"branch\" nzAllowClear [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let d of branches\" [nzValue]=\"d\" [nzLabel]=\"d\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n            <div class=\"form-group\" *ngIf=\"addOREdit == 2\">\r\n                <label for=\"\">Branch</label>\r\n                <input nz-input formControlName=\"branch\" disabled />\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Notes</label>\r\n                <textarea rows=\"4\" nz-input formControlName=\"notes\"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"loading\">Save</button>\r\n    </div>\r\n</nz-modal>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core'\r\n\r\n\r\n@Component({\r\n    selector: '',\r\n    templateUrl: './consents.html'\r\n})\r\n\r\nexport class IntakeConsents implements OnInit, OnDestroy {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n\r\n    }\r\n}","<div>\r\n    consents\r\n</div>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes, ClientService } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    selector: '',\r\n    styles: [`\r\n        nz-select{\r\n            width:100%\r\n        }\r\n    `],\r\n    templateUrl: './funding.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class IntakeFunding implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    loading: boolean = false;\r\n    modalOpen: boolean = false;\r\n    addOREdit: number;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any> = [];\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'funding')) {\r\n                this.user = data;\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n\r\n    search(user: any = this.user) {\r\n        this.cd.reattach();\r\n\r\n        this.loading = true;\r\n        this.timeS.getfunding(user.id).subscribe(data => {\r\n            this.loading = false;\r\n            this.tableData = data;\r\n            this.cd.markForCheck();\r\n        });\r\n    }\r\n\r\n    buildForm() {\r\n        \r\n    }\r\n\r\n    save() {\r\n        \r\n    }\r\n\r\n    showEditModal(index: number) {\r\n        \r\n    }\r\n\r\n    delete(index: number) {\r\n       \r\n    }\r\n\r\n    handleCancel() {\r\n        \r\n    }\r\n\r\n    showAddModal() {\r\n        this.addOREdit = 1;\r\n        this.modalOpen = true;\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col nzSpan=\"20\">\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Funding</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\"\r\n            [nzFrontPagination]=\"false\" [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"left\">#</th>\r\n                    <th>Source</th>\r\n                    <th>Program</th>\r\n                    <th>Status</th>\r\n                    <th>Case Manager</th>\r\n                    <th>Details</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ i+1  }}</td>\r\n                    <td>{{ data.source }}</td>\r\n                    <td>{{ data.program }}</td>\r\n                    <td>{{ data.status }}</td>\r\n                    <td>{{ data.cm }}</td>\r\n                    <td>{{ data.details }}</td>                   \r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n<!-- <nz-modal [(nzVisible)]=\"modalOpen\" [nzTitle]=\"addOREdit == 1 ? 'Add Branch' : 'Edit Branch'\"\r\n    (nzOnCancel)=\"handleCancel()\">\r\n    <div [formGroup]=\"inputForm\">\r\n        <div nz-row>\r\n            <nz-form-item *ngIf=\"addOREdit == 1\">\r\n                <nz-form-label [nzNoColon]=\"true\">Branch</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Branch is required!\">\r\n                    <nz-select formControlName=\"branch\" nzAllowClear [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let d of alist\" [nzValue]=\"d\" [nzLabel]=\"d\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n            <div class=\"form-group\" *ngIf=\"addOREdit == 2\">\r\n                <label for=\"\">Branch</label>\r\n                <input nz-input formControlName=\"branch\" disabled />\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Notes</label>\r\n                <textarea rows=\"4\" nz-input formControlName=\"notes\"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"loading\">Save</button>\r\n    </div>\r\n</nz-modal> -->","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes, ClientService } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    selector: '',\r\n    templateUrl: './goals.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class IntakeGoals implements OnInit, OnDestroy {\r\n    \r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    loading: boolean = false;\r\n    modalOpen: boolean = false;\r\n    addOREdit: number;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any> = [];\r\n    alist: Array<any> = [];\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/branches'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'goals')) {\r\n                this.user = data;\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n\r\n    search(user: any = this.user) {\r\n        this.cd.reattach();\r\n\r\n        this.loading = true;\r\n        this.timeS.getgoals(user.id).subscribe(goals => {\r\n            this.loading = false;\r\n            this.tableData = goals;\r\n            this.cd.markForCheck();\r\n        });\r\n    }\r\n\r\n    buildForm() {\r\n\r\n    }\r\n\r\n    save() {\r\n\r\n    }\r\n\r\n    showEditModal(index: number) {\r\n\r\n    }\r\n\r\n    delete(index: number) {\r\n\r\n    }\r\n\r\n    handleCancel() {\r\n\r\n    }\r\n\r\n    showAddModal() {\r\n        this.addOREdit = 1;\r\n        this.modalOpen = true;\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col nzSpan=\"24\">\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Goal</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\"\r\n            [nzFrontPagination]=\"false\" [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Anticipated Date</th>\r\n                    <th>Last Review</th>\r\n                    <th>Completed</th>\r\n                    <th>%</th>\r\n                    <th style=\"width:15rem\">Goals</th>\r\n                    <th class=\"action\">Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ i+1  }}</td>\r\n                    <td>{{ data.achievementDate | date: 'dd/MM/y' }}</td>\r\n                    <td>{{ data.lastReviewed | date: 'd/M/yyyy' }}</td>\r\n                    <td>{{ data.dateAchieved | date: 'dd/MM/y' }}</td>\r\n                    <td>{{ data.achievement }}</td>\r\n                    <td>{{ data.goal }}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this branch?\" nzPopconfirmPlacement=\"bottom\"\r\n                            (nzOnConfirm)=\"delete(i)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n<!-- <nz-modal [(nzVisible)]=\"modalOpen\" [nzTitle]=\"addOREdit == 1 ? 'Add Branch' : 'Edit Branch'\"\r\n    (nzOnCancel)=\"handleCancel()\">\r\n    <div [formGroup]=\"inputForm\">\r\n        <div nz-row>\r\n            <nz-form-item *ngIf=\"addOREdit == 1\">\r\n                <nz-form-label [nzNoColon]=\"true\">Branch</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Branch is required!\">\r\n                    <nz-select formControlName=\"branch\" nzAllowClear [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let d of alist\" [nzValue]=\"d\" [nzLabel]=\"d\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n            <div class=\"form-group\" *ngIf=\"addOREdit == 2\">\r\n                <label for=\"\">Branch</label>\r\n                <input nz-input formControlName=\"branch\" disabled />\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Notes</label>\r\n                <textarea rows=\"4\" nz-input formControlName=\"notes\"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"loading\">Save</button>\r\n    </div>\r\n</nz-modal> -->","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes, ClientService } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n\r\n@Component({\r\n    selector: '',\r\n    templateUrl: './groups.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class IntakeGroups implements OnInit, OnDestroy {\r\n\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    loading: boolean = false;\r\n    modalOpen: boolean = false;\r\n    addOREdit: number;\r\n    inputForm: FormGroup;\r\n\r\n    groupTypes: Array<any>;\r\n    groupPreferences: Array<any>;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/branches'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'groups')) {\r\n                this.user = data;\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    search(user: any = this.user) {\r\n        this.cd.reattach();\r\n\r\n        this.loading = true;\r\n        forkJoin([\r\n            this.timeS.getgrouptypes(user.id),\r\n            this.timeS.getgrouppreferences(user.id)\r\n        ]).subscribe(data => {\r\n            this.loading = false;\r\n            this.groupTypes = data[0];\r\n            this.groupPreferences = data[1];\r\n            this.cd.markForCheck();\r\n        });\r\n    }\r\n\r\n    buildForm() {\r\n\r\n    }\r\n\r\n    save() {\r\n\r\n    }\r\n\r\n    showEditModal(index: number) {\r\n\r\n    }\r\n\r\n    delete(index: number) {\r\n\r\n    }\r\n\r\n    handleCancel() {\r\n\r\n    }\r\n\r\n    showAddModal() {\r\n        this.addOREdit = 1;\r\n        this.modalOpen = true;\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col nzSpan=\"24\">\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Goal</button>\r\n        <nz-table #sss [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n            [nzData]=\"groupTypes\">\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Group</th>\r\n                    <th>Mobile Alert</th>\r\n                    <th>Notes</th>\r\n                    <th class=\"action\">Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of sss.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ i+1  }}</td>\r\n                    <td>{{ data.group}}</td>\r\n                    <td></td>\r\n                    <td>{{ data.notes }}</td>\r\n                    <td class=\"action\">\r\n                        <a (click)=\"showEditModal(i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this branch?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"delete(i)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n<div nz-row>\r\n    <div nz-col nzSpan=\"24\">\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Goal</button>\r\n        <nz-table #ss2 [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n            [nzData]=\"groupPreferences\">\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Preference</th>\r\n                    <th>Notes</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of ss2.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ i+1  }}</td>\r\n                    <td>{{ data.preference}}</td>\r\n                    <td>{{ data.notes }}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this branch?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"delete(i)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n<!-- <nz-modal [(nzVisible)]=\"modalOpen\" [nzTitle]=\"addOREdit == 1 ? 'Add Branch' : 'Edit Branch'\"\r\n    (nzOnCancel)=\"handleCancel()\">\r\n    <div [formGroup]=\"inputForm\">\r\n        <div nz-row>\r\n            <nz-form-item *ngIf=\"addOREdit == 1\">\r\n                <nz-form-label [nzNoColon]=\"true\">Branch</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Branch is required!\">\r\n                    <nz-select formControlName=\"branch\" nzAllowClear [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let d of alist\" [nzValue]=\"d\" [nzLabel]=\"d\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n            <div class=\"form-group\" *ngIf=\"addOREdit == 2\">\r\n                <label for=\"\">Branch</label>\r\n                <input nz-input formControlName=\"branch\" disabled />\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Notes</label>\r\n                <textarea rows=\"4\" nz-input formControlName=\"notes\"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"loading\">Save</button>\r\n    </div>\r\n</nz-modal> -->","export * from './alerts';\r\nexport * from './branches';\r\nexport * from './consents';\r\nexport * from './funding';\r\nexport * from './goals';\r\nexport * from './consents';\r\nexport * from './groups';\r\nexport * from './plans';\r\nexport * from './services';\r\nexport * from './staff';","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes, ClientService } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    selector: '',\r\n    templateUrl: './plans.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class IntakePlans implements OnInit, OnDestroy {\r\n\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    loading: boolean = false;\r\n    modalOpen: boolean = false;\r\n    addOREdit: number;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any> = [];\r\n    alist: Array<any> = [];\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/branches'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'plans')) {\r\n                this.user = data;\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n\r\n    search(user: any = this.user) {\r\n        this.cd.reattach();\r\n\r\n        this.loading = true;\r\n        this.timeS.getplans(user.id).subscribe(plans => {\r\n            this.tableData = plans;\r\n            this.loading = false;\r\n            this.cd.markForCheck();\r\n        });\r\n    }\r\n\r\n    buildForm() {\r\n\r\n    }\r\n\r\n    save() {\r\n\r\n    }\r\n\r\n    showEditModal(index: number) {\r\n\r\n    }\r\n\r\n    delete(index: number) {\r\n\r\n    }\r\n\r\n    handleCancel() {\r\n\r\n    }\r\n\r\n    showAddModal() {\r\n        this.addOREdit = 1;\r\n        this.modalOpen = true;\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col nzSpan=\"24\">\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Goal</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\"\r\n            [nzFrontPagination]=\"false\" [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Name/Description</th>\r\n                    <th>Plan Type</th>\r\n                    <th>St</th>\r\n                    <th>Start Date</th>\r\n                    <th>End Date</th>\r\n                    <th>Created</th>\r\n                    <th>Modified</th>\r\n                    <th>Filename</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ i+1  }}</td>\r\n                    <td>{{ data.carePlan}}</td>\r\n                    <td>{{ data.planType }}</td>\r\n                    <td>{{ data.st }}</td>\r\n                    <td>{{ data.startDate | date: 'd/M/yyyy' }}</td>\r\n                    <td>{{ data.endDate | date: 'd/M/yyyy' }}</td>\r\n                    <td>{{ data.created }}</td>\r\n                    <td>{{ data.modified }}</td>\r\n                    <td>{{ data.filename }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n<!-- <nz-modal [(nzVisible)]=\"modalOpen\" [nzTitle]=\"addOREdit == 1 ? 'Add Branch' : 'Edit Branch'\"\r\n    (nzOnCancel)=\"handleCancel()\">\r\n    <div [formGroup]=\"inputForm\">\r\n        <div nz-row>\r\n            <nz-form-item *ngIf=\"addOREdit == 1\">\r\n                <nz-form-label [nzNoColon]=\"true\">Branch</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Branch is required!\">\r\n                    <nz-select formControlName=\"branch\" nzAllowClear [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let d of alist\" [nzValue]=\"d\" [nzLabel]=\"d\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n            <div class=\"form-group\" *ngIf=\"addOREdit == 2\">\r\n                <label for=\"\">Branch</label>\r\n                <input nz-input formControlName=\"branch\" disabled />\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Notes</label>\r\n                <textarea rows=\"4\" nz-input formControlName=\"notes\"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"loading\">Save</button>\r\n    </div>\r\n</nz-modal> -->","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes, ClientService } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n\r\n@Component({\r\n    selector: '',\r\n    templateUrl: './services.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class IntakeServices implements OnInit, OnDestroy {\r\n\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    loading: boolean = false;\r\n    modalOpen: boolean = false;\r\n    addOREdit: number;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any> = [];\r\n    alist: Array<any> = [];\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/branches'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'services')) {\r\n                this.user = data;\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    search(user: any = this.user) {\r\n        this.cd.reattach();\r\n\r\n        this.loading = true;\r\n        this.timeS.getintakeservices(user.id).subscribe(plans => {\r\n            this.tableData = plans;\r\n            this.loading = false;\r\n            this.cd.markForCheck();\r\n        });\r\n    }\r\n\r\n    buildForm() {\r\n\r\n    }\r\n\r\n    save() {\r\n\r\n    }\r\n\r\n    showEditModal(index: number) {\r\n\r\n    }\r\n\r\n    delete(index: number) {\r\n\r\n    }\r\n\r\n    handleCancel() {\r\n\r\n    }\r\n\r\n    showAddModal() {\r\n        this.addOREdit = 1;\r\n        this.modalOpen = true;\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col nzSpan=\"24\">\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Goal</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\"\r\n            [nzFrontPagination]=\"false\" [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Activity</th>\r\n                    <th>Funded Under</th>\r\n                    <th>Status</th>\r\n                    <th>Service Profile</th>\r\n                    <th class=\"action\">Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ i+1  }}</td>\r\n                    <td>{{ data.activity}}</td>\r\n                    <td>{{ data.funding }}</td>\r\n                    <td>{{ data.status }}</td>\r\n                    <td>{{ data.serviceProfile}}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this branch?\" nzPopconfirmPlacement=\"bottom\"\r\n                            (nzOnConfirm)=\"delete(i)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n<!-- <nz-modal [(nzVisible)]=\"modalOpen\" [nzTitle]=\"addOREdit == 1 ? 'Add Branch' : 'Edit Branch'\"\r\n    (nzOnCancel)=\"handleCancel()\">\r\n    <div [formGroup]=\"inputForm\">\r\n        <div nz-row>\r\n            <nz-form-item *ngIf=\"addOREdit == 1\">\r\n                <nz-form-label [nzNoColon]=\"true\">Branch</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Branch is required!\">\r\n                    <nz-select formControlName=\"branch\" nzAllowClear [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let d of alist\" [nzValue]=\"d\" [nzLabel]=\"d\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n            <div class=\"form-group\" *ngIf=\"addOREdit == 2\">\r\n                <label for=\"\">Branch</label>\r\n                <input nz-input formControlName=\"branch\" disabled />\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Notes</label>\r\n                <textarea rows=\"4\" nz-input formControlName=\"notes\"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"loading\">Save</button>\r\n    </div>\r\n</nz-modal> -->","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes, ClientService } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n\r\n@Component({\r\n    selector: '',\r\n    templateUrl: './staff.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class IntakeStaff implements OnInit, OnDestroy {\r\n    \r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    loading: boolean = false;\r\n    modalOpen: boolean = false;\r\n    addOREdit: number;\r\n    inputForm: FormGroup;\r\n\r\n    excludedStaff: Array<any> = []\r\n    includedStaff: Array<any> = []\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/branches'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'staff')) {\r\n                this.user = data;\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    search(user: any = this.user) {\r\n        this.cd.reattach();\r\n\r\n        this.loading = true;\r\n\r\n        forkJoin([\r\n            this.timeS.getexcludedstaff(user.id),\r\n            this.timeS.getincludedstaff(user.id)\r\n        ]).subscribe(staff => {\r\n            this.loading = false;\r\n            this.excludedStaff = staff[0];\r\n            this.includedStaff = staff[1];\r\n            this.cd.markForCheck();\r\n        });\r\n    }\r\n\r\n    buildForm() {\r\n\r\n    }\r\n\r\n    save() {\r\n\r\n    }\r\n\r\n    showEditModal(index: number) {\r\n\r\n    }\r\n\r\n    delete(index: number) {\r\n\r\n    }\r\n\r\n    handleCancel() {\r\n\r\n    }\r\n\r\n    showAddModal() {\r\n        this.addOREdit = 1;\r\n        this.modalOpen = true;\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col nzSpan=\"24\">\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Goal</button>\r\n        <nz-table #sss [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\"\r\n            [nzFrontPagination]=\"false\" [nzData]=\"excludedStaff\">\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Name</th>\r\n                    <th>Notes</th>\r\n                    <th class=\"action\">Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of sss.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ i+1  }}</td>\r\n                    <td>{{ data.name}}</td>\r\n                    <td>{{ data.notes }}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this branch?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"delete(i)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n<div nz-row>\r\n    <div nz-col nzSpan=\"24\">\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Goal</button>\r\n        <nz-table #ss2 [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\"\r\n            [nzFrontPagination]=\"false\" [nzData]=\"includedStaff\">\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Name</th>\r\n                    <th>Notes</th>\r\n                    <th class=\"action\">Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of ss2.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ i+1  }}</td>\r\n                    <td>{{ data.name}}</td>\r\n                    <td>{{ data.notes }}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this branch?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"delete(i)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n<!-- <nz-modal [(nzVisible)]=\"modalOpen\" [nzTitle]=\"addOREdit == 1 ? 'Add Branch' : 'Edit Branch'\"\r\n    (nzOnCancel)=\"handleCancel()\">\r\n    <div [formGroup]=\"inputForm\">\r\n        <div nz-row>\r\n            <nz-form-item *ngIf=\"addOREdit == 1\">\r\n                <nz-form-label [nzNoColon]=\"true\">Branch</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Branch is required!\">\r\n                    <nz-select formControlName=\"branch\" nzAllowClear [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let d of alist\" [nzValue]=\"d\" [nzLabel]=\"d\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n            <div class=\"form-group\" *ngIf=\"addOREdit == 2\">\r\n                <label for=\"\">Branch</label>\r\n                <input nz-input formControlName=\"branch\" disabled />\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Notes</label>\r\n                <textarea rows=\"4\" nz-input formControlName=\"notes\"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"loading\">Save</button>\r\n    </div>\r\n</nz-modal> -->","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    styles: [`\r\n        ul{\r\n            list-style:none;\r\n        }\r\n\r\n        div.divider-subs div{\r\n            margin-top:2rem;\r\n        }\r\n        nz-divider{\r\n            margin: 0;\r\n        }\r\n        p{\r\n            margin: 0;\r\n            cursor:pointer;\r\n            padding:8px 5px;\r\n        }\r\n        .active-tab{\r\n            background: #717e94;\r\n            color: #fff;\r\n        }\r\n    `],\r\n    templateUrl: './intake.html'\r\n})\r\n\r\n\r\nexport class RecipientIntakeAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService\r\n    ) {\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'time-attendance')) {\r\n            \r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        \r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n\r\n    }\r\n\r\n \r\n}","<div nz-row nzGutter=\"16\">\r\n    <div nz-col nzSpan=\"2\">\r\n        <p routerLink=\"branches\" routerLinkActive=\"active-tab\">\r\n            <i nz-icon nzType=\"shop\" nzTheme=\"outline\"></i>\r\n            Branches\r\n        </p>\r\n        <nz-divider></nz-divider>\r\n        <p routerLink=\"funding\" routerLinkActive=\"active-tab\">\r\n            <i nz-icon nzType=\"dollar\" nzTheme=\"outline\"></i>\r\n            Funding\r\n        </p>\r\n        <nz-divider></nz-divider>\r\n        <p routerLink=\"goals\" routerLinkActive=\"active-tab\">\r\n            <i nz-icon nzType=\"flag\" nzTheme=\"outline\"></i>\r\n            Goals\r\n        </p>\r\n        <nz-divider></nz-divider>\r\n        <p routerLink=\"plans\" routerLinkActive=\"active-tab\">\r\n            <i nz-icon nzType=\"audit\" nzTheme=\"outline\"></i>\r\n            Plans\r\n        </p>\r\n        <nz-divider></nz-divider>\r\n        <p routerLink=\"services\" routerLinkActive=\"active-tab\">\r\n            <i nz-icon nzType=\"solution\" nzTheme=\"outline\"></i>\r\n            Services\r\n        </p>\r\n        <nz-divider></nz-divider>\r\n        <p routerLink=\"staff\" routerLinkActive=\"active-tab\">\r\n            <i nz-icon nzType=\"user-add\" nzTheme=\"outline\"></i>\r\n            Staff\r\n        </p>\r\n        <nz-divider></nz-divider>\r\n        <p routerLink=\"alerts\" routerLinkActive=\"active-tab\">\r\n            <i nz-icon nzType=\"alert\" nzTheme=\"outline\"></i>\r\n            Alerts\r\n        </p>\r\n        <nz-divider></nz-divider>\r\n        <p routerLink=\"consents\" routerLinkActive=\"active-tab\">\r\n            <i nz-icon nzType=\"eye\" nzTheme=\"outline\"></i>\r\n            Consents\r\n        </p>\r\n        <nz-divider></nz-divider>\r\n        <p routerLink=\"groups\" routerLinkActive=\"active-tab\">\r\n            <i nz-icon nzType=\"usergroup-add\" nzTheme=\"outline\"></i>\r\n            Groups\r\n        </p>\r\n    </div>\r\n    <div nz-col nzSpan=\"20\" nzOffset=\"1\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes, ClientService } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    styles: [`\r\n        nz-table{\r\n            margin-top:20px;\r\n        }\r\n         nz-select{\r\n            width:100%;\r\n        }\r\n         label.chk{\r\n            position: absolute;\r\n            top: 1.5rem;\r\n        }\r\n        .overflow-list{\r\n            overflow: auto;\r\n            height: 8rem;\r\n            border: 1px solid #e3e3e3;\r\n        }\r\n        ul{\r\n            list-style:none;\r\n        }\r\n        li{\r\n            margin:5px 0;\r\n        }\r\n        .chkboxes{\r\n            padding:4px;\r\n        }\r\n    `],\r\n    templateUrl: './opnote.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class RecipientOpnoteAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n    caseFormGroup: FormGroup;\r\n    tableData: Array<any>;\r\n\r\n    checked: boolean = false;\r\n    isDisabled: boolean = false;\r\n    loading: boolean = false;\r\n\r\n    modalOpen: boolean = false;\r\n    addOrEdit: number;\r\n    dateFormat: string = 'dd/MM/yyyy';\r\n\r\n\r\n    alist: Array<any> = [];\r\n    blist: Array<any> = [];\r\n    clist: Array<any> = [];\r\n    dlist: Array<any> = [];\r\n    mlist: Array<any> = [];\r\n\r\n    recipientStrArr: Array<any> = [];\r\n\r\n    private default = {\r\n        notes: '',\r\n        publishToApp: false,\r\n        restrictions: '',\r\n        restrictionsStr: 'public',\r\n        alarmDate: null,\r\n        whocode: '',\r\n        program: '*VARIOUS',\r\n        discipline: '*VARIOUS',\r\n        careDomain: '*VARIOUS',\r\n        category: null,\r\n        recordNumber: null\r\n    }\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private clientS: ClientService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'opnote')) {\r\n                this.user = data;\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    search(user: any = this.user) {\r\n        this.getNotes(this.user);\r\n        this.getSelect();\r\n    }\r\n\r\n    getNotes(user:any) {\r\n        this.loading = true;\r\n        this.clientS.getopnotes(user.id).subscribe(data => {\r\n            let list: Array<any> = data.list || [];\r\n            \r\n            if (list.length > 0) {\r\n                list.forEach(x => {\r\n                    if (!this.globalS.IsRTF2TextRequired(x.detailOriginal)) {\r\n                        x.detail = x.detailOriginal\r\n                    }\r\n                });\r\n                this.tableData = list;\r\n            }\r\n            \r\n            this.loading = false;\r\n            this.cd.markForCheck();\r\n        });\r\n    }\r\n\r\n    patchData(data: any) {\r\n        this.inputForm.patchValue({\r\n            autoLogout: data.autoLogout,\r\n            emailMessage: data.emailMessage,\r\n            excludeShiftAlerts: data.excludeShiftAlerts,\r\n            inAppMessage: data.inAppMessage,\r\n            logDisplay: data.logDisplay,\r\n            pin: data.pin,\r\n            rosterPublish: data.rosterPublish,\r\n            shiftChange: data.shiftChange,\r\n            smsMessage: data.smsMessage\r\n        });\r\n    }\r\n\r\n\r\n    buildForm() {\r\n\r\n        this.inputForm = this.formBuilder.group({\r\n            autoLogout: [''],\r\n            emailMessage: false,\r\n            excludeShiftAlerts: false,\r\n            inAppMessage: false,\r\n            logDisplay: false,\r\n            pin: [''],\r\n            rosterPublish: false,\r\n            shiftChange: false,\r\n            smsMessage: false\r\n        });\r\n\r\n        this.caseFormGroup = this.formBuilder.group({\r\n            notes: '',\r\n            publishToApp: false,\r\n            restrictions: '',\r\n            restrictionsStr: 'public',\r\n            alarmDate: null,\r\n            whocode: '',\r\n            program: '*VARIOUS',\r\n            discipline: '*VARIOUS',\r\n            careDomain: '*VARIOUS',\r\n            category: ['', [Validators.required]],\r\n            recordNumber: null\r\n        });\r\n\r\n        this.caseFormGroup.get('restrictionsStr').valueChanges.subscribe(data => {\r\n            if (data == 'restrict') {\r\n                this.getSelect();\r\n            } \r\n        });\r\n    }\r\n\r\n    getSelect() {\r\n        this.timeS.getmanagerop().subscribe(data => {\r\n            this.mlist = data;\r\n            this.cd.markForCheck();\r\n        });\r\n\r\n        this.timeS.getdisciplineop().pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            data.push('*VARIOUS');\r\n            this.blist = data;\r\n        });\r\n        this.timeS.getcaredomainop().pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            data.push('*VARIOUS');\r\n            this.clist = data;\r\n        });\r\n        this.timeS.getprogramop(this.user.id).pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            data.push('*VARIOUS');\r\n            this.alist = data;\r\n        });\r\n\r\n        this.timeS.getcategoryop().pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            this.dlist = data;\r\n        })\r\n    }\r\n\r\n    onKeyPress(data: KeyboardEvent) {\r\n        return this.globalS.acceptOnlyNumeric(data);\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    save() {        \r\n        if (!this.globalS.IsFormValid(this.caseFormGroup))\r\n            return;\r\n        \r\n        const { alarmDate, restrictionsStr, whocode, restrictions } = this.caseFormGroup.value;\r\n        const cleanDate = this.globalS.VALIDATE_AND_FIX_DATETIMEZONE_ANOMALY(alarmDate);\r\n\r\n        let privateFlag = restrictionsStr == 'workgroup' ? true : false;\r\n        let restricts = restrictionsStr != 'restrict';\r\n\r\n        this.caseFormGroup.controls[\"restrictionsStr\"].setValue(privateFlag);\r\n\r\n        this.caseFormGroup.controls[\"alarmDate\"].setValue(cleanDate);\r\n        this.caseFormGroup.controls[\"whocode\"].setValue(this.user.code);\r\n        this.caseFormGroup.controls[\"restrictions\"].setValue(restricts ? '' : this.listStringify());\r\n\r\n        this.loading = true;\r\n        if (this.addOrEdit == 1) {            \r\n            this.clientS.postopnotes(this.caseFormGroup.value, this.user.id)\r\n                .subscribe(data => {\r\n                    this.globalS.sToast('Success', 'Note inserted');\r\n                    this.handleCancel();\r\n                    this.getNotes(this.user);\r\n                });\r\n        }\r\n       \r\n        if (this.addOrEdit == 2) {\r\n            this.clientS.updateopnotes(this.caseFormGroup.value, this.caseFormGroup.value.recordNumber)\r\n                .subscribe(data => {\r\n                    this.globalS.sToast('Success', 'Note updated');\r\n                    this.handleCancel();\r\n                    this.getNotes(this.user);                    \r\n                });\r\n        }\r\n    }\r\n\r\n    listStringify(): string {\r\n        let tempStr = '';\r\n        this.recipientStrArr.forEach((data, index, array) => {\r\n            array.length - 1 != index ?\r\n                tempStr += data.trim() + '|' :\r\n                tempStr += data.trim();\r\n        });\r\n        return tempStr;\r\n    }\r\n\r\n    canDeactivate() {\r\n        if (this.inputForm && this.inputForm.dirty) {\r\n            this.modalService.confirm({\r\n                nzTitle: 'Save changes before exiting?',\r\n                nzContent: '',\r\n                nzOkText: 'Yes',\r\n                nzOnOk: () => {\r\n                    this.save();\r\n                },\r\n                nzCancelText: 'No',\r\n                nzOnCancel: () => {\r\n\r\n                }\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n\r\n    showAddModal() {\r\n        this.addOrEdit = 1;\r\n        this.modalOpen = true;\r\n    }\r\n\r\n    showEditModal(index: number) {\r\n        this.addOrEdit = 2;\r\n\r\n        console.log(this.tableData[index]);\r\n        const { personID, recordNumber, privateFlag, whoCode, detailDate, craetor, detail, detailOriginal, extraDetail2, restrictions, alarmDate, program,discipline, careDomain, publishToApp } = this.tableData[index];\r\n\r\n        this.caseFormGroup.patchValue({\r\n            notes: detail,\r\n            publishToApp: publishToApp,\r\n            restrictions: '',\r\n            restrictionsStr: this.determineRadioButtonValue(privateFlag, restrictions),\r\n            alarmDate: alarmDate,\r\n            program: program,\r\n            discipline: discipline,\r\n            careDomain: careDomain,\r\n            category: extraDetail2,\r\n            recordNumber: recordNumber\r\n        });\r\n        this.modalOpen = true;\r\n    }\r\n\r\n    determineRadioButtonValue(privateFlag: Boolean, restrictions: string): string {\r\n        if (!privateFlag && this.globalS.isEmpty(restrictions)) {\r\n            return 'public';\r\n        }\r\n\r\n        if (!privateFlag && !this.globalS.isEmpty(restrictions)) {\r\n            return 'restrict'\r\n        }\r\n\r\n        return 'workgroup';\r\n    }\r\n\r\n    delete(index: any) {\r\n        const { recordNumber } = this.tableData[index];\r\n\r\n        this.clientS.deleteopnotes(recordNumber).subscribe(data => {\r\n            this.globalS.sToast('Success', 'Note deleted');\r\n            this.handleCancel();\r\n            this.getNotes(this.user);\r\n        });\r\n    }\r\n\r\n    log(event: any) {\r\n        this.recipientStrArr = event;\r\n    }\r\n\r\n    handleCancel() {\r\n        this.modalOpen = false;\r\n        this.loading = false;\r\n        this.caseFormGroup.reset(this.default);\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col>\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add OP Note</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n            [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"left\" style=\"width: 75%\">Details</th>\r\n                    <th>Detail Date</th>\r\n                    <th>Creator </th>\r\n                    <th class=\"action\">Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">\r\n                        <div class=\"word-break\">\r\n                            {{ data.detail  }}\r\n                        </div>\r\n                    </td>\r\n                    <td>{{ data.detailDate | date: 'dd/MM/y' }}</td>\r\n                    <td>{{ data.creator || '-' | uppercase  }}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this group?\" nzPopconfirmPlacement=\"bottom\"\r\n                            (nzOnConfirm)=\"delete(i)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<nz-modal [(nzVisible)]=\"modalOpen\" [nzTitle]=\"addOrEdit == 1 ? 'Add OP Note' : 'Edit Case Note'\" (nzOnCancel)=\"handleCancel()\" nzWidth=\"800\"\r\n    [nzStyle]=\"{ top: '20px' }\">\r\n    <div nz-row [formGroup]=\"caseFormGroup\" nzGutter=\"16\">\r\n        <div nz-col nzSpan=\"7\" [formGroup]=\"caseFormGroup\">\r\n            <div nz-row>\r\n                <nz-form-item>\r\n                    <nz-form-label>Category</nz-form-label>\r\n                    <nz-form-control nzErrorTip=\"Required Field\">\r\n                        <nz-select nzAllowClear formControlName=\"category\" [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let list of dlist\" [nzValue]=\"list\" [nzLabel]=\"list\"></nz-option>\r\n                        </nz-select>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n            </div>\r\n            <div nz-row>\r\n                <nz-form-item>\r\n                    <nz-form-label>Program</nz-form-label>\r\n                    <nz-form-control nzErrorTip=\"Required Field\">\r\n                        <nz-select nzAllowClear formControlName=\"program\" [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let list of alist\" [nzValue]=\"list\" [nzLabel]=\"list\"></nz-option>\r\n                        </nz-select>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n            </div>\r\n            <div nz-row>\r\n                <nz-form-item>\r\n                    <nz-form-label>Discipline</nz-form-label>\r\n                    <nz-form-control nzErrorTip=\"Required Field\">\r\n                        <nz-select nzAllowClear formControlName=\"discipline\" nzPlaceHolder=\"\"\r\n                            [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let list of blist\" [nzValue]=\"list\" [nzLabel]=\"list\"></nz-option>\r\n                        </nz-select>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n            </div>\r\n            <div nz-row>\r\n                <nz-form-item>\r\n                    <nz-form-label>Care Domain</nz-form-label>\r\n                    <nz-form-control nzErrorTip=\"Required Field\">\r\n                        <nz-select nzAllowClear formControlName=\"careDomain\" nzPlaceHolder=\"\"\r\n                            [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let list of clist\" [nzValue]=\"list\" [nzLabel]=\"list\"></nz-option>\r\n                        </nz-select>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n            </div>\r\n        </div>\r\n        <div nz-col nzSpan=\"14\">\r\n            <div nz-row nzGutter=\"32\" [formGroup]=\"caseFormGroup\">\r\n                <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                    <label for=\"\">Reminder Date</label>\r\n                    <nz-date-picker formControlName=\"alarmDate\" [nzFormat]=\"dateFormat\"></nz-date-picker>\r\n                </div>\r\n                <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                    <label formControlName=\"publishToApp\" class=\"chk\" nz-checkbox>Publish To Mobile App</label>\r\n                </div>\r\n            </div>\r\n            <div nz-row>\r\n                <div class=\"form-group\" [formGroup]=\"caseFormGroup\">\r\n                    <nz-radio-group formControlName=\"restrictionsStr\">\r\n                        <label nz-radio nzValue=\"public\">Public</label>\r\n                        <label nz-radio nzValue=\"workgroup\">Workgroup Only</label>\r\n                        <label nz-radio nzValue=\"restrict\">Restrict To</label>\r\n                    </nz-radio-group>\r\n                </div>\r\n            </div>\r\n            <div nz-row class=\"overflow-list\" *ngIf=\"caseFormGroup.get('restrictionsStr').value == 'restrict'\">\r\n                <nz-checkbox-wrapper style=\"width: 100%;\" (nzOnChange)=\"log($event)\">\r\n                    <div nz-row *ngFor=\"let list of mlist; let i = index\">\r\n                        <div class=\"chkboxes\" nz-col nzOffset=\"2\" nzSpan=\"22\"><label nz-checkbox\r\n                                [nzValue]=\"list\">{{ list }}</label></div>\r\n                    </div>\r\n                </nz-checkbox-wrapper>\r\n            </div>\r\n            <div nz-row [formGroup]=\"caseFormGroup\">\r\n                <nz-form-item>\r\n                    <nz-form-label>Notes</nz-form-label>\r\n                    <nz-form-control nzErrorTip=\"Required Field\">\r\n                        <textarea rows=\"4\" nz-input formControlName=\"notes\"></textarea>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"loading\">Save</button>\r\n    </div>\r\n</nz-modal>","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    styles: [`\r\n        nz-table{\r\n            margin-top:20px;\r\n        }\r\n        nz-select{\r\n            width:100%;\r\n        }\r\n        div.divider-subs div{\r\n            margin-top:1rem;\r\n        }\r\n    `],\r\n    templateUrl: './pension.html'\r\n})\r\n\r\n\r\nexport class RecipientPensionAdmin implements OnInit, OnDestroy {\r\n    \r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n    pensionForm: FormGroup;\r\n\r\n    checked: boolean = false;\r\n    isDisabled: boolean = false;\r\n\r\n    alist: Array<any> = [];\r\n    blist: Array<any> = [];\r\n    clist: Array<any> = [];\r\n    dlist: Array<any> = [];\r\n\r\n    dateFormat: string = 'dd/MM/yyyy';\r\n\r\n    modalOpen: boolean = false;\r\n    addOREdit: number;\r\n    isLoading: boolean = false;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService\r\n    ) {\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'insurance-pension')) {\r\n                this.user = data;\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    search(user: any = this.user) {\r\n        \r\n        this.timeS.getinsurance(user.id).subscribe(data => {\r\n            this.inputForm.patchValue({\r\n                medicareNumber: data.medicareNumber,\r\n                medicareExpiry: data.medicareExpiry,\r\n                medicareRecipientID: data.medicareRecipientID,\r\n                pensionStatus: data.pensionStatus,\r\n                concessionNumber: data.concessionNumber,\r\n                dvaNumber: data.dvaNumber,\r\n                ambulanceType: data.ambulanceType,\r\n                haccDvaCardHolderStatus: data.haccdvaCardholderStatus,\r\n                dvaBenefits: data.dvaBenefits,\r\n                pensionVoracity: data.pensionVoracity,\r\n                ambulance: data.ambulance,\r\n                dateofDeath: data.dateOfDeath,\r\n                willAvailable: data.willAvailable,\r\n                whereWillHeld: data.whereWillHeld,\r\n                funeralArrangements: data.funeralArrangements\r\n            });\r\n        });\r\n\r\n        \r\n        this.listS.getpension(this.user.id).subscribe(data => this.blist = data);\r\n\r\n        this.listS.getpensionall().subscribe(data => this.clist = data);\r\n        this.listS.getcardstatus().subscribe(data => this.dlist = data)\r\n\r\n        this.getpension();\r\n    }\r\n\r\n    getpension() {\r\n        this.timeS.getpension(this.user.id).subscribe(data => this.alist = data);\r\n    }\r\n\r\n    showAddModal() {\r\n        this.addOREdit = 1;\r\n        this.modalOpen = true;\r\n    }\r\n\r\n    edit(index: number) {\r\n        const { recordNumber, personID, name, address1, address2, notes } = this.alist[index]\r\n        \r\n        this.pensionForm.patchValue({\r\n            recordNumber,\r\n            personID,\r\n            name,\r\n            address1,\r\n            address2,\r\n            notes\r\n        });\r\n\r\n        this.addOREdit = 2;\r\n        this.modalOpen = true;\r\n    }\r\n\r\n    buildForm() {\r\n        this.inputForm = this.formBuilder.group({\r\n            personID: '',\r\n            medicareNumber: '',\r\n            medicareExpiry: null,\r\n            medicareRecipientID: '',\r\n            pensionStatus: '',\r\n            concessionNumber: '',\r\n            dvaNumber: '',\r\n            ambulanceType: '',\r\n            haccDvaCardHolderStatus: '',\r\n            dvaBenefits: false,\r\n            pensionVoracity: false,\r\n            ambulance: false,\r\n            dateofDeath: null,\r\n            willAvailable: '',\r\n            whereWillHeld: '',\r\n            funeralArrangements: ''\r\n        });\r\n\r\n        this.pensionForm = this.formBuilder.group({\r\n            recordNumber: null,\r\n            personID: null,\r\n            name: null,\r\n            address1: null,\r\n            address2: null,\r\n            notes: null\r\n        });\r\n    }\r\n\r\n    onKeyPress(data: KeyboardEvent) {\r\n        return this.globalS.acceptOnlyNumeric(data);\r\n    }\r\n\r\n    delete(index: number) {\r\n        const { recordNumber } = this.alist[index];\r\n\r\n        this.timeS.deletespension(recordNumber)\r\n            .subscribe(data => {\r\n                this.globalS.sToast('Success', 'Data Deleted');\r\n                this.handleCancel();\r\n                this.getpension();\r\n            });\r\n    }\r\n\r\n    save() {\r\n        const input = this.inputForm.value;\r\n\r\n        const medicareExpiry = this.globalS.VALIDATE_AND_FIX_DATETIMEZONE_ANOMALY(input.medicareExpiry);\r\n        const dateofDeath = this.globalS.VALIDATE_AND_FIX_DATETIMEZONE_ANOMALY(input.dateofDeath);\r\n\r\n        this.inputForm.patchValue({\r\n            medicareExpiry,\r\n            dateofDeath\r\n        });\r\n\r\n        this.timeS.updateinsurance(this.inputForm.value, this.user.id)\r\n            .subscribe(data => {\r\n                this.globalS.sToast('Success', 'Data Updated');\r\n                this.inputForm.markAsPristine();\r\n            });\r\n    }\r\n\r\n    savePension() {\r\n        if (!this.globalS.IsFormValid(this.pensionForm))\r\n            return;\r\n        \r\n        this.isLoading = true;\r\n        \r\n        if (this.addOREdit == 1) {\r\n            this.pensionForm.controls[\"personID\"].setValue(this.user.id)\r\n            this.timeS.postpension(this.pensionForm.value)\r\n                .subscribe(data => {\r\n                    this.globalS.sToast('Success', 'Data Inserted');\r\n                    this.getpension();\r\n                    this.handleCancel();\r\n                });\r\n        }\r\n\r\n        if (this.addOREdit == 2) {\r\n            this.timeS.updatepension(this.pensionForm.value)\r\n                .subscribe(data => {\r\n                    this.globalS.sToast('Success', 'Data Inserted');\r\n                    this.getpension();\r\n                    this.handleCancel();\r\n                });\r\n        }\r\n    }\r\n\r\n    handleCancel() {\r\n        this.pensionForm.reset();\r\n        this.modalOpen = false;\r\n        this.isLoading = false;\r\n    }\r\n\r\n    canDeactivate() {\r\n        if (this.inputForm && this.inputForm.dirty) {\r\n            this.modalService.confirm({\r\n                nzTitle: 'Save changes before exiting?',\r\n                nzContent: '',\r\n                nzOkText: 'Yes',\r\n                nzOnOk: () => {\r\n                    this.save();\r\n                },\r\n                nzCancelText: 'No',\r\n                nzOnCancel: () => {\r\n\r\n                }\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}","<div nz-row> \r\n    <div nz-row>\r\n        <div nz-col nzOffset=\"1\">\r\n            <button class=\"botton success\" (click)=\"save()\" [disabled]=\"!inputForm?.dirty\">Save Changes</button>\r\n        </div>\r\n    </div>\r\n    <div nz-row >\r\n        <div nz-col nzSpan=\"24\">\r\n            <nz-divider nzText=\"Health Insurance, DVA and Ambulance Status\" nzOrientation=\"left\"></nz-divider>\r\n            <div nz-row [nzGutter]=\"16\" class=\"divider-subs\">\r\n                <div nz-col nzOffset=\"2\" [formGroup]=\"inputForm\">\r\n                    <div nz-col nzSpan=\"6\" class=\"form-group\">\r\n                        <label for=\"\">Medicare Number</label>\r\n                        <input nz-input formControlName =\"medicareNumber\" />\r\n                    </div>\r\n                    <div nz-col nzSpan=\"6\" class=\"form-group\">\r\n                        <label for=\"\">Expiry Date</label>\r\n                        <nz-date-picker formControlName=\"medicareExpiry\" [nzFormat]=\"dateFormat\"></nz-date-picker>                        \r\n                    </div>\r\n                    <div nz-col nzSpan=\"6\" v>\r\n                        <label for=\"\">Medical Recipient ID</label>\r\n                        <input nz-input formControlName =\"medicareRecipientID\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div nz-row [nzGutter]=\"16\">\r\n                <div nz-col nzOffset=\"2\" [formGroup]=\"inputForm\">\r\n                    <div nz-col nzSpan=\"9\" class=\"form-group\">\r\n                        <label for=\"\">Pension Status</label>\r\n                        <nz-select nzAllowClear formControlName=\"pensionStatus\" [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let list of clist\" [nzValue]=\"list\" [nzLabel]=\"list\"></nz-option>                           \r\n                        </nz-select>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"9\" class=\"form-group\">\r\n                        <label for=\"\">DVA Card Status</label>\r\n                        <nz-select nzAllowClear formControlName=\"haccDvaCardHolderStatus\">\r\n                            <nz-option *ngFor=\"let list of dlist\" [nzValue]=\"list\" [nzLabel]=\"list\"></nz-option>\r\n                        </nz-select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div nz-row [nzGutter]=\"16\">\r\n                <div nz-col nzOffset=\"2\" [formGroup]=\"inputForm\">\r\n                    <div nz-col nzSpan=\"6\" class=\"form-group\">\r\n                        <label for=\"\">Concession Number</label>\r\n                        <input nz-input formControlName =\"concessionNumber\" />\r\n                    </div>\r\n                    <div nz-col nzSpan=\"6\" class=\"form-group\">\r\n                        <label for=\"\">DVA Number</label>\r\n                        <input nz-input formControlName =\"dvaNumber\" />\r\n                    </div>\r\n                    <div nz-col nzSpan=\"6\" v>\r\n                        <label for=\"\">Type</label>\r\n                        <input nz-input formControlName =\"ambulanceType\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div nz-row [nzGutter]=\"16\">\r\n                <div nz-col nzOffset=\"2\" [formGroup]=\"inputForm\">\r\n                    <div nz-col nzSpan=\"6\" class=\"form-group\">\r\n                        <label for=\"\">Ambulance Sub</label>\r\n                        <label nz-checkbox formControlName=\"ambulance\"></label>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"6\" class=\"form-group\">\r\n                        <label for=\"\">Unable To Determine</label>\r\n                        <label nz-checkbox formControlName=\"pensionVoracity\"></label>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"6\" v>\r\n                        <label for=\"\">Veterans Benefits</label>\r\n                        <label nz-checkbox formControlName=\"dvaBenefits\" ></label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div nz-row>\r\n        <div nz-col nzSpan=\"20\" [formGroup]=\"inputForm\"w>\r\n            <nz-divider nzText=\"Funeral Information\" nzOrientation=\"left\"></nz-divider>\r\n            <div nz-row [nzGutter]=\"16\" class=\"divider-subs\">\r\n                <div nz-col nzSpan=\"12\" nzOffset=\"2\">\r\n                    <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                        <label for=\"\">Date Of Death</label>\r\n                        <nz-date-picker formControlName=\"dateofDeath\" [nzFormat]=\"dateFormat\"></nz-date-picker>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                        <label for=\"\">Will Be Available</label>\r\n                        <label nz-checkbox formControlName=\"willAvailable\"></label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div nz-row [nzGutter]=\"16\">\r\n                <div nz-col nzSpan=\"12\" nzOffset=\"2\">\r\n                    <div nz-row class=\"form-group\">\r\n                        <label for=\"\">Venue</label>\r\n                        <input nz-input formControlName =\"whereWillHeld\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div nz-row [nzGutter]=\"16\">\r\n               <div nz-col nzSpan=\"12\" nzOffset=\"2\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">Funeral Arrangements</label>\r\n                        <textarea rows=\"4\" nz-input formControlName=\"funeralArrangements\"></textarea>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div nz-row>\r\n        <div nz-col nzSpan=\"20\">\r\n            <nz-divider nzText=\"Pension Information\" nzOrientation=\"left\"></nz-divider>\r\n            <div nz-row>\r\n               <div nz-col nzOffset=\"1\">\r\n                    <button class=\"botton success\" (click)=\"showAddModal()\">Add Pension</button>\r\n               </div>\r\n            </div>\r\n            <div nz-row [nzGutter]=\"16\" class=\"divider-subs\">\r\n                <div nz-col nzOffset=\"2\">\r\n                    <nz-table #basicTable [nzData]=\"alist\"  [nzSize]=\"'small'\" [nzFrontPagination]=\"false\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Pension</th>\r\n                                <th>Number</th>\r\n                                <th>Other</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let data of basicTable.data;let i =index\">\r\n                                <td>{{data.name}}</td>\r\n                                <td>{{data.address1}}</td>\r\n                                <td>{{data.address2}}</td>\r\n                                <td>\r\n                                    <a (click)=\"edit(i)\">Edit</a>\r\n                                    <nz-divider nzType=\"vertical\"></nz-divider>\r\n                                    <a  nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this?\"\r\n                                        nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"delete(i)\">Delete</a>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </nz-table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<nz-modal [nzStyle]=\"{ top: '20px' }\" [(nzVisible)]=\"modalOpen\" [nzTitle]=\"addOREdit ? 'Add Pension' : 'Edit Pension'\"\r\n    (nzOnCancel)=\"handleCancel()\">\r\n    <div [formGroup]=\"pensionForm\">\r\n        <div nz-row>\r\n            <nz-form-item *ngIf=\"addOREdit == 1\">\r\n                <nz-form-label [nzNoColon]=\"true\">Pension</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"This is required!\">\r\n                    <nz-select formControlName=\"name\"  nzAllowClear nzPlaceHolder=\"\"\r\n                        [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let d of blist\" [nzValue]=\"d\" [nzLabel]=\"d\"></nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n            <div *ngIf=\"addOREdit == 2\" nz-col nzSpan=\"24\" class=\"form-group\">\r\n                <div nz-row class=\"form-group\" nzOffset=\"2\">\r\n                    <label for=\"\">Pension</label>\r\n                    <input nz-input formControlName=\"name\" disabled  style=\"width:100%\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div nz-row [nzGutter]=\"12\">\r\n            <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                <div nz-row class=\"form-group\" nzOffset=\"2\">\r\n                    <label for=\"\">Number</label>\r\n                    <input nz-input formControlName=\"address1\" />\r\n                </div>\r\n            </div>\r\n            <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                <div nz-row class=\"form-group\" nzOffset=\"2\">\r\n                    <label for=\"\">Other</label>\r\n                    <input nz-input formControlName=\"address2\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div nz-row [nzGutter]=\"12\">\r\n            <div nz-col nzSpan=\"24\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">Funeral Arrangements</label>\r\n                    <textarea rows=\"4\" formControlName=\"notes\" nz-input></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"savePension()\" [nzLoading]=\"isLoading\">Save</button>\r\n    </div>\r\n</nz-modal>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, TimeSheetService, ShareService, leaveTypes, ClientService } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\n@Component({\r\n    styles: [`\r\n        ul{\r\n            list-style:none;\r\n        }\r\n\r\n        div.divider-subs div{\r\n            margin-top:2rem;\r\n        }\r\n        \r\n    `],\r\n    templateUrl: './perm-roster.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class RecipientPermrosterAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any>;\r\n\r\n    checked: boolean = false;\r\n    isDisabled: boolean = false;\r\n    loading: boolean = false;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private clientS: ClientService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'perm-roster')) {\r\n                this.user = data;\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    search(user: any = this.user) {\r\n        this.loading = true;\r\n        this.clientS.getpermroster(user.code).subscribe(data => {\r\n            this.tableData = data.list;\r\n            this.loading = false;\r\n            this.cd.markForCheck();\r\n        });\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n            [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                <th class=\"left\">Start Time</th>\r\n                <th>Duration</th>\r\n                <th>Activity</th>\r\n                <th>Staff/Location</th>\r\n                <th>Program</th>\r\n                <th>Dataset Type</th>\r\n                <th>Service Cost</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ data.startTime  }}</td>\r\n                    <td>{{ data.duration }}</td>\r\n                    <td>{{ data.activity }}</td>\r\n                    <td>{{ data.staffLocation }}</td>\r\n                    <td>{{ data.program }}</td>\r\n                    <td>{{ data.dataSet }}</td>\r\n                    <td>{{ data.serviceCost }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    styles: [`\r\n        ul{\r\n            list-style:none;\r\n        }\r\n\r\n        div.divider-subs div{\r\n            margin-top:2rem;\r\n        }\r\n        \r\n    `],\r\n    templateUrl: './personal.html'\r\n})\r\n\r\n\r\nexport class RecipientPersonalAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n\r\n    checked: boolean = false;\r\n    isDisabled: boolean = false;\r\n\r\n    transformedUser: any;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService\r\n    ) {\r\n        \r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'personal')) {\r\n                this.user = data;\r\n                this.transform(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.transform(this.user);        \r\n    }\r\n    \r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    transform(user: any) {\r\n        \r\n        if (!user) return;\r\n        \r\n        this.transformedUser = {\r\n            name: user.code,\r\n            view: user.view,\r\n            id: user.id,\r\n            sysmgr: user.sysmgr\r\n        }\r\n    }\r\n\r\n    \r\n}","<div *ngIf=\"transformedUser\">\r\n    <app-profile-page [(ngModel)]=\"transformedUser\" [isAdmin]=\"true\" ngDefaultControl></app-profile-page>\r\n</div>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    styles: [`\r\n        nz-table{\r\n            margin-top:20px;\r\n        }\r\n        \r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './quotes.html'\r\n})\r\n\r\n\r\nexport class RecipientQuotesAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any> = [];\r\n    checked: boolean = false;\r\n    isDisabled: boolean = false;\r\n\r\n    displayLast: number = 20;\r\n    archivedDocs: boolean = false;\r\n    acceptedQuotes: boolean = false;\r\n\r\n    loading: boolean = false;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/personal']);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'quotes')) {\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    search(user: any) {\r\n        this.loading = true;\r\n        this.listS.getlistquotes({\r\n            PersonID: user.id,\r\n            DisplayLast: this.displayLast,\r\n            IncludeArchived: this.archivedDocs,\r\n            IncludeAccepted: this.acceptedQuotes\r\n        }).subscribe(data => {\r\n            this.tableData = data;\r\n            this.loading = false;\r\n            this.cd.markForCheck();\r\n        })\r\n    }\r\n\r\n    patchData(data: any) {\r\n        this.inputForm.patchValue({\r\n            autoLogout: data.autoLogout,\r\n            emailMessage: data.emailMessage,\r\n            excludeShiftAlerts: data.excludeShiftAlerts,\r\n            inAppMessage: data.inAppMessage,\r\n            logDisplay: data.logDisplay,\r\n            pin: data.pin,\r\n            rosterPublish: data.rosterPublish,\r\n            shiftChange: data.shiftChange,\r\n            smsMessage: data.smsMessage\r\n        });\r\n    }\r\n\r\n\r\n    buildForm() {\r\n        this.inputForm = this.formBuilder.group({\r\n            autoLogout: [''],\r\n            emailMessage: false,\r\n            excludeShiftAlerts: false,\r\n            inAppMessage: false,\r\n            logDisplay: false,\r\n            pin: [''],\r\n            rosterPublish: false,\r\n            shiftChange: false,\r\n            smsMessage: false\r\n        });\r\n    }\r\n\r\n    onKeyPress(data: KeyboardEvent) {\r\n        return this.globalS.acceptOnlyNumeric(data);\r\n    }\r\n\r\n    save() {\r\n        const group = this.inputForm;\r\n\r\n        this.timeS.updatetimeandattendance({\r\n            AutoLogout: group.get('autoLogout').value,\r\n            EmailMessage: group.get('emailMessage').value,\r\n            ExcludeShiftAlerts: group.get('excludeShiftAlerts').value,\r\n            InAppMessage: group.get('inAppMessage').value,\r\n            LogDisplay: group.get('logDisplay').value,\r\n            Pin: group.get('pin').value,\r\n            RosterPublish: group.get('rosterPublish').value,\r\n            ShiftChange: group.get('shiftChange').value,\r\n            SmsMessage: group.get('smsMessage').value,\r\n            Id: this.user.id\r\n        }).pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data) {\r\n                this.globalS.sToast('Success', 'Change successful');\r\n                this.inputForm.markAsPristine();\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    canDeactivate() {\r\n        if (this.inputForm && this.inputForm.dirty) {\r\n            this.modalService.confirm({\r\n                nzTitle: 'Save changes before exiting?',\r\n                nzContent: '',\r\n                nzOkText: 'Yes',\r\n                nzOnOk: () => {\r\n                    this.save();\r\n                },\r\n                nzCancelText: 'No',\r\n                nzOnCancel: () => {\r\n\r\n                }\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    showAddModal() {\r\n        \r\n    }\r\n}","<div nz-row>\r\n    <div nz-col>\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Quote</button>\r\n        <nz-table #basicTable [nzLoading]=\"loading\" [nzShowPagination]=\"false\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n            [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"left\">Quote #</th>\r\n                    <th>Name/Description</th>\r\n                    <th>Quote Type</th>\r\n                    <th>St</th>\r\n                    <th>Valid From</th>\r\n                    <th>Valid To</th>\r\n                    <th>Created</th>\r\n                    <th>Modified</th>\r\n                    <th>Related Careplan</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ data.quoteNumber  }}</td>\r\n                    <td>{{ data.carePlan }}</td>\r\n                    <td>{{ data.planType }}</td>\r\n                    <td>{{ data.st }}</td>\r\n                    <td>{{ data.startDate | date: 'dd/MM/y' }}</td>\r\n                    <td>{{ data.endDate | date: 'dd/MM/y' }}</td>\r\n                    <td>{{ data.created }}</td>\r\n                    <td>{{ data.modified }}</td>\r\n                    <td>{{ data.filename }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy, Input, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes, ClientService, recurringInt, recurringStr } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\nimport { recurringValidator } from '../../../validators/index'\r\n@Component({\r\n    styles: [`\r\n        nz-table{\r\n            margin-top:20px;\r\n        }\r\n         nz-select{\r\n            width:100%;\r\n        }\r\n    `],\r\n    templateUrl: './reminders.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class RecipientRemindersAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any>;\r\n\r\n    checked: boolean = false;\r\n    isDisabled: boolean = false;\r\n    loading: boolean = false;\r\n    isLoading: boolean = false;\r\n\r\n    modalOpen: boolean = false;\r\n    addOREdit: number;\r\n    dateFormat: string = 'dd/MM/yyyy';\r\n    dayInt = recurringInt;\r\n    dayStr = recurringStr;\r\n\r\n    private default: any = {\r\n        recordNumber: '',\r\n        personID: '',\r\n        listOrder: '',\r\n        followUpEmail: '',\r\n        recurring: false,\r\n        recurrInt: null,\r\n        recurrStr: null,\r\n        notes: '',\r\n        reminderDate: null,\r\n        dueDate: null,\r\n        staffAlert: null\r\n    }\r\n\r\n    alist: Array<any> = []\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private listS: ListService,\r\n        private sharedS: ShareService,\r\n        private clientS: ClientService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/recipient/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'reminders')) {\r\n                this.user = data;\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    search(user: any = this.user) {\r\n        this.loading = true;\r\n        \r\n        this.timeS.getremindersrecipient(user.code).subscribe(data => {\r\n            this.tableData = data.list;\r\n            this.loading = false;\r\n            this.cd.markForCheck();\r\n        });\r\n\r\n        this.listS.getlistrecipientreminders().subscribe(data => this.alist = data);\r\n    }\r\n\r\n    buildForm() {\r\n        this.inputForm = this.formBuilder.group({\r\n            recordNumber: '',\r\n            personID: '',\r\n            listOrder: '',\r\n            followUpEmail: ['', [Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\r\n            recurring: false,\r\n            recurrInt: null,\r\n            recurrStr: null,\r\n            notes: '',\r\n            reminderDate: null,\r\n            dueDate: null,\r\n            staffAlert: ['', [Validators.required]]\r\n        });\r\n\r\n        this.inputForm.controls['recurrStr'].disable();\r\n        this.inputForm.controls['recurrInt'].disable();\r\n\r\n        this.inputForm.get('recurring').valueChanges.subscribe(data => {\r\n            if (!data) {\r\n                this.inputForm.controls['recurrInt'].setValue(null)\r\n                this.inputForm.controls['recurrStr'].setValue(null)\r\n                this.inputForm.controls['recurrStr'].disable()\r\n                this.inputForm.controls['recurrInt'].disable()\r\n            } else {\r\n                this.inputForm.controls['recurrStr'].enable()\r\n                this.inputForm.controls['recurrInt'].enable()\r\n            }\r\n        });\r\n    }\r\n\r\n    onKeyPress(data: KeyboardEvent) {\r\n        return this.globalS.acceptOnlyNumeric(data);\r\n    }\r\n\r\n    showEditModal(index: number) {\r\n        const { recordNumber, personID, name, address1, address2, email, date1, date2, state, notes, recurring } = this.tableData[index];\r\n        \r\n        this.inputForm.patchValue({\r\n            recordNumber,\r\n            personID,\r\n            listOrder: state,\r\n            followUpEmail: email,\r\n            recurring,\r\n            recurrInt: address1 == '' ? null : address1,\r\n            recurrStr: address2 == '' ? null : address2,\r\n            notes,\r\n            reminderDate: date1,\r\n            dueDate: date2,\r\n            staffAlert: name\r\n        });\r\n\r\n        this.addOREdit = 2;\r\n        this.modalOpen = true;\r\n    }\r\n\r\n    save() {\r\n        if (!this.globalS.IsFormValid(this.inputForm))\r\n            return;\r\n        \r\n        const remGroup = this.inputForm.value;\r\n\r\n        if (remGroup.recurring && (!remGroup.recurrInt || !remGroup.recurrStr)) {            \r\n            this.globalS.eToast('Error', 'Recurring Variables needs to be filled');\r\n            return;\r\n        }\r\n        const reminderDate = this.globalS.VALIDATE_AND_FIX_DATETIMEZONE_ANOMALY(remGroup.reminderDate);\r\n        const dueDate = this.globalS.VALIDATE_AND_FIX_DATETIMEZONE_ANOMALY(remGroup.dueDate);\r\n\r\n        const reminder: Dto.Reminders = {\r\n            recordNumber: remGroup.recordNumber,\r\n            personID: this.user.id,\r\n            name: remGroup.staffAlert,\r\n            address1: remGroup.recurring ? remGroup.recurrInt : '',\r\n            address2: remGroup.recurring ? remGroup.recurrStr : '',\r\n            email: remGroup.followUpEmail,\r\n            date1: reminderDate,\r\n            date2: dueDate,\r\n            state: remGroup.listOrder,\r\n            notes: remGroup.notes,\r\n            recurring: remGroup.recurring\r\n        }\r\n        \r\n   \r\n\r\n        if(this.addOREdit == 1){\r\n            this.timeS.postremindersrecipient(reminder)\r\n                .subscribe(data => {\r\n                    this.globalS.sToast('Success', 'Data added');\r\n                    this.search();\r\n                    this.handleCancel();\r\n                });\r\n        }\r\n\r\n        if (this.addOREdit == 2) {\r\n            this.timeS.updateremindersrecipient(reminder)\r\n                .subscribe(data => {\r\n                    this.globalS.sToast('Success', 'Data updated');\r\n                    this.search();\r\n                    this.handleCancel();\r\n                })\r\n        }\r\n\r\n        console.log(reminder);\r\n    }\r\n\r\n    canDeactivate() {\r\n        if (this.inputForm && this.inputForm.dirty) {\r\n            this.modalService.confirm({\r\n                nzTitle: 'Save changes before exiting?',\r\n                nzContent: '',\r\n                nzOkText: 'Yes',\r\n                nzOnOk: () => {\r\n                    this.save();\r\n                },\r\n                nzCancelText: 'No',\r\n                nzOnCancel: () => {\r\n\r\n                }\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    showAddModal() {\r\n        this.modalOpen = true;\r\n        this.addOREdit = 1;\r\n    }\r\n\r\n   \r\n\r\n    delete(index: number) {\r\n        const { recordNumber } = this.tableData[index];\r\n\r\n        this.timeS.deleteremindersrecipient(recordNumber).subscribe(data => {\r\n            this.globalS.sToast('Success', 'Data added');\r\n            this.search();\r\n            this.handleCancel();\r\n        });\r\n    }\r\n\r\n    handleCancel() {\r\n        this.modalOpen = false;\r\n        this.isLoading = false;\r\n        this.inputForm.reset(this.default);\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col>\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Reminder</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n            [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"left\">Alert/Review</th>\r\n                    <th>Reminder Date</th>\r\n                    <th>Due Date</th>\r\n                    <th>Notes</th>\r\n                    <th class=\"action\">Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ data.name  }}</td>\r\n                    <td>{{ data.date1 | date: 'dd/MM/y'}}</td>\r\n                    <td>{{ data.date2 | date: 'dd/MM/y' }}</td>\r\n                    <td>{{ data.notes || '-' }}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this group?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"delete(i)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n<nz-modal [nzStyle]=\"{ top: '20px' }\" [(nzVisible)]=\"modalOpen\" [nzTitle]=\"addOREdit ? 'Add Reminder' : 'Edit Reminder'\"\r\n    (nzOnCancel)=\"handleCancel()\">\r\n    <div [formGroup]=\"inputForm\">\r\n        <div nz-row>\r\n            <nz-form-item>\r\n                <nz-form-label [nzNoColon]=\"true\">Preferences</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Preferences is required!\">\r\n                    <nz-select formControlName=\"staffAlert\" nzAllowClear nzPlaceHolder=\"\"\r\n                        [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let d of alist\" [nzValue]=\"d\" [nzLabel]=\"d\"></nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n        <div nz-row [nzGutter]=\"12\">\r\n            <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                <label for=\"\">Reminder Date</label>\r\n                <nz-date-picker formControlName=\"reminderDate\" [nzFormat]=\"dateFormat\"></nz-date-picker>\r\n            </div>\r\n            <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                <label for=\"\">Due Date</label>\r\n                <nz-date-picker formControlName=\"dueDate\" [nzFormat]=\"dateFormat\"></nz-date-picker>\r\n            </div>\r\n        </div>\r\n        <div nz-row [nzGutter]=\"12\">\r\n            <div nz-col nzSpan=\"5\" class=\"form-group\">\r\n                <label for=\"\">Recurring</label>\r\n                <label style=\"margin: 10px;\" nz-checkbox formControlName=\"recurring\"></label>\r\n            </div>\r\n            <div nz-col nzOffset=\"3\" nzSpan=\"8\" class=\"form-group\">\r\n                <nz-form-item>\r\n                    <nz-form-label [nzNoColon]=\"true\">Recurring Every</nz-form-label>\r\n                    <nz-form-control nzErrorTip=\"Preferences is required!\">\r\n                        <nz-select formControlName=\"recurrInt\" nzAllowClear nzPlaceHolder=\"\"\r\n                            [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let d of dayInt\" [nzValue]=\"d\" [nzLabel]=\"d\"></nz-option>\r\n                        </nz-select>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n            </div>\r\n            <div nz-col nzSpan=\"8\" class=\"form-group\">\r\n                <nz-form-item>\r\n                    <nz-form-label [nzNoColon]=\"true\"></nz-form-label>\r\n                    <nz-form-control nzErrorTip=\"Preferences is required!\">\r\n                        <nz-select formControlName=\"recurrStr\" nzAllowClear nzPlaceHolder=\"\"\r\n                            [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let d of dayStr\" [nzValue]=\"d\" [nzLabel]=\"d\"></nz-option>\r\n                        </nz-select>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n            </div>\r\n        </div>\r\n        <div nz-row [nzGutter]=\"12\">\r\n            <div nz-col nzSpan=\"8\" class=\"form-group\">\r\n                <label for=\"\">List Order</label>\r\n                <input nz-input formControlName=\"listOrder\" />\r\n            </div>\r\n            <div nz-col nzSpan=\"16\" class=\"form-group\">\r\n                <nz-form-item>\r\n                    <nz-form-label [nzNoColon]=\"true\">Follow-up Email</nz-form-label>\r\n                    <nz-form-control nzErrorTip=\"Enter a valid email address!\">\r\n                        <nz-input-group>\r\n                            <input type=\"text\" nz-input formControlName=\"followUpEmail\" />\r\n                        </nz-input-group>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Notes</label>\r\n                <textarea rows=\"4\" nz-input formControlName=\"notes\"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"isLoading\">Save</button>\r\n    </div>\r\n</nz-modal>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef, AfterViewInit } from '@angular/core'\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { GlobalService, StaffService, ShareService, leaveTypes } from '@services/index';\r\n\r\n@Component({\r\n    styles: [`\r\n        nz-tabset{\r\n            margin-top:1rem;\r\n        }\r\n        nz-tabset >>> div > div.ant-tabs-nav-container{\r\n            height: 25px !important;\r\n            font-size: 13px !important;\r\n        }\r\n\r\n        nz-tabset >>> div div.ant-tabs-nav-container div.ant-tabs-nav-wrap div.ant-tabs-nav-scroll div.ant-tabs-nav div div.ant-tabs-tab{\r\n            line-height: 24px;\r\n            height: 25px;\r\n        }\r\n        nz-tabset >>> div div.ant-tabs-nav-container div.ant-tabs-nav-wrap div.ant-tabs-nav-scroll div.ant-tabs-nav div div.ant-tabs-tab.ant-tabs-tab-active{\r\n            background: #717e94;\r\n            color: #fff;\r\n        }\r\n        ul{\r\n            list-style:none;\r\n            float:right;\r\n            margin:0;\r\n        }\r\n        li{\r\n            display: inline-block;\r\n            margin-right: 10px;\r\n            font-size: 12px;\r\n            padding: 5px;\r\n            cursor:pointer;\r\n        }\r\n        li:hover{\r\n            color:#177dff;\r\n        }\r\n        li div{\r\n            text-align: center;\r\n            font-size: 17px;\r\n        }\r\n        .recipient-controls button{\r\n            margin-right:1rem;\r\n        }\r\n        nz-select{\r\n            width:100%;\r\n        }\r\n    `],\r\n    templateUrl: './recipients.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class RecipientsAdmin implements OnInit, AfterViewInit, OnDestroy {\r\n    user: any = null;\r\n    nzSelectedIndex: number = 0;\r\n    isFirstLoad: boolean = false;\r\n\r\n    sample: any;\r\n\r\n    newReferralModal: boolean = false;\r\n    saveModal: boolean = false;\r\n    quoteModal: boolean = false;\r\n    newOtherModal: boolean = false;\r\n\r\n    isLoading: boolean = false;\r\n    current: number = 0;\r\n\r\n    selectedValue: any;\r\n\r\n    listChange(event: any) {\r\n\r\n        if (event == null) {\r\n            this.user = null;\r\n            this.isFirstLoad = false;\r\n            this.sharedS.emitChange(this.user);\r\n            return;\r\n        }\r\n\r\n        if (!this.isFirstLoad) {\r\n            this.view(0);\r\n            this.isFirstLoad = true;\r\n        }\r\n        \r\n        // this.user = {\r\n        //     agencyDefinedGroup: \"ARUNDEL\",\r\n        //     code: \"2CDC STEPH\",\r\n        //     id: \"T0100005506\",\r\n        //     sysmgr: true,\r\n        //     view: \"recipient\"\r\n        // }\r\n\r\n        // this.user = {\r\n        //     code: event.accountNo,\r\n        //     id: event.uniqueID,\r\n        //     view: event.view,\r\n        //     agencyDefinedGroup: event.agencyDefinedGroup,\r\n        //     sysmgr: event.sysmgr\r\n        // }\r\n\r\n        this.user = {\r\n            code: event.accountNo,\r\n            id: event.uniqueID,\r\n            view: event.view,\r\n            agencyDefinedGroup: event.agencyDefinedGroup,\r\n            sysmgr: event.sysmgr\r\n        }\r\n\r\n        this.sharedS.emitChange(this.user);\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    change(data: any) {\r\n        let user = {};\r\n        if (data == 'ABBERTON B') {\r\n            user = {\r\n                code: \"ABBERTON B\",\r\n                id: \"T0100005189\",\r\n                view: \"recipient\",\r\n                agencyDefinedGroup: \"ARUNDEL\",\r\n                sysmgr: true\r\n            }\r\n        }\r\n        \r\n        if (data == '*****AAAZ T'){\r\n            user = {\r\n                code: \"*****AAAZ T\",\r\n                id: \"T0100005581\",\r\n                view: \"recipient\",\r\n                agencyDefinedGroup: \"ASHMORE\",\r\n                sysmgr: true\r\n            }\r\n        }\r\n\r\n        if (data == '3CDC STEPH') {\r\n            user = {\r\n                code: \"3CDC STEPH\",\r\n                id: \"T0100005508\",\r\n                view: \"recipient\",\r\n                agencyDefinedGroup: \"ARUNDEL\",\r\n                sysmgr: true\r\n            }\r\n        }\r\n        if (!this.isFirstLoad) {\r\n            this.view(0);\r\n            this.isFirstLoad = true;\r\n        }\r\n        this.sharedS.emitChange(user);\r\n    }\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private activeRoute: ActivatedRoute,\r\n        private sharedS: ShareService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        \r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        \r\n    }\r\n\r\n    view(index: number) {\r\n        this.nzSelectedIndex = index;\r\n\r\n        if (index == 0) {\r\n            this.router.navigate(['/admin/recipient/personal'])\r\n        }\r\n        if (index == 1) {\r\n            this.router.navigate(['/admin/recipient/contacts']);\r\n        }\r\n        if (index == 2) {\r\n            this.router.navigate(['/admin/recipient/intake'])\r\n        }\r\n        if (index == 3) {\r\n            this.router.navigate(['/admin/recipient/reminders'])\r\n        }\r\n        if (index == 4) {\r\n            this.router.navigate(['/admin/recipient/opnote'])\r\n        }\r\n        if (index == 5) {\r\n            this.router.navigate(['/admin/recipient/casenote'])\r\n        }\r\n        if (index == 6) {\r\n            this.router.navigate(['/admin/recipient/incidents'])\r\n        }\r\n        if (index == 7) {\r\n            this.router.navigate(['/admin/recipient/perm-roster'])\r\n        }\r\n        if (index == 8) {\r\n            this.router.navigate(['/admin/recipient/history'])\r\n        }\r\n        if (index == 9) {\r\n            this.router.navigate(['/admin/recipient/insurance-pension'])\r\n        }\r\n        if (index == 10) {\r\n            this.router.navigate(['/admin/recipient/quotes'])\r\n        }\r\n    }\r\n\r\n    handleCancel() {\r\n        this.newReferralModal = false;\r\n        this.saveModal = false;\r\n        this.quoteModal = false;\r\n        this.newOtherModal = false;\r\n    }\r\n\r\n    handleOk() {\r\n        \r\n    }\r\n\r\n    openReferInModal: any;\r\n    profileData: any;\r\n    \r\n    openReferModal(user: any) {\r\n        console.log(user);\r\n\r\n        this.sharedS.emitOnSearchListNext(user.code);        \r\n        this.profileData = user;\r\n        this.openReferInModal = {};\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col nzSpan=\"24\" class=\"recipient-controls\">\r\n        <button class=\"botton success\" (click)=\"newReferralModal = !newReferralModal\"><i nz-icon nzType=\"plus\" nzTheme=\"outline\"></i> New Referral</button>\r\n        <button class=\"botton sea\" (click)=\"newOtherModal = true\"><i nz-icon nzType=\"check-circle\" nzTheme=\"outline\"></i> New Other</button>\r\n        <button class=\"botton warn\" (click)=\"quoteModal = true\"><i nz-icon nzType=\"form\" nzTheme=\"outline\"></i> Quote</button>\r\n        <button class=\"botton other\" (click)=\"saveModal = true\"><i nz-icon nzType=\"cloud-upload\" nzTheme=\"outline\"></i> Save</button>\r\n    </div>\r\n</div>\r\n<div nz-row>\r\n    \r\n    <div nz-col nzSpan=\"6\" style=\"margin-top: 10px;\">\r\n        <app-search-list [view]=\"0\" [(ngModel)]=\"sample\" (ngModelChange)=\"listChange($event)\"></app-search-list>\r\n    </div>\r\n\r\n    <div nz-col nzSpan=\"18\">\r\n        <ul>\r\n            <li><div><i class=\"fas fa-file\"></i></div>Refer In</li>\r\n            <li><div><i class=\"fas fa-file-alt\"></i></div>Refer On</li>\r\n            <li><div><i class=\"fas fa-hand-paper\"></i></div>Not Proceed</li>\r\n            <li><div><i class=\"fas fa-comment-dots\"></i></div>Assess</li>\r\n            <li><div><i class=\"fas fa-file-invoice\"></i></div>Admit</li>\r\n            <li><div><i class=\"fas fa-hourglass-half\"></i></div>Wait List</li>\r\n            <li><div><i class=\"fas fa-user-check\"></i></div>Discharge</li>\r\n            <li><div><i class=\"fas fa-folder-minus\"></i></div>Suspend</li>\r\n            <li><div><i class=\"fas fa-folder-plus\"></i></div>Reinstate</li>\r\n            <li><div><i class=\"fas fa-procedures\"></i></div>Decease</li>\r\n            <li><div><i class=\"fas fa-address-book\"></i></div>Admin</li>\r\n            <li><div><i class=\"fas fa-th-list\"></i></div>Item</li>\r\n        </ul>\r\n    </div>   \r\n\r\n    <!-- <select [(ngModel)]=\"user\" (ngModelChange)=\"change($event)\">\r\n        <option value=\"\"></option>\r\n        <option value=\"ABBERTON B\">ABBERTON B</option>\r\n        <option value=\"*****AAAZ T\">*****AAAZ T</option>\r\n        <option value=\"3CDC STEPH\">3CDC STEPH</option>\r\n    </select> -->\r\n\r\n    <div nz-col nzSpan=\"24\">\r\n        <nz-tabset *ngIf=\"user\" [nzTabPosition]=\"'top'\" [nzType]=\"'card'\">\r\n            <nz-tab nzTitle=\"Personal\" (nzClick)=\"view(0)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Contacts\" (nzClick)=\"view(1)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Intake Details\" (nzClick)=\"view(2)\"></nz-tab>\r\n            <nz-tab nzTitle=\"Reminders\" (nzClick)=\"view(3)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"OP Notes\" (nzClick)=\"view(4)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Case Notes\" (nzClick)=\"view(5)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Incidents\" (nzClick)=\"view(6)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Permanent Roster\" (nzClick)=\"view(7)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"History\" (nzClick)=\"view(8)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Insurance & Pension\" (nzClick)=\"view(9)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Quotes\" (nzClick)=\"view(10)\"> </nz-tab>\r\n        </nz-tabset>\r\n    </div>\r\n\r\n    <nz-empty *ngIf=\"user == null\" style=\"margin-top:8rem\"\r\n        nzNotFoundImage=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\" [nzNotFoundContent]=\"contentTpl\">\r\n        <ng-template #contentTpl>\r\n            <p>Select Recipient</p>\r\n        </ng-template>\r\n    </nz-empty>\r\n    \r\n    <div nz-col nzSpan=\"24\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<app-add-referral [open]=\"newReferralModal\" [type]=\"'referral'\" (openRefer)=\"openReferModal($event)\"></app-add-referral>\r\n\r\n<app-refer-in [open]=\"openReferInModal\"></app-refer-in>\r\n<!-- \r\n\r\n<nz-modal [(nzVisible)]=\"newOtherModal\" nzTitle=\"Add new referral\" (nzOnCancel)=\"handleCancel()\"\r\n    (nzOnOk)=\"handleOk()\">\r\n    <div nz-row>\r\n        asda\r\n    </div>\r\n\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" [nzLoading]=\"isLoading\">Save</button>\r\n    </div>\r\n</nz-modal>\r\n\r\n<nz-modal [(nzVisible)]=\"quoteModal\" nzTitle=\"Add new referral\" (nzOnCancel)=\"handleCancel()\"\r\n    (nzOnOk)=\"handleOk()\">\r\n    <div nz-row>\r\n        asda\r\n    </div>\r\n\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" [nzLoading]=\"isLoading\">Save</button>\r\n    </div>\r\n</nz-modal>\r\n\r\n<nz-modal [(nzVisible)]=\"saveModal\" nzTitle=\"Add new referral\" (nzOnCancel)=\"handleCancel()\"\r\n    (nzOnOk)=\"handleOk()\">\r\n    <div nz-row>\r\n        asda\r\n    </div>\r\n\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" [nzLoading]=\"isLoading\">Save</button>\r\n    </div>\r\n</nz-modal>  -->","import { Component, OnInit, OnDestroy, Input, AfterViewInit } from '@angular/core'\r\nimport { FormBuilder, FormGroup, Validators, FormControl,FormArray, } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders, HttpParams,  } from '@angular/common/http';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport {  ViewEncapsulation } from '@angular/core';\r\nimport { ListService, states } from '@services/index';\r\nimport * as FileSaver from 'file-saver';\r\nimport format from 'date-fns/format';\r\nimport parseISO from 'date-fns/parseISO'\r\nimport { EventInputTransformer } from '@fullcalendar/angular';\r\n\r\n\r\nconst inputFormDefault = {\r\n    statesArr: [[]],\r\n    allState: [true],\r\n\r\n    branchesArr: [[]],\r\n    allBranches: [true],\r\n\r\n    serviceRegionsArr: [[]],\r\n    allServiceRegion:[true],\r\n\r\n    managersArr: [[]],\r\n    allManager: [true],\r\n\r\n    programsArr: [[]],\r\n    allPrograms: [true],\r\n\r\n    fundersArr: [[]],\r\n    allFunders: [true],\r\n\r\n    outletsArr: [[]],\r\n    allOutlets: [true],\r\n\r\n    svcprovidersArr: [[]],\r\n    allSvcProviders: [true],\r\n\r\n    staffgroupsArr: [[]],\r\n    allGroups: [true],\r\n\r\n    staffArr: [[]],\r\n    allStaff: [true],\r\n\r\n    \r\n\r\n    \r\n    \r\n\r\n    \r\n    \r\n    \r\n\r\n\r\n\r\n}\r\n\r\n@Component({\r\n    host: {\r\n        '[style.display]': 'flex',\r\n        '[style.flex-direction]': 'column',\r\n        '[style.overflow]': 'hidden'\r\n      },\r\n    styles: [`\r\n        button {\r\n            width: 200pt !important;\r\n            text-align: left !important\r\n        }\r\n        \r\n        .form-group label{\r\n            font-weight: 300;\r\n        }\r\n        nz-select{\r\n            width:100%;\r\n        }\r\n        label.checks{\r\n            margin-top: 4px;\r\n        }\r\n        nz-date-picker{\r\n            margin:5pt;\r\n        }\r\n    `],\r\n    templateUrl: './reports.html'\r\n})\r\n\r\n\r\nexport class ReportsAdmin implements OnInit, OnDestroy, AfterViewInit {\r\n    \r\n    validateForm!: FormGroup;\r\n    \r\n    isVisibleTop = false;\r\n    \r\n    checked = true;\r\n    State = true;\r\n    Branches = true;\r\n    Area = true;\r\n    Managers = true;\r\n    Funders = true;\r\n    ProviderID = true;\r\n    listOfControl: Array<{ id: number; controlInstance: string }> = [];\r\n    manager: String[];\r\n    form: FormGroup;                      \r\n    \r\n    statesArr: Array<any> = states;\r\n    branchesArr: Array<any> = [];\r\n    serviceRegionsArr: Array<any> = [];\r\n    managersArr: Array<any> = [];\r\n    fundersArr: Array<any> = [];\r\n    fundingRegionsArr: Array<any> = [];    \r\n    programsArr: Array<any> = [];\r\n    outletsArr: Array<any> = [];\r\n    svcprovidersArr: Array<any> = [];    \r\n    staffgroupsArr: Array<any> = []; \r\n    staffArr: Array<any> = [];\r\n    \r\n    btnid:string;\r\n    id:string ;\r\n    tryDoctype: any;\r\n    pdfTitle: string;\r\n    s_BranchSQL:string;\r\n    s_CoordinatorSQL:string;\r\n    s_ProgramSQL:string;\r\n    s_CategorySQL:string;\r\n    s_DateSQL:string;    \r\n    s_StfGroupSQL:string;\r\n    s_StfSQL:string;\r\n    dateFormat: string = 'yyyy-MM-dd' \r\n    enddate :Date;\r\n    startdate :Date;\r\n //   enddate: string ;\r\n //   startdate: string ;\r\n    //format(new Date(), 'yyyy-MM-dd');\r\n    dropDownArray: any = {\r\n        branches: Array,\r\n        serviceRegions: Array,\r\n        managers: Array,\r\n        programs:Array,\r\n        \r\n    }\r\n\r\n    inputForm: FormGroup;   \r\n    drawerVisible: boolean = false;\r\n    // END - MARK\r\n\r\n    listOfOption: Array<{ label: string; value: string }> = [];\r\n    multipleValue = ['a10', 'c12'];\r\n    \r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private listS: ListService,\r\n        private http: HttpClient,\r\n        private fb: FormBuilder,\r\n        private sanitizer: DomSanitizer\r\n    ) {\r\n       \r\n    }\r\n    ngOnInit(): void {\r\n        const children: Array<{ label: string; value: string }> = [];\r\n\r\n        for (let i = 10; i < 36; i++) {\r\n            children.push({ label: i.toString(36) + i, value: i.toString(36) + i });\r\n            \r\n        }\r\n\r\n        this.listOfOption = children;       \r\n        this.inputForm = this.fb.group(inputFormDefault);\r\n        \r\n\r\n        this.inputForm.get('allPrograms').valueChanges.subscribe(data => {\r\n            this.inputForm.patchValue({\r\n                programsArr: []\r\n            });\r\n        });\r\n        \r\n        /*  \r\n        this.inputForm.get('allOutlets').valueChanges.subscribe(data => {\r\n            this.inputForm.patchValue({\r\n                outletsArr: []\r\n            });\r\n        });\r\n        */\r\n\r\n        this.inputForm.get('allFunders').valueChanges.subscribe(data => {\r\n            this.inputForm.patchValue({\r\n                fundersArr: []\r\n            });\r\n        });\r\n        \r\n        this.inputForm.get('allSvcProviders').valueChanges.subscribe(data => {\r\n            this.inputForm.patchValue({\r\n                svcprovidersArr: []\r\n            });\r\n        });\r\n        \r\n\r\n\r\n\r\n        this.inputForm.get('allState').valueChanges.subscribe(data => {\r\n            this.inputForm.patchValue({\r\n                statesArr: []\r\n            });\r\n        });\r\n\r\n        this.inputForm.get('allBranches').valueChanges.subscribe(data => {\r\n            this.inputForm.patchValue({\r\n                branchesArr: []\r\n            });\r\n        });\r\n\r\n        this.inputForm.get('allServiceRegion').valueChanges.subscribe(data => {\r\n            this.inputForm.patchValue({\r\n                serviceRegionsArr: []\r\n            });\r\n        });\r\n\r\n        this.inputForm.get('allManager').valueChanges.subscribe(data => {\r\n            this.inputForm.patchValue({\r\n                managersArr: []\r\n            });\r\n        });\r\n        this.inputForm.get('allGroups').valueChanges.subscribe(data => {\r\n            this.inputForm.patchValue({\r\n                staffgroupsArr: []\r\n            });\r\n        }); \r\n        this.inputForm.get('allStaff').valueChanges.subscribe(data => {\r\n            this.inputForm.patchValue({\r\n                staffArr: []\r\n            });\r\n        });\r\n\r\n    }//ngOninit\r\n\r\n /*   hello(data: any){\r\n        console.log(data)\r\n        console.log(this.inputForm.value.branchesArr)\r\n    }\r\n*/\r\n    ngAfterViewInit(): void {\r\n\r\n        this.listS.getreportcriterialist({\r\n            listType: 'FUNDERS',\r\n            includeInactive: false\r\n        }).subscribe(x => this.fundersArr = x);\r\n\r\n        this.listS.getreportcriterialist({\r\n            listType: 'SERVICE PROVIDERS',\r\n            includeInactive: false\r\n        }).subscribe(x => this.svcprovidersArr = x);\r\n\r\n        this.listS.getcstdaoutlets().subscribe(x => this.outletsArr = x);\r\n\r\n        this.listS.getreportcriterialist({\r\n            listType: 'PROGRAMS',\r\n            includeInactive: false\r\n        }).subscribe(x => this.programsArr = x);\r\n\r\n        this.listS.getreportcriterialist({\r\n            listType: 'BRANCHES',\r\n            includeInactive: false\r\n        }).subscribe(x => this.branchesArr = x);\r\n\r\n\r\n        this.listS.getserviceregion().subscribe(x => this.serviceRegionsArr = x )\r\n\r\n        this.listS.getreportcriterialist({\r\n            listType: 'MANAGERS',\r\n            includeInactive: false\r\n        }).subscribe(x => this.managersArr = x)\r\n\r\n        this.listS.getreportcriterialist({\r\n            listType: 'FUNDERS',\r\n            includeInactive: false\r\n        }).subscribe(x => this.fundersArr = x)\r\n   \r\n        this.listS.getreportcriterialist({\r\n            listType: 'FUNDINGREGIONS',\r\n            includeInactive: false\r\n        }).subscribe(x => this.fundingRegionsArr = x)\r\n        \r\n        this.listS.getliststaffgroup().subscribe(x => this.staffgroupsArr = x)\r\n       \r\n\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        console.log('on destroy');\r\n    }\r\n    showModal(){                             \r\n         this.isVisibleTop = true;\r\n                              \r\n     }\r\n     onChange(result: Date): void {\r\n        console.log('onChange: ', result);}\r\n    \r\n    PrintID(e){\r\n        e = e || window.event;\r\n        e = e.target || e.srcElement; \r\n        this.btnid = e.id\r\n        return this.btnid    \r\n     //  this.showModal(e.id);\r\n        \r\n    } \r\n\r\n\r\n    handleOkTop() {\r\n    //    console.log(this.inputForm.value)\r\n    //    console.log(this.date)\r\n    //    console.log(this.startdate)        \r\n    //    console.log(this.enddate)        \r\n        this.isVisibleTop = false;\r\n        \r\n         \r\n    this.reportRender(this.btnid);\r\n    this.tryDoctype = \"\"\r\n     //   this.QueryFormatter(this.btnid);\r\n    ///    this.goJSReport();\r\n\r\n    }\r\n\r\n    handleCancelTop(): void {\r\n        this.inputForm.reset(inputFormDefault);\r\n        this.isVisibleTop = false;\r\n        this.drawerVisible = false;\r\n    }       \r\n        \r\n    reportRender(idbtn){\r\n      console.log(idbtn)\r\n        var s_States = this.inputForm.value.statesArr;\r\n        var s_Branches = this.inputForm.value.branchesArr;\r\n        var s_Managers = this.inputForm.value.managersArr;\r\n        var s_ServiceRegions = this.inputForm.value.serviceRegionsArr;\r\n        var s_Programs = this.inputForm.value.programsArr;\r\n        var s_StfGroup = this.inputForm.value.staffgroupsArr; \r\n            if (this.startdate != null )\r\n            {var strdate = format(this.startdate,'yyyy-MM-dd')}else{\r\n                strdate = \"2020-07-01\"\r\n            } \r\n            if (this.enddate != null )\r\n            {var endate = format(this.enddate,'yyyy-MM-dd')}else{\r\n                endate = \"2020-07-31\"\r\n            }      \r\n         \r\n        \r\n     //   alert(strdate)//manager,branch,stfgroup\r\n     console.log(strdate)\r\n        switch(idbtn){\r\n            case 'btn-refferallist' :\r\n                this.Refeeral_list(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States);\r\n                break;\r\n            case 'btn-activepackagelist' :                \r\n                this.ActivePackage_list(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States,strdate,endate);                  \r\n                 break;\r\n            case 'btn-recipientroster':\r\n                this.RecipientRoster(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States);\r\n                break;\r\n            case 'btn-suspendedrecipient':\r\n                this.SuspendedRecipient(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States,strdate,endate);\r\n                break;\r\n            case 'btn-vouchersummary':\r\n                this.VoucherSummary(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States,strdate,endate);\r\n                break;\r\n            case 'btn-packageusage':\r\n                this.PackageUsage(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States);\r\n                break;\r\n            case 'btn-timelength':\r\n                this.RecipientTimeLength(strdate,endate);\r\n                break;\r\n            case 'btn-unallocatedbookings':\r\n                this.UnallocatedBookings(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States,strdate,endate);\r\n                break;\r\n            case 'btn-transportsummary':\r\n                this.TransportSummary(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States,strdate,endate);\r\n                break;\r\n            case 'btn-refferalduringperiod':\r\n                this.RefferalsduringPeriod(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States,strdate,endate);\r\n                break;\r\n            case 'btn-recipientMasterroster':\r\n                this.RecipientMasterRoster(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States);\r\n                break;\r\n            case 'btn-activerecipient':\r\n                this.ActiveRecipientList(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States);\r\n                break;\r\n            case 'btn-inactiverecipient':\r\n                this.InActiveRecipientList(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States);\r\n                break;\r\n            case 'btn-adminduringperiod':\r\n                this.AdmissiionDuringPeriod(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States,strdate,endate);\r\n                break;\r\n            case 'btn-dischargeduringperiod':\r\n                this.DischargeDuringPeriod(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States,strdate,endate);\r\n                break;\r\n            case 'btn-absentclient':\r\n                this.AbsentClientStatus(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States,strdate,endate);\r\n                break;\r\n            case 'btn-careerlist':\r\n                this.CareerList(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States);\r\n                break;\r\n            case 'btn-onlybillingclients':\r\n                this.BillingCliens(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States);\r\n                break;\r\n            case 'btn-associatelist':\r\n                this.Associate_list(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States);\r\n                break;\r\n            case 'btn-unserviced':\r\n                this.UnServicedRecipient(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States,strdate,endate);\r\n                break;\r\n            case 'btn-Activestaff':\r\n                this.ActiveStaffListing(s_Managers,s_Branches,s_StfGroup);\r\n                break;\r\n            case 'btn-ActiveBrokerage':\r\n                this.ActiveBrokerage_Contractor(s_Managers,s_Branches,s_StfGroup);\r\n                break;\r\n            case 'btn-Activevolunteers':\r\n                this.ActiveVolunters(s_Managers,s_Branches,s_StfGroup);\r\n                break;\r\n            case 'btn-InactiveBrokerage':\r\n                this.InActiveBrokerage_Contractor(s_Managers,s_Branches,s_StfGroup);\r\n                break;\r\n            case 'btn-InactiveVolunteer':\r\n                this.InActiveVolunteers(s_Managers,s_Branches,s_StfGroup);\r\n                break;\r\n            case 'btn-Inactivestaff':\r\n                this.InActiveStaffListing(s_Managers,s_Branches,s_StfGroup);\r\n                break;\r\n            case 'btn-Userpermissions':\r\n                this.StaffPermissions(s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States);\r\n                break;\r\n            default: //\r\n                alert(\"Yet to do\")\r\n            \r\n        }\r\n    \r\n    } \r\n        //  sequence    s_Branches, s_Managers, s_ServiceRegions, s_Programs,s_States\r\n    Refeeral_list(branch,manager,region,program,state){\r\n        \r\n        \r\n        var fQuery = \"SELECT DISTINCT R.UniqueID, R.AccountNo, R.AgencyIdReportingCode, R.[Surname/Organisation], R.FirstName, R.Branch, R.RECIPIENT_COORDINATOR, R.AgencyDefinedGroup, R.ONIRating, R.AdmissionDate As [Activation Date], R.DischargeDate As [DeActivation Date], HumanResourceTypes.Address2, RecipientPrograms.ProgramStatus, CASE WHEN RecipientPrograms.Program <> '' THEN RecipientPrograms.Program + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Quantity <> '' THEN RecipientPrograms.Quantity + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.ItemUnit <> '' THEN RecipientPrograms.ItemUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.PerUnit <> '' THEN RecipientPrograms.PerUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.TimeUnit <> '' THEN RecipientPrograms.TimeUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Period <> '' THEN RecipientPrograms.Period + ' ' ELSE ' ' END AS FundingDetails, UPPER([Surname/Organisation]) + ', ' + CASE WHEN FirstName <> '' THEN FirstName ELSE ' ' END AS RecipientName, CASE WHEN N1.Address <> '' THEN  N1.Address ELSE N2.Address END  AS ADDRESS, CASE WHEN P1.Contact <> '' THEN  P1.Contact ELSE P2.Contact END AS CONTACT, (SELECT TOP 1 Date FROM Roster WHERE Type IN (2, 3, 7, 8, 9, 10, 11, 12) AND [Client Code] = R.AccountNo ORDER BY DATE DESC) AS LastDate FROM Recipients R LEFT JOIN RecipientPrograms ON RecipientPrograms.PersonID = R.UniqueID LEFT JOIN HumanResourceTypes ON HumanResourceTypes.Name = RecipientPrograms.Program LEFT JOIN ServiceOverview ON ServiceOverview.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +  CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress = 1)  AS N1 ON N1.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +  CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress <> 1)  AS N2 ON N2.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone = 1)  AS P1 ON P1.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone <> 1)  AS P2 ON P2.PersonID = R.UniqueID WHERE R.[AccountNo] > '!MULTIPLE'   AND (R.DischargeDate is NULL)\"\r\n        var lblcriteria;\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL}\r\n            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n            \r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL}\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        } \r\n\r\n        \r\n        if (branch != \"\"){ \r\n            lblcriteria = \"Branches:\" + branch.join(\",\") + \"; \"        } \r\n            else{lblcriteria = \" All Branches \"}\r\n        \r\n         if (manager != \"\"){\r\n            lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n            else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n        \r\n        \r\n        if (region != \"\"){ \r\n            lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n            else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n        \r\n       \r\n        if (program != \"\"){ \r\n            lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n            else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n        \r\n                                                            \r\n        fQuery = fQuery + \" AND (RecipientPrograms.ProgramStatus = 'REFERRAL') ORDER BY R.[Surname/Organisation], R.FirstName\"\r\n        \r\n        /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n   // console.log(fQuery)\r\n   // console.log(lblcriteria)\r\n\r\n   \r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"zrBLd931LZblcnNH\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         //   \"sql\": \"SELECT DISTINCT R.UniqueID, R.AccountNo, R.AgencyIdReportingCode, R.[Surname/Organisation], R.FirstName, R.Branch, R.RECIPIENT_COORDINATOR, R.AgencyDefinedGroup, R.ONIRating, R.AdmissionDate As [Activation Date], R.DischargeDate As [DeActivation Date], HumanResourceTypes.Address2, RecipientPrograms.ProgramStatus, CASE WHEN RecipientPrograms.Program <> '' THEN RecipientPrograms.Program + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Quantity <> '' THEN RecipientPrograms.Quantity + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.ItemUnit <> '' THEN RecipientPrograms.ItemUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.PerUnit <> '' THEN RecipientPrograms.PerUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.TimeUnit <> '' THEN RecipientPrograms.TimeUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Period <> '' THEN RecipientPrograms.Period + ' ' ELSE ' ' END AS FundingDetails, UPPER([Surname/Organisation]) + ', ' + CASE WHEN FirstName <> '' THEN FirstName ELSE ' ' END AS RecipientName, CASE WHEN N1.Address <> '' THEN  N1.Address ELSE N2.Address END  AS ADDRESS, CASE WHEN P1.Contact <> '' THEN  P1.Contact ELSE P2.Contact END AS CONTACT, (SELECT TOP 1 Date FROM Roster WHERE Type IN (2, 3, 7, 8, 9, 10, 11, 12) AND [Client Code] = R.AccountNo ORDER BY DATE DESC) AS LastDate FROM Recipients R LEFT JOIN RecipientPrograms ON RecipientPrograms.PersonID = R.UniqueID LEFT JOIN HumanResourceTypes ON HumanResourceTypes.Name = RecipientPrograms.Program LEFT JOIN ServiceOverview ON ServiceOverview.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +  CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress = 1)  AS N1 ON N1.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +  CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress <> 1)  AS N2 ON N2.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone = 1)  AS P1 ON P1.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone <> 1)  AS P2 ON P2.PersonID = R.UniqueID WHERE R.[AccountNo] > '!MULTIPLE'   AND (R.DischargeDate is NULL)  AND  (RecipientPrograms.ProgramStatus = 'REFERRAL')  ORDER BY R.ONIRating, R.[Surname/Organisation]\"\r\n            \"sql\":fQuery,\r\n            \"Criteria\" :  lblcriteria\r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n      \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n\r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n        .subscribe((blob: any) => {\r\n            console.log(blob);\r\n            \r\n            let _blob: Blob = blob;\r\n           \r\n            let fileURL = URL.createObjectURL(_blob);\r\n            this.pdfTitle = \"Reports.pdf\"\r\n            this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        }, err => {\r\n            console.log(err);\r\n        });    this.drawerVisible = true;     \r\n    }  \r\n\r\n    ActivePackage_list(branch,manager,region,program,state,startdate,enddate){\r\n        \r\n        \r\n        var fQuery = \"SELECT [CLIENT CODE], PROGRAM, H.[Type] AS [FUNDING SOURCE], MIN(CASE WHEN MINORGROUP = 'ADMISSION' THEN [DATE] END)AS FIRST_ADMISSION,MIN(CASE WHEN MINORGROUP = 'DISCHARGE' THEN [DATE] END) AS FIRST_DISCHARGE  FROM HumanResourceTypes, ROSTER R INNER JOIN ITEMTYPES I ON R.[SERVICE TYPE] = I.TITLE AND MINORGROUP IN ('ADMISSION','DISCHARGE')  INNER JOIN HumanResourceTypes H on R.Program = H.[Name] AND H.[Group] = 'Programs'  WHERE R.[TYPE] = 7 AND R.[DATE] >= '2010/01/01' GROUP BY [CLIENT CODE], PROGRAM, h.[Type]  HAVING MIN(CASE WHEN MINORGROUP = 'ADMISSION'  \"\r\n        //Condtion to be added on dynamic input   \r\n        //HAVING MIN(CASE WHEN MINORGROUP = 'ADMISSION' THEN [DATE] END) <= '2020-07-01'  AND MIN(CASE WHEN MINORGROUP = 'DISCHARGE' THEN [DATE] END) >'2020-07-31' \r\n        \r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        } \r\n        //'2013/04/18'  '2016/10/05'\r\n        if (startdate != \"\" ||enddate != \"\"){\r\n            this.s_DateSQL = \" THEN [DATE] END) <=  '\" +startdate + (\"'AND MIN(CASE WHEN MINORGROUP = 'DISCHARGE' THEN [DATE] END) >'\") + enddate  +  \"'\";\r\n            if (this.s_DateSQL != \"\"){ fQuery = fQuery + \"  \" + this.s_DateSQL};            \r\n        }\r\n        if (startdate != \"\"){ \r\n           var lblcriteria = \" Date Between \" +startdate  + \" and \"+ enddate +\"; \"}\r\n            else{lblcriteria =  \" All Dated \"}\r\n\r\n        if (branch != \"\"){ \r\n            lblcriteria =lblcriteria + \" Branches:\" + branch.join(\",\") + \"; \"        } \r\n            else{lblcriteria =lblcriteria + \" All Branches \"}\r\n        \r\n         if (manager != \"\"){\r\n            lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n            else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n        \r\n        \r\n        if (region != \"\"){ \r\n            lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n            else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n        \r\n       \r\n        if (program != \"\"){ \r\n            lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n            else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n                                                            \r\n     //   fQuery = fQuery + \" AND (RecipientPrograms.ProgramStatus = 'REFERRAL') ORDER BY R.[Surname/Organisation], R.FirstName\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n    \r\n  //  console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"Uer8Y39DEBqdWvvJ\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\": lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n      \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n\r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n        .subscribe((blob: any) => {\r\n            console.log(blob);\r\n            \r\n            let _blob: Blob = blob;\r\n           \r\n            let fileURL = URL.createObjectURL(_blob);\r\n            this.pdfTitle = \"Reports.pdf\"\r\n            this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        }, err => {\r\n            console.log(err);\r\n        });        \r\n    } \r\n\r\n    RecipientRoster(branch,manager,region,program,state){\r\n        \r\n        \r\n        var fQuery = \"SELECT [Roster].[Date], [Roster].[MonthNo], [Roster].[DayNo], [Roster].[BlockNo], [Roster].[Program], [Roster].[Client Code], [Roster].[Service Type], [Roster].[Anal], [Roster].[Service Description], [Roster].[Type], [Roster].[Notes], [Roster].[ShiftName], [Roster].[ServiceSetting], [Roster].[Carer Code], [Roster].[Start Time], [Roster].[Duration], [Roster].[Duration] / 12 As [DecimalDuration],  [Roster].[CostQty], CASE WHEN [Roster].[Type] = 9 THEN 0 ELSE CostQty END AS PayQty, CASE WHEN [Roster].[Type] <> 9 THEN 0 ELSE CostQty END AS AllowanceQty, [Roster].[Unit Pay Rate], [Roster].[Unit Pay Rate] * [Roster].[CostQty] As [LineCost], [Roster].[BillQty], [Roster].[Unit Bill Rate], [Roster].[Unit Bill Rate] * [Roster].[BillQty] As [LineBill], [Roster].[Yearno]  FROM Roster  INNER JOIN Recipients ON [CLient Code] = [Accountno]  INNER JOIN STAFF ON STAFF.ACCOUNTNO = [CARER CODE]  WHERE ([Client Code] <> '!INTERNAL' AND [Client Code] <> '!MULTIPLE') AND Date BETWEEN '2014/09/10' AND '2014/09/10' \"\r\n        //Condtion to be added on dynamic input   \r\n        //HAVING MIN(CASE WHEN MINORGROUP = 'ADMISSION' THEN [DATE] END) <= '2020-07-01'  AND MIN(CASE WHEN MINORGROUP = 'DISCHARGE' THEN [DATE] END) >'2020-07-31' \r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (Roster.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        } \r\n\r\n        if (branch != \"\"){ \r\n            var lblcriteria = \"Branches:\" + branch.join(\",\") + \"; \"} \r\n             else{lblcriteria = \" All Branches \"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (region != \"\"){ \r\n             lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n         \r\n        \r\n         if (program != \"\"){ \r\n             lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n                                                            \r\n        fQuery = fQuery + \"ORDER BY [Client Code], Date, [Start Time] \"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n   // console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"2orGpoorz20XztFV\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria\r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n      \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n\r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n        .subscribe((blob: any) => {\r\n            console.log(blob);\r\n            \r\n            let _blob: Blob = blob;\r\n           \r\n            let fileURL = URL.createObjectURL(_blob);\r\n            this.pdfTitle = \"Reports.pdf\"\r\n            this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        }, err => {\r\n            console.log(err);\r\n        });        \r\n    } \r\n\r\n    SuspendedRecipient(branch,manager,region,program,state,startdate,enddate){\r\n        \r\n        \r\n        var fQuery = \"SELECT DISTINCT R.UniqueID, R.AccountNo, R.AgencyIdReportingCode, R.[Surname/Organisation], R.FirstName, R.Branch, R.RECIPIENT_COORDINATOR, R.AgencyDefinedGroup, R.ONIRating, R.AdmissionDate As [Activation Date], R.DischargeDate As [DeActivation Date], HumanResourceTypes.Address2, RecipientPrograms.ProgramStatus, CASE WHEN RecipientPrograms.Program <> '' THEN RecipientPrograms.Program + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Quantity <> '' THEN RecipientPrograms.Quantity + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.ItemUnit <> '' THEN RecipientPrograms.ItemUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.PerUnit <> '' THEN RecipientPrograms.PerUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.TimeUnit <> '' THEN RecipientPrograms.TimeUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Period <> '' THEN RecipientPrograms.Period + ' ' ELSE ' ' END AS FundingDetails, UPPER([Surname/Organisation]) + ', ' + CASE WHEN FirstName <> '' THEN FirstName ELSE ' ' END AS RecipientName, CASE WHEN N1.Address <> '' THEN  N1.Address ELSE N2.Address END  AS ADDRESS, CASE WHEN P1.Contact <> '' THEN  P1.Contact ELSE P2.Contact END AS CONTACT, (SELECT TOP 1 Date FROM Roster WHERE Type IN (2, 3, 7, 8, 9, 10, 11, 12) AND [Client Code] = R.AccountNo ORDER BY DATE DESC) AS LastDate FROM Recipients R LEFT JOIN RecipientPrograms ON RecipientPrograms.PersonID = R.UniqueID LEFT JOIN HumanResourceTypes ON HumanResourceTypes.Name = RecipientPrograms.Program LEFT JOIN ServiceOverview ON ServiceOverview.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +  CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress = 1)  AS N1 ON N1.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END + CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress <> 1)  AS N2 ON N2.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone = 1)  AS P1 ON P1.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone <> 1)  AS P2 ON P2.PersonID = R.UniqueID INNER JOIN Roster Rs on Rs.[client code]=R.[AccountNo] WHERE R.[AccountNo] > '!MULTIPLE'   AND   (ServiceOverview.ServiceStatus = 'ON HOLD') \"\r\n        //Condtion to be added on dynamic input   \r\n        //HAVING MIN(CASE WHEN MINORGROUP = 'ADMISSION' THEN [DATE] END) <= '2020-07-01'  AND MIN(CASE WHEN MINORGROUP = 'DISCHARGE' THEN [DATE] END) >'2020-07-31' \r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        } \r\n        //AND [DATE] BETWEEN '2014-05-22' AND '2019/07/18' \r\n        if (startdate != \"\" || enddate != \"\"){\r\n            this.s_DateSQL = \"  Date BETWEEN '\" +startdate + (\"'AND'\") + enddate  +  \"'\";\r\n            if (this.s_DateSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_DateSQL};            \r\n        }\r\n        if (startdate != \"\"){ \r\n          var  lblcriteria = \" Date Between \" +startdate  + \" and \"+ enddate +\"; \"}\r\n            else{lblcriteria = \" All Dated \"} \r\n\r\n        if (branch != \"\"){ \r\n             lblcriteria =lblcriteria +  \" Branches:\" + branch.join(\"','\") + \"; \"        } \r\n             else{lblcriteria =lblcriteria + \" All Branches \"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (region != \"\"){ \r\n             lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n         \r\n        \r\n         if (program != \"\"){ \r\n             lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n                                                            \r\n        fQuery = fQuery + \" ORDER BY R.[Surname/Organisation], R.FirstName\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n    //console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"AqAvj5SAJimxblUC\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n      \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n\r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n        .subscribe((blob: any) => {\r\n            console.log(blob);\r\n            \r\n            let _blob: Blob = blob;\r\n           \r\n            let fileURL = URL.createObjectURL(_blob);\r\n            this.pdfTitle = \"Reports.pdf\"\r\n            this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        }, err => {\r\n            console.log(err);\r\n        });        \r\n    }\r\n\r\n\r\n    VoucherSummary(branch,manager,region,program,state,startdate,enddate){\r\n        \r\n        \r\n        var fQuery = \"SELECT Recipients.AccountNo as [Recipient],  COUNT(SrNo) as  [Vouchers Issued], COUNT(CASE Cancelled WHEN 1 then 'True' else NULL END) as [Vouchers Cancelled], COUNT(CASE Redeemed WHEN 1 then 'True' else NULL END) as [Vouchers Redeemed], SUM(((CASE Redeemed WHEN 1 then 1 else 0 END) * SubsidyAmountt)) as [Value] FROM LMVoucher LEFT JOIN Recipients on LMVoucher.PersonID = Recipients.UniqueID  WHERE  \"\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        } \r\n        //(DATEOFISSUE BETWEEN '2013/07/01' AND '2020/07/31')\r\n        if (startdate != \"\" ||enddate != \"\"){\r\n            this.s_DateSQL = \"  DATEOFISSUE BETWEEN '\" +startdate + (\"'AND'\") + enddate  +  \"'\";\r\n            if (this.s_DateSQL != \"\"){ fQuery = fQuery + \"  \" + this.s_DateSQL};            \r\n        }\r\n        if (startdate != \"\"){ \r\n          var  lblcriteria =\" Date Between \" +startdate  + \" and \"+ enddate +\"; \"}\r\n            else{lblcriteria =\" All Dated \"} \r\n\r\n        if (branch != \"\"){ \r\n             lblcriteria = lblcriteria + \" Branches:\" + branch.join(\"','\") + \"; \"        } \r\n             else{lblcriteria =lblcriteria + \" All Branches \"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (region != \"\"){ \r\n             lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n         \r\n        \r\n         if (program != \"\"){ \r\n             lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n                                                            \r\n        fQuery = fQuery + \" GROUP BY Recipients.AccountNo ORDER BY Recipients.AccountNo\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n   // console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"OyCHjzwx6HGfc3jQ\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n      \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n\r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n        .subscribe((blob: any) => {\r\n            console.log(blob);\r\n            \r\n            let _blob: Blob = blob;\r\n           \r\n            let fileURL = URL.createObjectURL(_blob);\r\n            this.pdfTitle = \"Reports.pdf\"\r\n            this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        }, err => {\r\n            console.log(err);\r\n        });        \r\n    }\r\n\r\n    PackageUsage(branch,manager,region,program,state){\r\n        \r\n        \r\n        var fQuery = \"Select DISTINCT R.AccountNo, R.[BRANCH], R.[RECIPIENT_COOrdinator], R.[AgencyDefinedGroup], RP.[PersonId], RP.[Program], RP.ProgramStatus, ISNULL(AP_BasedOn, 0) AS Allowed, ISNULL(AP_CostType, '') AS CostType,  ISNULL(AP_PerUnit, '') AS AP_PerUnit, ISNULL(AP_Period, '') AS AP_Period, ISNULL(ExpireUsing, '') AS ExpireUsing, ISNULL(AlertStartDate, '') AS AlertStartDate, '0' AS Balance,  ISNULL(AP_RedQty, 0) AS [RedAmount], ISNULL(AP_OrangeQty, 0) AS [OrangeAmount],  ISNULL(AP_YellowQty, 0) AS [YellowAmount] FROM Recipients R LEFT JOIN RecipientPrograms RP ON RP.PersonID = R.UniqueID LEFT JOIN HumanResourceTypes ON HumanResourceTypes.Name = RP.Program LEFT JOIN ServiceOverview ON ServiceOverview.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +  CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress = 1)  AS N1 ON N1.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +  CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress <> 1)  AS N2 ON N2.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone = 1)  AS P1 ON P1.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone <> 1)  AS P2 ON P2.PersonID = R.UniqueID WHERE R.[AccountNo] > '!MULTIPLE'  AND ([R].[Type] = 'RECIPIENT' OR [R].[Type] = 'CARER/RECIPIENT')  AND (RP.ProgramStatus = 'ACTIVE')  AND ((R.AdmissionDate is NOT NULL) and (DischargeDate is NULL))  \"\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        } \r\n        if (branch != \"\"){ \r\n            var lblcriteria = \"Branches:\" + branch.join(\"','\") + \"; \"        } \r\n             else{lblcriteria = \" All Branches \"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (region != \"\"){ \r\n             lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n         \r\n        \r\n         if (program != \"\"){ \r\n             lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n                                                            \r\n        fQuery = fQuery + \"ORDER BY R.AccountNo \"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n   // console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"IOYgvXGLDyJsHZDk\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n      \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n\r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n        .subscribe((blob: any) => {\r\n            console.log(blob);\r\n            \r\n            let _blob: Blob = blob;\r\n           \r\n            let fileURL = URL.createObjectURL(_blob);\r\n            this.pdfTitle = \"Reports.pdf\"\r\n            this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        }, err => {\r\n            console.log(err);\r\n        });        \r\n    }\r\n    \r\n\r\n    RecipientTimeLength(startdate,enddate){\r\n        \r\n        \r\n        var fQuery = \"SELECT ACCOUNTNO, C.BRANCH, DATEDIFF(YEAR, DATEOFBIRTH, GETDATE()) AS AGE, MIN([DATE]) AS FirstService, DISCHARGEDATE  FROM RECIPIENTS C LEFT JOIN ROSTER R ON ACCOUNTNO = [CLIENT CODE] \" \r\n        //   AND Date BETWEEN '2020-07-01' AND '2020-07-31'\r\n        if (startdate != \"\" ||enddate != \"\"){\r\n            this.s_DateSQL = \"  Date BETWEEN '\" +startdate + (\"'AND'\") + enddate  +  \"'\";\r\n            if (this.s_DateSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_DateSQL};            \r\n        }\r\n        if (startdate != \"\"){ \r\n            var lblcriteria =lblcriteria + \" Dates Between \" +startdate  + \" and \"+ enddate +\"; \"}\r\n            else{lblcriteria =lblcriteria +  \" All Dated \"} \r\n        \r\n                                                            \r\n        fQuery = fQuery + \"AND R.[TYPE] IN (2,3,4,5,8,10,11,12) WHERE ACCOUNTNO > '!Z' GROUP BY ACCOUNTNO, C.BRANCH, DATEOFBIRTH, DISCHARGEDATE \"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n    //console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"apWdClVOiUcJ8xT0\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n      \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n\r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n        .subscribe((blob: any) => {\r\n            console.log(blob);\r\n            \r\n            let _blob: Blob = blob;\r\n           \r\n            let fileURL = URL.createObjectURL(_blob);\r\n            this.pdfTitle = \"Reports.pdf\"\r\n            this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        }, err => {\r\n            console.log(err);\r\n        });        \r\n    }\r\n\r\n    UnallocatedBookings(branch,manager,region,program,state,startdate,enddate){\r\n        \r\n        \r\n        var fQuery = \"SELECT [Roster].[Date], [Roster].[MonthNo], [Roster].[DayNo], [Roster].[BlockNo], [Roster].[Program], [Roster].[Client Code], [Roster].[Service Type], [Roster].[Anal], [Roster].[Service Description], [Roster].[Type], [Roster].[Notes], [Roster].[ShiftName], [Roster].[ServiceSetting], [Roster].[Carer Code], [Roster].[Start Time], [Roster].[Duration], [Roster].[Duration] / 12 As [DecimalDuration],  [Roster].[CostQty], CASE WHEN [Roster].[Type] = 9 THEN 0 ELSE CostQty END AS PayQty, CASE WHEN [Roster].[Type] <> 9 THEN 0 ELSE CostQty END AS AllowanceQty, [Roster].[Unit Pay Rate], [Roster].[Unit Pay Rate] * [Roster].[CostQty] As [LineCost], [Roster].[BillQty], [Roster].[Unit Bill Rate], [Roster].[Unit Bill Rate] * [Roster].[BillQty] As [LineBill], [Roster].[Yearno]  FROM Roster  INNER JOIN Recipients ON Roster.[CLient Code] = Recipients.[Accountno]  WHERE ([Client Code] <> '!INTERNAL')  AND Roster.[Type] = 1  \"\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        } \r\n        //AND Date BETWEEN '2020/07/01' AND '2020/07/31'\r\n        if (startdate != \"\" ||enddate != \"\"){\r\n            this.s_DateSQL = \"  Date BETWEEN '\" +startdate + (\"'AND'\") + enddate  +  \"'\";\r\n            if (this.s_DateSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_DateSQL};            \r\n        }\r\n        if (startdate != \"\"){ \r\n           var lblcriteria = \" Date Between \" +startdate  + \" and \"+ enddate +\"; \"}\r\n            else{lblcriteria =  \" All Dated \"} \r\n\r\n        if (branch != \"\"){ \r\n             lblcriteria = lblcriteria + \" Branches:\" + branch.join(\"','\") + \"; \"        } \r\n             else{lblcriteria =lblcriteria + \" All Branches \"}\r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (region != \"\"){ \r\n             lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n         \r\n        \r\n         if (program != \"\"){ \r\n             lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n                                                            \r\n       fQuery = fQuery + \"ORDER BY [Client Code], Date, [Start Time]\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n   // console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"BL1iE2Hn6FNsUpJN\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n      \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n\r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n        .subscribe((blob: any) => {\r\n            console.log(blob);\r\n            \r\n            let _blob: Blob = blob;\r\n           \r\n            let fileURL = URL.createObjectURL(_blob);\r\n            this.pdfTitle = \"Reports.pdf\"\r\n            this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        }, err => {\r\n            console.log(err);\r\n        });        \r\n    }\r\n    \r\n    TransportSummary(branch,manager,region,program,state,startdate,enddate){\r\n        \r\n        \r\n        var fQuery = \"SELECT  DATADOMAINS.[User1]  as [District], [Roster].[ServiceSetting] as Vehicle, [Roster].[Client Code] as Client, [Roster].[Date] as [Date of Travel] , (Case UPPER(LEFT([Roster].[Service Type],3)) WHEN 'MED' THEN 1 ELSE 0 END) as [MED], (Case UPPER(LEFT([Roster].[Service Type],3)) WHEN 'MED' THEN 0 ELSE 1 END) as [SOC], [Roster].[Program], PR.[Type] AS FundingSource FROM Roster INNER JOIN RECIPIENTS ON [Roster].[Client Code] = [Recipients].[AccountNo]   INNER JOIN DATADOMAINS ON DATADOMAINS.[Description] =  [Roster].[ServiceSetting] INNER JOIN HumanResourceTypes PR ON PR.[Name] = Roster.[Program]WHERE  Roster.Type = 10 AND [Client Code] > '!MULTIPLE' AND Roster.[Status] >= 2 \"\r\n\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        } \r\n        // AND (DATE BETWEEN '2019/07/01' AND '2020/07/31')\r\n        if (startdate != \"\" ||enddate != \"\"){\r\n            this.s_DateSQL = \"  DATE BETWEEN '\" +startdate + (\"'AND'\") + enddate  +  \"'\";\r\n            if (this.s_DateSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_DateSQL};            \r\n        }\r\n        if (startdate != \"\"){ \r\n          var  lblcriteria =\" Date Between \" +startdate  + \" and \"+ enddate +\"; \"}\r\n            else{lblcriteria =\" All Dated \"} \r\n\r\n        if (branch != \"\"){ \r\n             lblcriteria =lblcriteria +  \"Branches:\" + branch.join(\"','\") + \"; \"        } \r\n             else{lblcriteria =lblcriteria + \" All Branches \"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (region != \"\"){ \r\n             lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n         \r\n        \r\n         if (program != \"\"){ \r\n             lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n                                                            \r\n       fQuery = fQuery + \" ORDER BY DataDomains.User1, [Roster].[ServiceSetting], [Roster].[Client Code], [Roster].[Date]\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n    //console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"zf77m2pHrfjGcpvM\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n\r\n\r\n    RefferalsduringPeriod(branch,manager,region,program,state,startdate,enddate){\r\n        \r\n        \r\n        var fQuery = \"SELECT [Recipients].[UniqueID], [Recipients].[AccountNo], [Recipients].[AgencyIDReportingCode], [Recipients].[Surname/Organisation], UPPER([Recipients].[Surname/Organisation]) + ', ' + CASE WHEN [Recipients].[FirstName] <> '' THEN [Recipients].[FirstName]  ELSE ' ' END As [RecipientName], [Recipients].[Address1], [Recipients].[Address2], [Recipients].[pSuburb] As Suburb, [Recipients].[pPostcode] As Postcode, [Recipients].[AdmissionDate] As [Activation Date], [Recipients].[DischargeDate] As [DeActivation Date], [Recipients].[ONIRating], [Roster].[Client Code], [Roster].[Service Type], [Roster].[DischargeReasonType], [Roster].[Date], [Roster].[Program]  FROM Recipients With (NoLock)  INNER JOIN Roster With (NoLock) ON Recipients.accountno = Roster.[Client Code]  INNER JOIN ItemTypes With (NoLock) ON ItemTypes.Title = Roster.[Service Type]  AND ProcessClassification <> 'INPUT'  WHERE ItemTypes.MinorGroup = 'REFERRAL-IN'  \"\r\n\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        }   //AND (Date BETWEEN '2017/07/01' AND '2018/07/31')\r\n        if (startdate != \"\" ||enddate != \"\"){\r\n            this.s_DateSQL = \" Date BETWEEN '\" +startdate + (\"'AND'\") + enddate  +  \"'\";\r\n            if (this.s_DateSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_DateSQL};            \r\n        }\r\n        if (startdate != \"\"){ \r\n          var  lblcriteria = \" Date Between \" +startdate  + \" and \"+ enddate +\"; \"}\r\n            else{lblcriteria =  \" All Dated \"} \r\n\r\n        if (branch != \"\"){ \r\n            lblcriteria =lblcriteria +  \" Branches:\" + branch.join(\"','\") + \"; \"        } \r\n             else{lblcriteria =lblcriteria + \" All Branches \"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (region != \"\"){ \r\n             lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n         \r\n        \r\n         if (program != \"\"){ \r\n             lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n                                                            \r\n        fQuery = fQuery + \"ORDER BY Date\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n    //console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"TwKNgf9F8SLUDgLo\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n            ///<<<<<<<<<<<<<<QUERIES & RPT-ID>>>>>>>>>>>\r\n    RecipientMasterRoster(branch,manager,region,program,state){\r\n        \r\n        \r\n        var fQuery = \"SELECT [Roster].[Date], [Roster].[MonthNo], [Roster].[DayNo], [Roster].[BlockNo], [Roster].[Program], [Roster].[Client Code], [Roster].[Service Type], [Roster].[Anal], [Roster].[Service Description], [Roster].[Type], [Roster].[Notes], [Roster].[ShiftName], [Roster].[ServiceSetting], [Roster].[Carer Code], [Roster].[Start Time], [Roster].[Duration], [Roster].[Duration] / 12 As [DecimalDuration],  [Roster].[CostQty], CASE WHEN [Roster].[Type] = 9 THEN 0 ELSE CostQty END AS PayQty, CASE WHEN [Roster].[Type] <> 9 THEN 0 ELSE CostQty END AS AllowanceQty, [Roster].[Unit Pay Rate], [Roster].[Unit Pay Rate] * [Roster].[CostQty] As [LineCost], [Roster].[BillQty], [Roster].[Unit Bill Rate], [Roster].[Unit Bill Rate] * [Roster].[BillQty] As [LineBill], [Roster].[Yearno]  FROM Roster  INNER JOIN Recipients ON [CLient Code] = Recipients.[Accountno]  LEFT JOIN STAFF ON [CARER CODE] = STAFF.ACCOUNTNO  WHERE ([Client Code] <> '!INTERNAL' AND [Client Code] <> '!MULTIPLE') AND Date BETWEEN '1900/01/01' AND '1900/01/28'\"\r\n\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (Roster.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        } \r\n\r\n        if (branch != \"\"){ \r\n            var lblcriteria = \"Branches:\" + branch.join(\"','\") + \"; \"        } \r\n             else{lblcriteria = \" All Branches \"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (region != \"\"){ \r\n             lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n         \r\n        \r\n         if (program != \"\"){ \r\n             lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n                                                            \r\n        fQuery = fQuery + \"  ORDER BY [Client Code], Date, [Start Time]\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n  //  console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"rRjFTClorpcjSauz\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n\r\n    ActiveRecipientList(branch,manager,region,program,state){\r\n        \r\n        \r\n        var fQuery = \"SELECT DISTINCT R.UniqueID, R.AccountNo, R.AgencyIdReportingCode, R.[Surname/Organisation], R.FirstName, R.Branch, R.RECIPIENT_COORDINATOR, R.AgencyDefinedGroup, R.ONIRating,CONVERT(varchar, R.AdmissionDate,23) As [Activation Date],CONVERT(varchar, R.DischargeDate,23)  As [DeActivation Date], HumanResourceTypes.Address2, RecipientPrograms.ProgramStatus, CASE WHEN RecipientPrograms.Program <> '' THEN RecipientPrograms.Program + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Quantity <> '' THEN RecipientPrograms.Quantity + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.ItemUnit <> '' THEN RecipientPrograms.ItemUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.PerUnit <> '' THEN RecipientPrograms.PerUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.TimeUnit <> '' THEN RecipientPrograms.TimeUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Period <> '' THEN RecipientPrograms.Period + ' ' ELSE ' ' END AS FundingDetails, UPPER([Surname/Organisation]) + ', ' + CASE WHEN FirstName <> '' THEN FirstName ELSE ' ' END AS RecipientName, CASE WHEN N1.Address <> '' THEN  N1.Address ELSE N2.Address END  AS ADDRESS, CASE WHEN P1.Contact <> '' THEN  P1.Contact ELSE P2.Contact END AS CONTACT, (SELECT TOP 1 Date FROM Roster WHERE Type IN (2, 3, 7, 8, 9, 10, 11, 12) AND [Client Code] = R.AccountNo ORDER BY DATE DESC) AS LastDate FROM Recipients R LEFT JOIN RecipientPrograms ON RecipientPrograms.PersonID = R.UniqueID LEFT JOIN HumanResourceTypes ON HumanResourceTypes.Name = RecipientPrograms.Program LEFT JOIN ServiceOverview ON ServiceOverview.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +  CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress = 1)  AS N1 ON N1.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END + CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress <> 1)  AS N2 ON N2.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone = 1)  AS P1 ON P1.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone <> 1)  AS P2 ON P2.PersonID = R.UniqueID WHERE R.[AccountNo] > '!MULTIPLE'  AND ([R].[Type] = 'RECIPIENT' OR [R].[Type] = 'CARER/RECIPIENT')  AND (RecipientPrograms.ProgramStatus = 'ACTIVE')  AND ((R.AdmissionDate is NOT NULL) and (DischargeDate is NULL))  \"\r\n\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        } \r\n        if (branch != \"\"){ \r\n            var lblcriteria = \"Branches:\" + branch.join(\"','\") + \"; \"        } \r\n             else{lblcriteria = \" All Branches \"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (region != \"\"){ \r\n             lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n         \r\n        \r\n         if (program != \"\"){ \r\n             lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n                                                            \r\n        fQuery = fQuery + \" ORDER BY R.[Surname/Organisation], R.FirstName\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n   // console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"4ohDCZRbiaKS4ocK\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n\r\n    InActiveRecipientList(branch,manager,region,program,state){\r\n        \r\n        \r\n        var fQuery = \"SELECT DISTINCT R.UniqueID, R.AccountNo, R.AgencyIdReportingCode, R.[Surname/Organisation], R.FirstName, R.Branch, R.RECIPIENT_COORDINATOR, R.AgencyDefinedGroup, R.ONIRating, CONVERT(varchar, R.AdmissionDate,23)  As [Activation Date], CONVERT(varchar,R.DischargeDate,23)  As [DeActivation Date], HumanResourceTypes.Address2, RecipientPrograms.ProgramStatus, CASE WHEN RecipientPrograms.Program <> '' THEN RecipientPrograms.Program + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Quantity <> '' THEN RecipientPrograms.Quantity + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.ItemUnit <> '' THEN RecipientPrograms.ItemUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.PerUnit <> '' THEN RecipientPrograms.PerUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.TimeUnit <> '' THEN RecipientPrograms.TimeUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Period <> '' THEN RecipientPrograms.Period + ' ' ELSE ' ' END AS FundingDetails, UPPER([Surname/Organisation]) + ', ' + CASE WHEN FirstName <> '' THEN FirstName ELSE ' ' END AS RecipientName, CASE WHEN N1.Address <> '' THEN  N1.Address ELSE N2.Address END  AS ADDRESS, CASE WHEN P1.Contact <> '' THEN  P1.Contact ELSE P2.Contact END AS CONTACT, (SELECT TOP 1 Date FROM Roster WHERE Type IN (2, 3, 7, 8, 9, 10, 11, 12) AND [Client Code] = R.AccountNo ORDER BY DATE DESC) AS LastDate FROM Recipients R LEFT JOIN RecipientPrograms ON RecipientPrograms.PersonID = R.UniqueID LEFT JOIN HumanResourceTypes ON HumanResourceTypes.Name = RecipientPrograms.Program LEFT JOIN ServiceOverview ON ServiceOverview.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +  CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress = 1)  AS N1 ON N1.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress <> 1)  AS N2 ON N2.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone = 1)  AS P1 ON P1.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone <> 1)  AS P2 ON P2.PersonID = R.UniqueID WHERE R.[AccountNo] > '!MULTIPLE'  AND ([R].[Type] = 'RECIPIENT' OR [R].[Type] = 'CARER/RECIPIENT') AND (DischargeDate is not null)\"\r\n\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        } \r\n\r\n        if (branch != \"\"){ \r\n            var lblcriteria = \"Branches:\" + branch.join(\"','\") + \"; \"        } \r\n             else{lblcriteria = \" All Branches \"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (region != \"\"){ \r\n             lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n         \r\n        \r\n         if (program != \"\"){ \r\n             lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n                                                            \r\n       fQuery = fQuery + \" ORDER BY R.[Surname/Organisation], R.FirstName\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n    //console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"EqrRIePxJeNTXk0b\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n\r\n    CareerList(branch,manager,region,program,state){\r\n        \r\n        \r\n        var fQuery = \"SELECT DISTINCT R.UniqueID, R.AccountNo, R.AgencyIdReportingCode, R.[Surname/Organisation], R.FirstName, R.Branch, R.RECIPIENT_COORDINATOR, R.AgencyDefinedGroup, R.ONIRating,CONVERT(VARCHAR,R.AdmissionDate ,23) As [Activation Date],CONVERT (varchar,R.DischargeDate,23)  As [DeActivation Date], HumanResourceTypes.Address2, RecipientPrograms.ProgramStatus, CASE WHEN RecipientPrograms.Program <> '' THEN RecipientPrograms.Program + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Quantity <> '' THEN RecipientPrograms.Quantity + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.ItemUnit <> '' THEN RecipientPrograms.ItemUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.PerUnit <> '' THEN RecipientPrograms.PerUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.TimeUnit <> '' THEN RecipientPrograms.TimeUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Period <> '' THEN RecipientPrograms.Period + ' ' ELSE ' ' END AS FundingDetails, UPPER([Surname/Organisation]) + ', ' + CASE WHEN FirstName <> '' THEN FirstName ELSE ' ' END AS RecipientName, CASE WHEN N1.Address <> '' THEN  N1.Address ELSE N2.Address END  AS ADDRESS, CASE WHEN P1.Contact <> '' THEN  P1.Contact ELSE P2.Contact END AS CONTACT, (SELECT TOP 1 Date FROM Roster WHERE Type IN (2, 3, 7, 8, 9, 10, 11, 12) AND [Client Code] = R.AccountNo ORDER BY DATE DESC) AS LastDate FROM Recipients R LEFT JOIN RecipientPrograms ON RecipientPrograms.PersonID = R.UniqueID LEFT JOIN HumanResourceTypes ON HumanResourceTypes.Name = RecipientPrograms.Program LEFT JOIN ServiceOverview ON ServiceOverview.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +  CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress = 1)  AS N1 ON N1.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress <> 1)  AS N2 ON N2.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone = 1)  AS P1 ON P1.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone <> 1)  AS P2 ON P2.PersonID = R.UniqueID WHERE R.[AccountNo] > '!MULTIPLE'  AND ([R].[Type] = 'CARER' OR [R].[Type] = 'CARER/RECIPIENT')  AND ((R.AdmissionDate is NOT NULL) and (DischargeDate is NULL))\"\r\n\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        } \r\n\r\n        if (branch != \"\"){ \r\n            var lblcriteria = \"Branches:\" + branch.join(\"','\") + \"; \"        } \r\n             else{lblcriteria = \" All Branches \"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (region != \"\"){ \r\n             lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n         \r\n        \r\n         if (program != \"\"){ \r\n             lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n                                                            \r\n       fQuery = fQuery + \"  ORDER BY R.[Surname/Organisation], R.FirstName\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n   // console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"pFy5Ej2Zdy6OhMKs\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n\r\n    BillingCliens(branch,manager,region,program,state){\r\n        \r\n        \r\n        var fQuery = \"SELECT DISTINCT R.UniqueID, R.AccountNo, R.AgencyIdReportingCode, R.[Surname/Organisation], R.FirstName, R.Branch, R.RECIPIENT_COORDINATOR, R.AgencyDefinedGroup, R.ONIRating, R.AdmissionDate As [Activation Date], R.DischargeDate As [DeActivation Date], HumanResourceTypes.Address2, RecipientPrograms.ProgramStatus, CASE WHEN RecipientPrograms.Program <> '' THEN RecipientPrograms.Program + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Quantity <> '' THEN RecipientPrograms.Quantity + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.ItemUnit <> '' THEN RecipientPrograms.ItemUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.PerUnit <> '' THEN RecipientPrograms.PerUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.TimeUnit <> '' THEN RecipientPrograms.TimeUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Period <> '' THEN RecipientPrograms.Period + ' ' ELSE ' ' END AS FundingDetails, UPPER([Surname/Organisation]) + ', ' + CASE WHEN FirstName <> '' THEN FirstName ELSE ' ' END AS RecipientName, CASE WHEN N1.Address <> '' THEN  N1.Address ELSE N2.Address END  AS ADDRESS, CASE WHEN P1.Contact <> '' THEN  P1.Contact ELSE P2.Contact END AS CONTACT, (SELECT TOP 1 Date FROM Roster WHERE Type IN (2, 3, 7, 8, 9, 10, 11, 12) AND [Client Code] = R.AccountNo ORDER BY DATE DESC) AS LastDate FROM Recipients R LEFT JOIN RecipientPrograms ON RecipientPrograms.PersonID = R.UniqueID LEFT JOIN HumanResourceTypes ON HumanResourceTypes.Name = RecipientPrograms.Program LEFT JOIN ServiceOverview ON ServiceOverview.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +  CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress = 1)  AS N1 ON N1.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress <> 1)  AS N2 ON N2.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone = 1)  AS P1 ON P1.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone <> 1)  AS P2 ON P2.PersonID = R.UniqueID WHERE R.[AccountNo] > '!MULTIPLE'  AND ([R].[Type] IN ('BILLING CLIENTS', 'BILLING CLIENT ONLY'))  AND ((R.AdmissionDate is NOT NULL) and (DischargeDate is NULL))\"\r\n\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        } \r\n        if (branch != \"\"){ \r\n            var lblcriteria = \"Branches:\" + branch.join(\"','\") + \"; \"        } \r\n             else{lblcriteria = \" All Branches \"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (region != \"\"){ \r\n             lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n         \r\n        \r\n         if (program != \"\"){ \r\n             lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n                                                            \r\n        fQuery = fQuery + \"  ORDER BY R.[Surname/Organisation], R.FirstName\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n   // console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"0BnEO8OTruJxvLwX\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n    AdmissiionDuringPeriod(branch,manager,region,program,state,startdate,enddate){\r\n        \r\n        \r\n        var fQuery = \"SELECT [Recipients].[UniqueID], [Recipients].[AccountNo], [Recipients].[AgencyIDReportingCode], [Recipients].[Surname/Organisation], UPPER([Recipients].[Surname/Organisation]) + ', ' + CASE WHEN [Recipients].[FirstName] <> '' THEN [Recipients].[FirstName]  ELSE ' ' END As [RecipientName], [Recipients].[Address1], [Recipients].[Address2], [Recipients].[pSuburb] As Suburb, [Recipients].[pPostcode] As Postcode, [Recipients].[AdmissionDate] As [Activation Date], [Recipients].[DischargeDate] As [DeActivation Date], [Recipients].[ONIRating], [Roster].[Client Code], [Roster].[Service Type], [Roster].[DischargeReasonType], [Roster].[Date], [Roster].[Program]  FROM Recipients With (NoLock)  INNER JOIN Roster With (NoLock) ON Recipients.accountno = Roster.[Client Code]  INNER JOIN ItemTypes With (NoLock) ON ItemTypes.Title = Roster.[Service Type]  AND ProcessClassification <> 'INPUT'  WHERE ItemTypes.MinorGroup = 'ADMISSION'  \"\r\n\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        }\r\n        //AND (Date BETWEEN '2015/07/01' AND '2016/07/31'\r\n        if (startdate != \"\" ||enddate != \"\"){\r\n            this.s_DateSQL = \" Date BETWEEN '\" +startdate + (\"'AND'\") + enddate  +  \"'\";\r\n            if (this.s_DateSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_DateSQL};            \r\n        }\r\n        if (startdate != \"\"){ \r\n          var  lblcriteria = \" Date Between \" +startdate  + \" and \"+ enddate +\"; \"}\r\n            else{lblcriteria =  \" All Dated \"}\r\n         \r\n\r\n        if (branch != \"\"){ \r\n            lblcriteria =lblcriteria + \" Branches:\" + branch.join(\",\") + \"; \"        } \r\n             else{lblcriteria =lblcriteria + \" All Branches \"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (region != \"\"){ \r\n             lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n         \r\n        \r\n         if (program != \"\"){ \r\n             lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n                                                            \r\n        fQuery = fQuery + \" ORDER BY Date\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n    //console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"sedG2p1WPWiRPeIc\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n    DischargeDuringPeriod(branch,manager,region,program,state,startdate,enddate){\r\n        \r\n        \r\n        var fQuery = \"SELECT [Recipients].[UniqueID], [Recipients].[AccountNo], [Recipients].[AgencyIDReportingCode], [Recipients].[Surname/Organisation], UPPER([Recipients].[Surname/Organisation]) + ', ' + CASE WHEN [Recipients].[FirstName] <> '' THEN [Recipients].[FirstName]  ELSE ' ' END As [RecipientName], [Recipients].[Address1], [Recipients].[Address2], [Recipients].[pSuburb] As Suburb, [Recipients].[pPostcode] As Postcode, [Recipients].[AdmissionDate] As [Activation Date], [Recipients].[DischargeDate] As [DeActivation Date], [Recipients].[ONIRating], [Roster].[Client Code], [Roster].[Service Type], [Roster].[DischargeReasonType], [Roster].[Date], [Roster].[Program]  FROM Recipients With (NoLock)  INNER JOIN Roster With (NoLock) ON Recipients.accountno = Roster.[Client Code]  INNER JOIN ItemTypes With (NoLock) ON ItemTypes.Title = Roster.[Service Type]  AND ProcessClassification <> 'INPUT'  WHERE ItemTypes.MinorGroup = 'DISCHARGE' \"\r\n        //AND (Date BETWEEN '2015/07/01' AND '2016/07/31'\r\n        \r\n        \r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        }\r\n        if (startdate != \"\" ||enddate != \"\"){\r\n            this.s_DateSQL = \" Date BETWEEN '\" +startdate + (\"'AND'\") + enddate  +  \"'\";\r\n            if (this.s_DateSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_DateSQL};            \r\n        }\r\n        if (startdate != \"\"){ \r\n          var  lblcriteria =  \" Date Between \" +startdate  + \" and \"+ enddate +\"; \"}\r\n            else{lblcriteria = \" All Dated \"} \r\n\r\n        if (branch != \"\"){ \r\n             lblcriteria =lblcriteria +  \" Branches:\" + branch.join(\"','\") + \"; \"        } \r\n             else{lblcriteria =lblcriteria + \" All Branches \"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (region != \"\"){ \r\n             lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n         \r\n        \r\n         if (program != \"\"){ \r\n             lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n\r\n             \r\n                                                            \r\n        fQuery = fQuery + \"  ORDER BY Date\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n   // console.log(fQuery)\r\n   // console.log(lblcriteria)               \r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"IcqccAG4IKFnbisd\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n\r\n    AbsentClientStatus(branch,manager,region,program,state,startdate,enddate){\r\n        \r\n        \r\n        var fQuery = \"SELECT DISTINCT R.UniqueID, R.AccountNo, R.AgencyIdReportingCode, R.[Surname/Organisation], R.FirstName, R.Branch, R.RECIPIENT_COORDINATOR, R.AgencyDefinedGroup, R.ONIRating, R.AdmissionDate As [Activation Date], R.DischargeDate As [DeActivation Date], HumanResourceTypes.Address2, RecipientPrograms.ProgramStatus, CASE WHEN RecipientPrograms.Program <> '' THEN RecipientPrograms.Program + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Quantity <> '' THEN RecipientPrograms.Quantity + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.ItemUnit <> '' THEN RecipientPrograms.ItemUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.PerUnit <> '' THEN RecipientPrograms.PerUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.TimeUnit <> '' THEN RecipientPrograms.TimeUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Period <> '' THEN RecipientPrograms.Period + ' ' ELSE ' ' END AS FundingDetails, UPPER([Surname/Organisation]) + ', ' + CASE WHEN FirstName <> '' THEN FirstName ELSE ' ' END AS RecipientName, CASE WHEN N1.Address <> '' THEN  N1.Address ELSE N2.Address END  AS ADDRESS, CASE WHEN P1.Contact <> '' THEN  P1.Contact ELSE P2.Contact END AS CONTACT, (SELECT TOP 1 Date FROM Roster WHERE Type IN (2, 3, 7, 8, 9, 10, 11, 12) AND [Client Code] = R.AccountNo ORDER BY DATE DESC) AS LastDate FROM Recipients R LEFT JOIN RecipientPrograms ON RecipientPrograms.PersonID = R.UniqueID LEFT JOIN HumanResourceTypes ON HumanResourceTypes.Name = RecipientPrograms.Program LEFT JOIN ServiceOverview ON ServiceOverview.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +  CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress = 1)  AS N1 ON N1.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress <> 1)  AS N2 ON N2.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone = 1)  AS P1 ON P1.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone <> 1)  AS P2 ON P2.PersonID = R.UniqueID INNER JOIN Roster Rs on Rs.[client code]=R.[AccountNo] WHERE R.[AccountNo] > '!MULTIPLE' AND Rs.[TYPE] = 4  AND ((admissiondate is not null) and (DischargeDate is null))\"\r\n\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        } \r\n        //   AND [DATE] BETWEEN '2015/07/01' AND '2016/07/31' \r\n        if (startdate != \"\" ||enddate != \"\"){\r\n            this.s_DateSQL = \"  Date BETWEEN '\" +startdate + (\"'AND'\") + enddate  +  \"'\";\r\n            if (this.s_DateSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_DateSQL};            \r\n        }\r\n        if (startdate != \"\"){ \r\n          var  lblcriteria = \" Date Between \" +startdate  + \" and \"+ enddate +\"; \"}\r\n            else{lblcriteria = \" All Dated \"} \r\n\r\n        if (branch != \"\"){ \r\n             lblcriteria = lblcriteria + \" Branches:\" + branch.join(\"','\") + \"; \"        } \r\n             else{lblcriteria =lblcriteria +  \" All Branches \"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (region != \"\"){ \r\n             lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n         \r\n        \r\n         if (program != \"\"){ \r\n             lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n                                                            \r\n       fQuery = fQuery + \"   ORDER BY R.[Surname/Organisation], FirstName\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n   // console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"usEk1DqdlD4V07eM\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n    Associate_list(branch,manager,region,program,state){\r\n        \r\n        \r\n        var fQuery = \"SELECT DISTINCT R.UniqueID, R.AccountNo, R.AgencyIdReportingCode, R.[Surname/Organisation], R.FirstName, R.Branch, R.RECIPIENT_COORDINATOR, R.AgencyDefinedGroup, R.ONIRating, R.AdmissionDate As [Activation Date], R.DischargeDate As [DeActivation Date], HumanResourceTypes.Address2, RecipientPrograms.ProgramStatus, CASE WHEN RecipientPrograms.Program <> '' THEN RecipientPrograms.Program + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Quantity <> '' THEN RecipientPrograms.Quantity + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.ItemUnit <> '' THEN RecipientPrograms.ItemUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.PerUnit <> '' THEN RecipientPrograms.PerUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.TimeUnit <> '' THEN RecipientPrograms.TimeUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Period <> '' THEN RecipientPrograms.Period + ' ' ELSE ' ' END AS FundingDetails, UPPER([Surname/Organisation]) + ', ' + CASE WHEN FirstName <> '' THEN FirstName ELSE ' ' END AS RecipientName, CASE WHEN N1.Address <> '' THEN  N1.Address ELSE N2.Address END  AS ADDRESS, CASE WHEN P1.Contact <> '' THEN  P1.Contact ELSE P2.Contact END AS CONTACT, (SELECT TOP 1 Date FROM Roster WHERE Type IN (2, 3, 7, 8, 9, 10, 11, 12) AND [Client Code] = R.AccountNo ORDER BY DATE DESC) AS LastDate FROM Recipients R LEFT JOIN RecipientPrograms ON RecipientPrograms.PersonID = R.UniqueID LEFT JOIN HumanResourceTypes ON HumanResourceTypes.Name = RecipientPrograms.Program LEFT JOIN ServiceOverview ON ServiceOverview.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +  CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress = 1)  AS N1 ON N1.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress <> 1)  AS N2 ON N2.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone = 1)  AS P1 ON P1.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone <> 1)  AS P2 ON P2.PersonID = R.UniqueID WHERE R.[AccountNo] > '!MULTIPLE'  AND ([R].[Type] = 'ASSOCIATE')  AND ((R.AdmissionDate is NOT NULL) and (DischargeDate is NULL))\"\r\n        var lblcriteria;\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL}\r\n            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n            \r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL}\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        } \r\n\r\n        \r\n        if (branch != \"\"){ \r\n            lblcriteria = \"Branches:\" + branch.join(\"','\") + \"; \"        } \r\n            else{lblcriteria = \" All Branches \"}\r\n        \r\n         if (manager != \"\"){\r\n            lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n            else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n        \r\n        \r\n        if (region != \"\"){ \r\n            lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n            else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n        \r\n       \r\n        if (program != \"\"){ \r\n            lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n            else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n        \r\n                                                            \r\n        fQuery = fQuery + \"  ORDER BY R.[Surname/Organisation], R.FirstName\"\r\n        \r\n        /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n   // console.log(fQuery)\r\n   // console.log(lblcriteria)\r\n\r\n   \r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"69u2ZyBtQbSyxVxf\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         //   \"sql\": \"SELECT DISTINCT R.UniqueID, R.AccountNo, R.AgencyIdReportingCode, R.[Surname/Organisation], R.FirstName, R.Branch, R.RECIPIENT_COORDINATOR, R.AgencyDefinedGroup, R.ONIRating, R.AdmissionDate As [Activation Date], R.DischargeDate As [DeActivation Date], HumanResourceTypes.Address2, RecipientPrograms.ProgramStatus, CASE WHEN RecipientPrograms.Program <> '' THEN RecipientPrograms.Program + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Quantity <> '' THEN RecipientPrograms.Quantity + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.ItemUnit <> '' THEN RecipientPrograms.ItemUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.PerUnit <> '' THEN RecipientPrograms.PerUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.TimeUnit <> '' THEN RecipientPrograms.TimeUnit + ' ' ELSE ' ' END + CASE WHEN RecipientPrograms.Period <> '' THEN RecipientPrograms.Period + ' ' ELSE ' ' END AS FundingDetails, UPPER([Surname/Organisation]) + ', ' + CASE WHEN FirstName <> '' THEN FirstName ELSE ' ' END AS RecipientName, CASE WHEN N1.Address <> '' THEN  N1.Address ELSE N2.Address END  AS ADDRESS, CASE WHEN P1.Contact <> '' THEN  P1.Contact ELSE P2.Contact END AS CONTACT, (SELECT TOP 1 Date FROM Roster WHERE Type IN (2, 3, 7, 8, 9, 10, 11, 12) AND [Client Code] = R.AccountNo ORDER BY DATE DESC) AS LastDate FROM Recipients R LEFT JOIN RecipientPrograms ON RecipientPrograms.PersonID = R.UniqueID LEFT JOIN HumanResourceTypes ON HumanResourceTypes.Name = RecipientPrograms.Program LEFT JOIN ServiceOverview ON ServiceOverview.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +  CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress = 1)  AS N1 ON N1.PersonID = R.UniqueID LEFT JOIN (SELECT PERSONID,  CASE WHEN Address1 <> '' THEN Address1 + ' ' ELSE ' ' END +  CASE WHEN Address2 <> '' THEN Address2 + ' ' ELSE ' ' END +  CASE WHEN Suburb <> '' THEN Suburb + ' ' ELSE ' ' END +  CASE WHEN Postcode <> '' THEN Postcode ELSE ' ' END AS Address  FROM NamesAndAddresses WHERE PrimaryAddress <> 1)  AS N2 ON N2.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone = 1)  AS P1 ON P1.PersonID = R.UniqueID LEFT JOIN (SELECT PersonID,  PhoneFaxOther.Type + ' ' +  CASE WHEN Detail <> '' THEN Detail ELSE ' ' END AS Contact  FROM PhoneFaxOther WHERE PrimaryPhone <> 1)  AS P2 ON P2.PersonID = R.UniqueID WHERE R.[AccountNo] > '!MULTIPLE'   AND (R.DischargeDate is NULL)  AND  (RecipientPrograms.ProgramStatus = 'REFERRAL')  ORDER BY R.ONIRating, R.[Surname/Organisation]\"\r\n            \"sql\":fQuery,\r\n            \"Criteria\" :  lblcriteria\r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n      \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n\r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n        .subscribe((blob: any) => {\r\n            console.log(blob);\r\n            \r\n            let _blob: Blob = blob;\r\n           \r\n            let fileURL = URL.createObjectURL(_blob);\r\n            this.pdfTitle = \"Reports.pdf\"\r\n            this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        }, err => {\r\n            console.log(err);\r\n        });    this.drawerVisible = true;     \r\n    }\r\n\r\n    UnServicedRecipient(branch,manager,region,program,state,startdate,enddate){\r\n        \r\n        \r\n        var fQuery = \"SELECT DISTINCT T.[Date], R.ACCOUNTNO, R.[Surname/Organisation] as Surname, R.FirstName,  R.Branch,  R.RECIPIENT_CoOrdinator, RP.Program FROM RECIPIENTS R LEFT JOIN RecipientPrograms RP on R.UniqueID = RP.PersonID LEFT JOIN ( SELECT RECORDNO, [Date],[CLIENT CODE], Program FROM ROSTER WHERE [TYPE] IN (2,3,4,5,6,7,8,10,11,12)  \"\r\n\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL};\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        }   //  AND Date BETWEEN '2020-07-01' AND '2020-07-31' )\r\n        if (startdate != \"\" ||enddate != \"\"){\r\n            this.s_DateSQL = \" Date BETWEEN '\" +startdate + (\"'AND'\") + enddate  +  \"')\";\r\n            if (this.s_DateSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_DateSQL};            \r\n        }\r\n        fQuery = fQuery + \" AS T ON R.ACCOUNTNO = T.[CLIENT CODE] WHERE ACCOUNTNO > '!Z' AND T.RECORDNO IS NULL\"\r\n        if (startdate != \"\"){ \r\n          var  lblcriteria = \" Date Between \" +startdate  + \" and \"+ enddate +\"; \"}\r\n            else{lblcriteria =  \" All Dated \"} \r\n\r\n        if (branch != \"\"){ \r\n            lblcriteria =lblcriteria +  \" Branches:\" + branch.join(\"','\") + \"; \"        } \r\n             else{lblcriteria =lblcriteria + \" All Branches \"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (region != \"\"){ \r\n             lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n         \r\n        \r\n         if (program != \"\"){ \r\n             lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n                                                            \r\n        fQuery = fQuery + \" ORDER BY  T.[Date], RP.[Program]\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n   // console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"nsCXBTh7bFlCHSHX\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n    ActiveStaffListing(manager,branch,stfgroup){\r\n        \r\n        \r\n        var fQuery = \"Select s.UniqueID, AccountNo, STF_CODE, StaffGroup, [LastName], UPPER(s.[LastName]) + ', ' + CASE WHEN FirstName <> '' THEN FirstName  ELSE ' '  END as StaffName, Address1, Address2, Suburb, Postcode, CONVERT(nvarchar, CommencementDate,23) as CommencementDate, TerminationDate, HRS_DAILY_MIN, HRS_DAILY_MAX, HRS_WEEKLY_MIN, HRS_WEEKLY_MAX, Stuff ((SELECT '; ' + Detail from PhoneFaxOther pf where pf.PersonID = s.UniqueID For XML path ('')),1, 1, '') [Detail] from Staff s WHERE [Category] = 'STAFF'  AND ([commencementdate] is not null and [terminationdate] is null)  \"\r\n\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"[STF_DEPARTMENT] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"[PAN_Manager] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(stfgroup != \"\"){\r\n            this.s_StfGroupSQL = \"[StaffGroup] in ('\" + stfgroup.join(\"','\")  +  \"')\";            \r\n            if (this.s_StfGroupSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_StfGroupSQL};\r\n        }\r\n        \r\n\r\n        if (branch != \"\"){ \r\n         var lblcriteria = \" Branches:\" + branch.join(\",\") + \"; \"        } \r\n             else{lblcriteria = \"All Branches\"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (stfgroup != \"\"){ \r\n             lblcriteria =lblcriteria + \" Staff Groups: \" + stfgroup.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Staff Groups,\"}\r\n         \r\n        \r\n             fQuery = fQuery + \"Group by UniqueID, AccountNo, STF_CODE, StaffGroup, [LastName],FirstName, Address1, Address2, Suburb, Postcode, CommencementDate, TerminationDate, HRS_DAILY_MIN, HRS_DAILY_MAX, HRS_WEEKLY_MIN, HRS_WEEKLY_MAX\"\r\n                                                            \r\n        fQuery = fQuery + \" ORDER BY s.[LastName], s.[FirstName]\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n    //console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"LQO71slAArEu36fo\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n    InActiveStaffListing(manager,branch,stfgroup){\r\n        \r\n        \r\n        var fQuery = \"Select s.UniqueID, AccountNo, STF_CODE, StaffGroup, [LastName], UPPER(s.[LastName]) + ', ' + CASE WHEN FirstName <> '' THEN FirstName  ELSE ' '  END as StaffName, Address1, Address2, Suburb, Postcode, CONVERT(nvarchar, CommencementDate,23) as CommencementDate, TerminationDate, HRS_DAILY_MIN, HRS_DAILY_MAX, HRS_WEEKLY_MIN, HRS_WEEKLY_MAX, Stuff ((SELECT '; ' + Detail from PhoneFaxOther pf where pf.PersonID = s.UniqueID For XML path ('')),1, 1, '') [Detail] from Staff s WHERE [Category] = 'STAFF'  AND ([commencementdate] is not null and [terminationdate] is not null) \"\r\n\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"[STF_DEPARTMENT] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"[PAN_Manager] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(stfgroup != \"\"){\r\n            this.s_StfGroupSQL = \"[StaffGroup] in ('\" + stfgroup.join(\"','\")  +  \"')\";            \r\n            if (this.s_StfGroupSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_StfGroupSQL};\r\n        }\r\n        \r\n\r\n        if (branch != \"\"){ \r\n         var lblcriteria = \" Branches: \" + branch.join(\",\") + \"; \"        } \r\n             else{lblcriteria = \" All Branches \"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \" All Managers,\"}\r\n         \r\n         \r\n         if (stfgroup != \"\"){ \r\n             lblcriteria =lblcriteria + \" Staff Groups: \" + stfgroup.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Staff Groups,\"}\r\n         \r\n        \r\n             \r\n             fQuery = fQuery + \"Group by UniqueID, AccountNo, STF_CODE, StaffGroup, [LastName],FirstName, Address1, Address2, Suburb, Postcode, CommencementDate, TerminationDate, HRS_DAILY_MIN, HRS_DAILY_MAX, HRS_WEEKLY_MIN, HRS_WEEKLY_MAX\"                                                 \r\n        fQuery = fQuery + \" ORDER BY s.[LastName], s.[FirstName]\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n    //console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"6NauxB95CSDc096v\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n    ActiveBrokerage_Contractor(manager,branch,stfgroup){\r\n        \r\n        \r\n        var fQuery = \"Select s.UniqueID, AccountNo, STF_CODE, StaffGroup, [LastName], UPPER(s.[LastName]) + ', ' + CASE WHEN FirstName <> '' THEN FirstName  ELSE ' '  END as StaffName, Address1, Address2, Suburb, Postcode, CONVERT(nvarchar, CommencementDate,23) as CommencementDate, TerminationDate, HRS_DAILY_MIN, HRS_DAILY_MAX, HRS_WEEKLY_MIN, HRS_WEEKLY_MAX, Stuff ((SELECT '; ' + Detail from PhoneFaxOther pf where pf.PersonID = s.UniqueID For XML path ('')),1, 1, '') [Detail] from Staff s WHERE [Category] = 'BROKERAGE ORGANISATION'  AND ([commencementdate] is not null and [terminationdate] is null)  \"\r\n\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"[STF_DEPARTMENT] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"[PAN_Manager] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(stfgroup != \"\"){\r\n            this.s_StfGroupSQL = \"[StaffGroup] in ('\" + stfgroup.join(\"','\")  +  \"')\";            \r\n            if (this.s_StfGroupSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_StfGroupSQL};\r\n        }\r\n        \r\n\r\n        if (branch != \"\"){ \r\n         var lblcriteria = \" Branches:\" + branch.join(\",\") + \"; \"        } \r\n             else{lblcriteria = \"All Branches\"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (stfgroup != \"\"){ \r\n             lblcriteria =lblcriteria + \" Staff Groups: \" + stfgroup.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Staff Groups,\"}\r\n         \r\n        \r\n        \r\n             fQuery = fQuery + \"Group by UniqueID, AccountNo, STF_CODE, StaffGroup, [LastName],FirstName, Address1, Address2, Suburb, Postcode, CommencementDate, TerminationDate, HRS_DAILY_MIN, HRS_DAILY_MAX, HRS_WEEKLY_MIN, HRS_WEEKLY_MAX\"                                              \r\n        fQuery = fQuery + \" ORDER BY s.[LastName], s.[FirstName]\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n    //console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"3zUoVBKOkYhdU8Z5\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n\r\n    InActiveBrokerage_Contractor(manager,branch,stfgroup){\r\n        \r\n        \r\n        var fQuery = \"Select s.UniqueID, AccountNo, STF_CODE, StaffGroup, [LastName], UPPER(s.[LastName]) + ', ' + CASE WHEN FirstName <> '' THEN FirstName  ELSE ' '  END as StaffName, Address1, Address2, Suburb, Postcode, CONVERT(nvarchar, CommencementDate,23) as CommencementDate, TerminationDate, HRS_DAILY_MIN, HRS_DAILY_MAX, HRS_WEEKLY_MIN, HRS_WEEKLY_MAX, Stuff ((SELECT '; ' + Detail from PhoneFaxOther pf where pf.PersonID = s.UniqueID For XML path ('')),1, 1, '') [Detail] from Staff s WHERE [Category] = 'BROKERAGE ORGANISATION'  AND ([commencementdate] is not null and [terminationdate] is not null)  \"\r\n\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"[STF_DEPARTMENT] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"[PAN_Manager] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(stfgroup != \"\"){\r\n            this.s_StfGroupSQL = \"[StaffGroup] in ('\" + stfgroup.join(\"','\")  +  \"')\";            \r\n            if (this.s_StfGroupSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_StfGroupSQL};\r\n        }\r\n        \r\n\r\n        if (branch != \"\"){ \r\n         var lblcriteria = \" Branches:\" + branch.join(\",\") + \"; \"        } \r\n             else{lblcriteria = \"All Branches\"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (stfgroup != \"\"){ \r\n             lblcriteria =lblcriteria + \" Staff Groups: \" + stfgroup.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Staff Groups,\"}\r\n         \r\n        \r\n        \r\n             fQuery = fQuery + \"Group by UniqueID, AccountNo, STF_CODE, StaffGroup, [LastName],FirstName, Address1, Address2, Suburb, Postcode, CommencementDate, TerminationDate, HRS_DAILY_MIN, HRS_DAILY_MAX, HRS_WEEKLY_MIN, HRS_WEEKLY_MAX\"                                               \r\n        fQuery = fQuery + \" ORDER BY s.[LastName], s.[FirstName]\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n   // console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"htp5rccUteYVbXt6\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n    ActiveVolunters(manager,branch,stfgroup){\r\n        \r\n        \r\n        var fQuery = \"Select s.UniqueID, AccountNo, STF_CODE, StaffGroup, [LastName], UPPER(s.[LastName]) + ', ' + CASE WHEN FirstName <> '' THEN FirstName  ELSE ' '  END as StaffName, Address1, Address2, Suburb, Postcode, CONVERT(nvarchar, CommencementDate,23) as CommencementDate, TerminationDate, HRS_DAILY_MIN, HRS_DAILY_MAX, HRS_WEEKLY_MIN, HRS_WEEKLY_MAX, Stuff ((SELECT '; ' + Detail from PhoneFaxOther pf where pf.PersonID = s.UniqueID For XML path ('')),1, 1, '') [Detail] from Staff s WHERE [Category] = 'VOLUNTEER'   AND ([commencementdate] is not null and [terminationdate] is null)  \"\r\n\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"[STF_DEPARTMENT] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"[PAN_Manager] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(stfgroup != \"\"){\r\n            this.s_StfGroupSQL = \"[StaffGroup] in ('\" + stfgroup.join(\"','\")  +  \"')\";            \r\n            if (this.s_StfGroupSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_StfGroupSQL};\r\n        }\r\n        \r\n\r\n        if (branch != \"\"){ \r\n         var lblcriteria = \" Branches:\" + branch.join(\",\") + \"; \"        } \r\n             else{lblcriteria = \"All Branches\"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (stfgroup != \"\"){ \r\n             lblcriteria =lblcriteria + \" Staff Groups: \" + stfgroup.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Staff Groups,\"}\r\n         \r\n        \r\n             fQuery = fQuery + \"Group by UniqueID, AccountNo, STF_CODE, StaffGroup, [LastName],FirstName, Address1, Address2, Suburb, Postcode, CommencementDate, TerminationDate, HRS_DAILY_MIN, HRS_DAILY_MAX, HRS_WEEKLY_MIN, HRS_WEEKLY_MAX\"\r\n                                                            \r\n        fQuery = fQuery + \" ORDER BY s.[LastName], s.[FirstName]\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n    //console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"JlsnP7fNb9LOGeVw\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n\r\n    InActiveVolunteers(manager,branch,stfgroup){\r\n        \r\n        \r\n        var fQuery = \"Select s.UniqueID, AccountNo, STF_CODE, StaffGroup, [LastName], UPPER(s.[LastName]) + ', ' + CASE WHEN FirstName <> '' THEN FirstName  ELSE ' '  END as StaffName, Address1, Address2, Suburb, Postcode, CONVERT(nvarchar, CommencementDate,23) as CommencementDate, TerminationDate, HRS_DAILY_MIN, HRS_DAILY_MAX, HRS_WEEKLY_MIN, HRS_WEEKLY_MAX, Stuff ((SELECT '; ' + Detail from PhoneFaxOther pf where pf.PersonID = s.UniqueID For XML path ('')),1, 1, '') [Detail] from Staff s WHERE [Category] = 'VOLUNTEER'   AND ([commencementdate] is not null and [terminationdate] is not null)  \"\r\n\r\n        if (branch != \"\"){\r\n            this.s_BranchSQL = \"[STF_DEPARTMENT] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL};            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"[PAN_Manager] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n        } \r\n        if(stfgroup != \"\"){\r\n            this.s_StfGroupSQL = \"[StaffGroup] in ('\" + stfgroup.join(\"','\")  +  \"')\";            \r\n            if (this.s_StfGroupSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_StfGroupSQL};\r\n        }\r\n        \r\n\r\n        if (branch != \"\"){ \r\n         var lblcriteria = \" Branches:\" + branch.join(\",\") + \"; \"        } \r\n             else{lblcriteria = \"All Branches\"}\r\n         \r\n          if (manager != \"\"){\r\n             lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n         \r\n         \r\n         if (stfgroup != \"\"){ \r\n             lblcriteria =lblcriteria + \" Staff Groups: \" + stfgroup.join(\",\")+ \"; \"}\r\n             else{lblcriteria = lblcriteria + \"All Staff Groups,\"}\r\n         \r\n        \r\n             fQuery = fQuery + \"Group by UniqueID, AccountNo, STF_CODE, StaffGroup, [LastName],FirstName, Address1, Address2, Suburb, Postcode, CommencementDate, TerminationDate, HRS_DAILY_MIN, HRS_DAILY_MAX, HRS_WEEKLY_MIN, HRS_WEEKLY_MAX\"\r\n                                                            \r\n        fQuery = fQuery + \" ORDER BY s.[LastName], s.[FirstName]\"\r\n    /*   \r\n    console.log(s_BranchSQL)\r\n    console.log(s_CategorySQL)\r\n    console.log(s_CoordinatorSQL)*/\r\n    //console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"lcl6jxcRDYzgs7kJ\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n\r\n    StaffPermissions(branch,manager,region,program,state){\r\n        \r\n        \r\n        var fQuery = \"SELECT [NAME], CASE WHEN [SYSTEM] = 999 THEN 'YES' ELSE 'NO' END AS [SYSTEM ADMINISTRATOR], CASE WHEN RECIPIENTS = 0 THEN 'NONE'      WHEN RECIPIENTS = 1 THEN 'LEVEL1'      WHEN RECIPIENTS = 101 THEN 'LEVEL2'      WHEN RECIPIENTS = 201 THEN 'LEVEL3'      WHEN RECIPIENTS = 901 THEN 'LEVEL4'      WHEN RECIPIENTS = 951 THEN 'LEVEL5'      WHEN RECIPIENTS = 999 THEN 'LEVEL6' END AS [RECIPIENTS ACCESS LEVEL], CASE WHEN ROSTER = 0 THEN 'NONE'      WHEN ROSTER = 1 THEN 'LEVEL1'      WHEN ROSTER = 101 THEN 'LEVEL2'      WHEN ROSTER = 121 THEN 'LEVEL3'      WHEN ROSTER = 201 THEN 'LEVEL4'      WHEN ROSTER = 251 THEN 'LEVEL5'      WHEN ROSTER = 501 THEN 'LEVEL6'      WHEN ROSTER = 999 THEN 'LEVEL7' END AS [ROSTER ACCESS LEVEL], CASE WHEN STAFF = 0 THEN 'NONE'      WHEN STAFF = 251 THEN 'LEVEL1'      WHEN STAFF = 301 THEN 'LEVEL2'      WHEN STAFF = 901 THEN 'LEVEL3'      WHEN STAFF = 999 THEN 'LEVEL4' END AS [STAFF ACCESS LEVEL], CASE WHEN DAYMANAGER = 0 THEN 'NONE'      WHEN DAYMANAGER = 1 THEN 'LEVEL1'      WHEN DAYMANAGER = 101 THEN 'LEVEL2'      WHEN DAYMANAGER = 121 THEN 'LEVEL3'      WHEN DAYMANAGER = 201 THEN 'LEVEL4'      WHEN DAYMANAGER = 251 THEN 'LEVEL5'      WHEN DAYMANAGER = 301 THEN 'LEVEL6'      WHEN DAYMANAGER = 999 THEN 'LEVEL7' END AS [DAYMANAGER ACCESS LEVEL], CASE WHEN [RECIPMGTVIEW] = 1 THEN 'YES' ELSE 'NO' END AS [RECIPIENT MANAGEMENT VIEW], CASE WHEN [ACCESSHRINFO] = 1 THEN 'YES' ELSE 'NO' END AS [ACCESS HR], CASE WHEN [CASENOTESREADONLY] = 1 THEN 'YES' ELSE 'NO' END AS [CASE NOTES VIEW ONLY], CASE WHEN [ADDNEWRECIPIENT] = 1 THEN 'YES' ELSE 'NO' END AS [ADD NEW RECIPIENTS], CASE WHEN [CHANGEMASTERROSTER] = 1 THEN 'YES' ELSE 'NO' END AS [CHANGE MASTER ROSTER], CASE WHEN [OWNROSTERONLY] = 1 THEN 'YES' ELSE 'NO' END AS [LOCK TO OWN ROSTER], CASE WHEN [APPROVEDAYMANAGER] = 1 THEN 'YES' ELSE 'NO' END AS [APPROVE IN DAYMANAGER], CASE WHEN [MANUALROSTERCOPY] = 999 THEN 'YES' ELSE 'NO' END AS [MANUAL COPY ROSTER], CASE WHEN [AUTOCOPYROSTER] = 999 THEN 'YES' ELSE 'NO' END AS [AUTO COPY ROSTER],CASE WHEN [TIMESHEET] = 999 THEN 'YES' ELSE 'NO' END AS [TIMESHEETS], CASE WHEN [SUGGESTEDTIMESHEETS] = 999 THEN 'YES' ELSE 'NO' END AS [SUGGESTED TIMESHEETS], CASE WHEN [TIMESHEETUPDATE] = 999 THEN 'YES' ELSE 'NO' END AS [PAY AND BILLING UPDATE], CASE WHEN [FINANCIAL] = 999 THEN 'YES' ELSE 'NO' END AS [FINANCIAL], CASE WHEN [STATISTICS] = 999 THEN 'YES' ELSE 'NO' END AS [LISTINGS], CASE WHEN [INVOICEENQUIRY] = 999 THEN 'YES' ELSE 'NO' END AS [INVOICE ENQUIRY], VIEWFILTERBRANCHES, VIEWFILTER AS VIEWFILTERPROGRAMS, VIEWFILTERCATEGORY, VIEWFILTERCOORD, VIEWFILTERREMINDERS, RECIPIENTRECORDVIEW, STAFFRECORDVIEW FROM USERINFO WHERE (EndDate Is Null OR EndDate >= '2020/01/01')  \"\r\n        var lblcriteria;\r\n    /*    if (branch != \"\"){\r\n            this.s_BranchSQL = \"R.[BRANCH] in ('\" + branch.join(\"','\")  +  \"')\";\r\n            if (this.s_BranchSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_BranchSQL}\r\n            \r\n        } \r\n         if(manager != \"\"){\r\n            this.s_CoordinatorSQL = \"R.[RECIPIENT_COOrdinator] in ('\" + manager.join(\"','\")  +  \"')\";            \r\n            if (this.s_CoordinatorSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CoordinatorSQL};\r\n            \r\n        } \r\n        if(region != \"\"){\r\n            this.s_CategorySQL = \"R.[AgencyDefinedGroup] in ('\" + region.join(\"','\")  +  \"')\";            \r\n            if (this.s_CategorySQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_CategorySQL}\r\n        }\r\n        if(program != \"\"){\r\n            this.s_ProgramSQL = \" (RecipientPrograms.[Program] in ('\" + program.join(\"','\")  +  \"'))\";\r\n            if (this.s_ProgramSQL != \"\"){ fQuery = fQuery + \" AND \" + this.s_ProgramSQL}\r\n        } \r\n\r\n        \r\n        if (branch != \"\"){ \r\n            lblcriteria = \"Branches:\" + branch.join(\",\") + \"; \"        } \r\n            else{lblcriteria = \" All Branches \"}\r\n        \r\n         if (manager != \"\"){\r\n            lblcriteria =lblcriteria + \" Manager: \" + manager.join(\",\")+ \"; \"}\r\n            else{lblcriteria = lblcriteria + \"All Managers,\"}\r\n        \r\n        \r\n        if (region != \"\"){ \r\n            lblcriteria =lblcriteria + \" Regions: \" + region.join(\",\")+ \"; \"}\r\n            else{lblcriteria = lblcriteria + \"All Regions,\"}\r\n        \r\n       \r\n        if (program != \"\"){ \r\n            lblcriteria =lblcriteria + \" Programs \" + program.join(\",\")+ \"; \"}\r\n            else{lblcriteria = lblcriteria + \"All Programs.\"}\r\n        \r\n             */                                               \r\n        fQuery = fQuery + \"ORDER BY [NAME] \"\r\n        \r\n    //console.log(fQuery)\r\n\r\n    this.drawerVisible = true;\r\n\r\n    const data =    {\r\n        \"template\": {  \"_id\":\"cHHdyk2ACQuXsxFw\"  },    \r\n        \"options\": {\r\n            \"reports\": { \"save\": false },\r\n         \r\n            \"sql\":fQuery,\r\n            \"Criteria\":lblcriteria \r\n        }\r\n    }\r\n\r\n\r\n    const headerDict = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',            \r\n    }\r\n    \r\n    const requestOptions = {\r\n        headers: new HttpHeaders(headerDict)\r\n    };\r\n    \r\n    this.http.post('http://localhost:5488/api/report', JSON.stringify(data), { headers: requestOptions.headers, responseType: 'blob' })\r\n    .subscribe((blob: any) => {\r\n        console.log(blob);\r\n        \r\n        let _blob: Blob = blob;\r\n       \r\n        let fileURL = URL.createObjectURL(_blob);\r\n        this.pdfTitle = \"Reports.pdf\"\r\n        this.tryDoctype = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n    }, err => {\r\n        console.log(err);\r\n    });        \r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n} //ReportsAdmin ","<div (click)=\"PrintID(this.id)\">\r\n    \r\n     \r\n<div nz-layout>\r\n    <div>\r\n        <div nz-col nzSpan=\"24\">\r\n            <nz-tabset  [nzTabPosition]=\"'top'\" [nzType]=\"'card'\" >            \r\n                <nz-tab nzTitle=\"Recipient Listings\"   >                     \r\n                        <div nz row>\r\n                            <div nz-col [nzSpan]=\"24\">\r\n                                <div nz-col [nzSpan]=\"8\">\r\n                                    <ul nz-menu nzMode=\"horizontal\">\r\n                                        <li nz-menu-item >\r\n                                            <i nz-icon nzType=\"user\" ></i>\r\n                                            <strong>STANDARD LISTINGS</strong> \r\n                                            <div>                                        \r\n                                                <button nz-button nzType=\"default\"  nzJustify=\"start\"  id=\"btn-refferallist\" (click)=\"showModal()\">\r\n                                                    <i nz-icon nzType=\"printer\"  ></i>\r\n                                                    Refferal List\r\n                                                </button> \r\n                                            </div>\r\n                                            <div>                                        \r\n                                                <button nz-button nzType=\"default\" id=\"btn-activerecipient\" (click)=\"showModal()\" >\r\n                                                <i nz-icon nzType=\"printer\"></i>\r\n                                                Active Recipient List\r\n                                            </button> \r\n                                            </div>\r\n                                            <div>                                        \r\n                                                <button nz-button nzType=\"default\" id=\"btn-inactiverecipient\" (click)=\"showModal()\" >\r\n                                                <i nz-icon nzType=\"printer\"></i>\r\n                                                InActive Recipient List\r\n                                            </button> \r\n                                            </div>\r\n                                            <div>                                        \r\n                                                <button nz-button nzType=\"default\" id=\"btn-careerlist\" (click)=\"showModal()\" >\r\n                                                <i nz-icon nzType=\"printer\"></i>\r\n                                                Carer List\r\n                                            </button> \r\n                                                </div>\r\n                                                <div>                                        \r\n                                                    <button nz-button nzType=\"default\" id=\"btn-onlybillingclients\" (click)=\"showModal()\" >\r\n                                                    <i nz-icon nzType=\"printer\"></i>\r\n                                                    Only Billing Clients List\r\n                                                </button> \r\n                                                </div>\r\n                                                <div>                                        \r\n                                                    <button nz-button nzType=\"default\" id=\"btn-associatelist\" (click)=\"showModal()\" >\r\n                                                    <i nz-icon nzType=\"printer\"></i>\r\n                                                    Associate/Other List\r\n                                                </button> \r\n                                                </div>\r\n                                                <div>                                        \r\n                                                    <button nz-button nzType=\"default\" id=\"btn-refferalduringperiod\" (click)=\"showModal()\" >\r\n                                                    <i nz-icon nzType=\"printer\"></i>\r\n                                                    Refferals During Period\r\n                                                </button> \r\n                                                </div>\r\n                                                <div>                                        \r\n                                                    <button nz-button nzType=\"default\" id=\"btn-adminduringperiod\" (click)=\"showModal()\" >\r\n                                                    <i nz-icon nzType=\"printer\"></i>\r\n                                                    Admissions During Period\r\n                                                </button> \r\n                                                </div>\r\n                                                <div>                                        \r\n                                                    <button nz-button nzType=\"default\" id=\"btn-dischargeduringperiod\" (click)=\"showModal()\" >\r\n                                                    <i nz-icon nzType=\"printer\"></i>\r\n                                                    Discharges During Period\r\n                                                </button> \r\n                                                </div>\r\n                                                <div>                                        \r\n                                                    <button nz-button nzType=\"default\" id=\"btn-unallocatedbookings\" (click)=\"showModal()\" >\r\n                                                    <i nz-icon nzType=\"printer\"></i>\r\n                                                    Unfilled Bookings\r\n                                                </button> \r\n                                                </div>\r\n                                                <div>                                        \r\n                                                    <button nz-button nzType=\"default\" id=\"btn-recipientroster\" (click)=\"showModal()\" >\r\n                                                    <i nz-icon nzType=\"printer\"></i>\r\n                                                    Recipient Roster\r\n                                                </button> \r\n                                                </div>\r\n                                                <div>                                        \r\n                                                    <button nz-button nzType=\"default\" id=\"btn-recipientMasterroster\" (click)=\"showModal()\" >\r\n                                                    <i nz-icon nzType=\"printer\"></i>\r\n                                                    Recipient Master Roster\r\n                                                </button> \r\n                                                </div>\r\n                                                <div>                                        \r\n                                                    <button nz-button nzType=\"default\" id=\"btn-absentclient\" (click)=\"showModal()\" >\r\n                                                    <i nz-icon nzType=\"printer\"></i>\r\n                                                    Absent Client Status Report\r\n                                                </button> \r\n                                                </div>\r\n                                                <div>                                        \r\n                                                    <button nz-button nzType=\"default\" id=\"btn-suspendedrecipient\" (click)=\"showModal()\" >\r\n                                                    <i nz-icon nzType=\"printer\"></i>\r\n                                                    Suspended Recipient Report\r\n                                                </button> \r\n                                                </div>\r\n                                                <div>                                        \r\n                                                    <button nz-button nzType=\"default\" id=\"btn-vouchersummary\" (click)=\"showModal()\" >\r\n                                                    <i nz-icon nzType=\"printer\"></i>\r\n                                                    Voucher Summary Report\r\n                                                </button> \r\n                                                </div>\r\n                                                <div>                                        \r\n                                                    <button nz-button nzType=\"default\" id=\"btn-transportsummary\" (click)=\"showModal()\" >\r\n                                                    <i nz-icon nzType=\"printer\"></i>\r\n                                                    Transport Summary Report\r\n                                                </button> \r\n                                                </div>\r\n                                                <div>                                        \r\n                                                    <button nz-button nzType=\"default\" id=\"btn-packageusage\" (click)=\"showModal()\" >\r\n                                                    <i nz-icon nzType=\"printer\"></i>\r\n                                                    Package Usage Report\r\n                                                </button> \r\n                                                </div>\r\n                                                <div>                                        \r\n                                                    <button nz-button nzType=\"default\" id=\"btn-unserviced\" (click)=\"showModal()\" >\r\n                                                    <i nz-icon nzType=\"printer\"></i>\r\n                                                    Unserviced Recipient Report\r\n                                                </button> \r\n                                                </div>\r\n                                                <div>                                        \r\n                                                    <button nz-button nzType=\"default\" id=\"btn-timelength\" (click)=\"showModal()\" >\r\n                                                    <i nz-icon nzType=\"printer\"></i>\r\n                                                    Recipient Time Length Report\r\n                                                </button> \r\n                                                </div>\r\n                                                <div>                                        \r\n                                                    <button nz-button nzType=\"default\" id=\"btn-activepackagelist\" (click)=\"showModal()\" >\r\n                                                    <i nz-icon nzType=\"printer\"></i>\r\n                                                    Active Package Report\r\n                                                </button> \r\n                                                </div>                                                                                                                                                                        \r\n                                        </li>                  \r\n                                    </ul>\r\n                                </div>\r\n                                <div nz-col [nzSpan]=\"8\">\r\n                                    <ul nz-menu nzMode=\"horizontal\" >\r\n                                        <li nz-menu-item  >\r\n                                            <i nz-icon nzType=\"user\"></i>\r\n                                            <strong>AGENCY LISTINGS</strong>\r\n                                            <div>                                        \r\n                                                <button nz-button nzType=\"default\" id=\"btn-r-refferallist\" (click)=\"showModal()\" disabled  >\r\n                                                <i nz-icon nzType=\"printer\"></i>\r\n                                                Approved Staff Listing\r\n                                            </button> \r\n                                            </div>\r\n                                            <div>                                        \r\n                                                <button nz-button nzType=\"default\" id=\"btn-r-refferallist\" (click)=\"showModal()\" disabled >\r\n                                                <i nz-icon nzType=\"printer\"></i>\r\n                                                Ashmore Client List\r\n                                            </button> \r\n                                            </div>\r\n                                            \r\n                                            \r\n                                            <div>                                        \r\n                                                <button nz-button nzType=\"default\" id=\"btn-r-refferallist\" (click)=\"showModal()\" disabled >\r\n                                                <i nz-icon nzType=\"printer\"></i>\r\n                                                Palm Beach Client List\r\n                                            </button> \r\n                                            </div>                                            \r\n                                                                                                                                                                                     \r\n                                        </li>                  \r\n                                    </ul>\r\n                                </div>\r\n                                <div nz-col [nzSpan]=\"8\">\r\n                                    <ul nz-menu nzMode=\"horizontal\">\r\n                                        <li nz-menu-item >\r\n                                            <i nz-icon nzType=\"user\"></i>\r\n                                            <strong>USER LISTINGS</strong>\r\n                                            <div>                                        \r\n                                                <button nz-button nzType=\"default\" id=\"btn-r-refferallist\" (click)=\"showModal()\" disabled >\r\n                                                <i nz-icon nzType=\"printer\"></i>\r\n                                                Approved Service Coordinator\r\n                                            </button> \r\n                                            </div>\r\n                                            <div>                                        \r\n                                                <button nz-button nzType=\"default\" id=\"btn-r-refferallist\" (click)=\"showModal()\" disabled >\r\n                                                <i nz-icon nzType=\"printer\"></i>\r\n                                                UnApproved Service Coordinator\r\n                                            </button> \r\n                                            </div>                                                                                                                                    \r\n                                        </li>                  \r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>                             \r\n                </nz-tab>\r\n                <nz-tab nzTitle=\"Recipient Registers\"  >\r\n                    <div nz-row >\r\n                        <div nz-col [nzSpan]=\"24\">\r\n                            <ul nz-menu nzMode=\"horizontal\" disabled>\r\n                                <li nz-menu-item >\r\n                                    <i nz-icon nzType=\"user\"></i>\r\n                                    <strong>RECIPIENT REGISTER</strong>\r\n                                    <div>                                        \r\n                                        <button nz-button nzType=\"default\" id=\"btn-r-refferallist\" (click)=\"showModal()\" >\r\n                                        <i nz-icon nzType=\"printer\"></i>\r\n                                        Lag Time Register\r\n                                    </button> \r\n                                    </div>\r\n                                    <div>                                        \r\n                                        <button nz-button nzType=\"default\" id=\"btn-r-refferallist\" (click)=\"showModal()\" >\r\n                                        <i nz-icon nzType=\"printer\"></i>\r\n                                        Loan Register\r\n                                    </button> \r\n                                    </div> \r\n                                    <div>                                        \r\n                                        <button nz-button nzType=\"default\" id=\"btn-r-refferallist\" (click)=\"showModal()\" >\r\n                                        <i nz-icon nzType=\"printer\"></i>\r\n                                        Progress Notes Register\r\n                                    </button> \r\n                                    </div>\r\n                                    <div>                                        \r\n                                        <button nz-button nzType=\"default\" id=\"btn-r-refferallist\" (click)=\"showModal()\" >\r\n                                        <i nz-icon nzType=\"printer\"></i>\r\n                                        Recipient Service Notes Register\r\n                                    </button> \r\n                                    </div>\r\n                                    <div>                                        \r\n                                        <button nz-button nzType=\"default\" id=\"btn-r-refferallist\" (click)=\"showModal()\" >\r\n                                        <i nz-icon nzType=\"printer\"></i>\r\n                                        Service Plans Register\r\n                                    </button> \r\n                                    </div>\r\n                                    <div>                                        \r\n                                        <button nz-button nzType=\"default\" id=\"btn-r-refferallist\" (click)=\"showModal()\" >\r\n                                        <i nz-icon nzType=\"printer\"></i>\r\n                                        Recipient Care Plans Register\r\n                                    </button> \r\n                                    </div>\r\n                                    <div>                                        \r\n                                        <button nz-button nzType=\"default\" id=\"btn-r-refferallist\" (click)=\"showModal()\" >\r\n                                        <i nz-icon nzType=\"printer\"></i>\r\n                                        Recipient OP Notes Register\r\n                                    </button> \r\n                                    </div>\r\n                                    <div>                                        \r\n                                        <button nz-button nzType=\"default\" id=\"btn-r-refferallist\" (click)=\"showModal()\" >\r\n                                        <i nz-icon nzType=\"printer\"></i>\r\n                                        CDC Package Balance Register\r\n                                        </button> \r\n                                    </div> \r\n                                    <div>                                        \r\n                                        <button nz-button nzType=\"default\" id=\"btn-r-refferallist\" (click)=\"showModal()\" >\r\n                                        <i nz-icon nzType=\"printer\"></i>\r\n                                        CDC Leave Report\r\n                                        </button> \r\n                                    </div>\r\n                                    <div>                                        \r\n                                        <button nz-button nzType=\"default\" id=\"btn-r-refferallist\" (click)=\"showModal()\" >\r\n                                        <i nz-icon nzType=\"printer\"></i>\r\n                                        HAS Report\r\n                                        </button> \r\n                                    </div>\r\n                                    <div>                                        \r\n                                        <button nz-button nzType=\"default\" id=\"btn-r-refferallist\" (click)=\"showModal()\" >\r\n                                        <i nz-icon nzType=\"printer\"></i>\r\n                                        Meal Order Report\r\n                                        </button> \r\n                                    </div>                                                                                                                                  \r\n                                </li>                  \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nz-tab>\r\n                <nz-tab nzTitle=\"Staff Listings\"   >\r\n                    <div nz-row >\r\n                        <div nz-col [nzSpan]=\"8\">\r\n                            <ul nz-menu nzMode=\"horizontal\">\r\n                                <li nz-menu-item >\r\n                                    <i nz-icon nzType=\"user\"></i>\r\n                                    <strong>STANDARD LISTINGS</strong> \r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" id=\"btn-Activestaff\" (click)=\"showModal()\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Active Staff List\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" id=\"btn-ActiveBrokerage\" (click)=\"showModal()\">\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Active Brokerage/Contractor List\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" id=\"btn-Inactivestaff\" (click)=\"showModal()\">\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            InActive Staff List\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" id=\"btn-InactiveVolunteer\" (click)=\"showModal()\">\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            InActive Volunteer\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" id=\"btn-InactiveBrokerage\" (click)=\"showModal()\">\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            InActive Brokerage/Contractor \r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" id=\"btn-Activevolunteers\" (click)=\"showModal()\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Active Volunteers \r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" id=\"btn-Userpermissions\" (click)=\"showModal()\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff User Permissions \r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" (click)=\"showModal()\" disabled >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Unavailability\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" (click)=\"showModal()\" disabled>\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Roster\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" (click)=\"showModal()\" disabled>\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Master Roster\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" (click)=\"showModal()\" disabled>\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Loan Register\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" (click)=\"showModal()\" disabled>\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Competency Renewal Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" (click)=\"showModal()\" disabled>\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Not Worked Register\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" (click)=\"showModal()\" disabled>\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Leaves Register\r\n                                            </button>\r\n                                    </div>                                                                        \r\n                                </li>                  \r\n                            </ul>\r\n                        </div>\r\n                        <div nz-col [nzSpan]=\"8\">\r\n                            <ul nz-menu nzMode=\"horizontal\">\r\n                                <li nz-menu-item >\r\n                                    <i nz-icon nzType=\"user\"></i>\r\n                                    <strong>AGENCY LISTINGS</strong>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" (click)=\"showModal()\" disabled >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Competency Expiry\r\n                                            </button>\r\n                                    </div>                                    \r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" (click)=\"showModal()\" disabled>\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Hours\r\n                                            </button>\r\n                                    </div>\r\n                                                                                                                                      \r\n                                </li>                  \r\n                            </ul>\r\n                        </div>\r\n                        <div nz-col [nzSpan]=\"8\">\r\n                            <ul nz-menu nzMode=\"horizontal\">\r\n                                <li nz-menu-item >\r\n                                    <i nz-icon nzType=\"user\"></i>\r\n                                    <strong>USER LISTINGS</strong>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" (click)=\"showModal()\" disabled >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Competencies\r\n                                            </button>\r\n                                    </div>\r\n                                                                                                                                       \r\n                                </li>                  \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                </nz-tab>\r\n                <nz-tab nzTitle=\"HR Reports\"   >\r\n                    <div nz-row >\r\n                        <div nz-col [nzSpan]=\"24\">\r\n                            <ul nz-menu nzMode=\"horizontal\">\r\n                                <li nz-menu-item >\r\n                                    <i nz-icon nzType=\"user\"></i>\r\n                                    <strong>HUMAN RESOURCE REPORTS </strong> \r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Competency Register\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                           Competency Renewal Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Training Register\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Incident Register\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Operational Notes Register\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            HR Notes Register\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Time & Attendence Comparison\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Availability Register\r\n                                            </button>\r\n                                    </div>\r\n                                                                                                            \r\n                                </li>                  \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nz-tab>\r\n                <nz-tab nzTitle=\"Financial/Output Reports\"   >\r\n                    <div nz-row >\r\n                        <div nz-col [nzSpan]=\"8\">\r\n                            <ul nz-menu nzMode=\"horizontal\">\r\n                                <li nz-menu-item >\r\n                                    <i nz-icon nzType=\"user\"></i>\r\n                                    <strong>PROGRAM & Activity REPORTS </strong> \r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Program Activity Spread\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Program Staff Utilised\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Program Recipient Serviced\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Program Billing Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Program Recipient Budget(IND PKG)\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Program Budget Audit Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Program Summary Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Activity Recipient Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Activity Staff Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Activity Group Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Dataset Activity Analysis Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Unbilled Items Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Funding Audit Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Dataset Activity Summary Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Dataset RecipientUnit Cost Report\r\n                                            </button>\r\n                                    </div>                                                                        \r\n                                </li>                  \r\n                            </ul>\r\n                        </div>\r\n                        <div nz-col [nzSpan]=\"8\">\r\n                            <ul nz-menu nzMode=\"horizontal\">\r\n                                <li nz-menu-item >\r\n                                    <i nz-icon nzType=\"user\"></i>\r\n                                    <strong>STAFF REPORTS </strong>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Pays\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Program Pay Type\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Funder Payroll Type\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Date Program\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Allowances\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Program Utilisation\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Clients Serviced\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Admin Report\r\n                                            </button>\r\n                                    </div> \r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Activity Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Staff Daily Hours Report\r\n                                            </button>\r\n                                    </div> \r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Award Staff Pay Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Award Staff Program Pay Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Pay Type Program Report\r\n                                            </button>\r\n                                    </div>                                                                                                  \r\n                                </li>                  \r\n                            </ul>\r\n                        </div>\r\n                        <div nz-col [nzSpan]=\"8\">\r\n                            <ul nz-menu nzMode=\"horizontal\">\r\n                                <li nz-menu-item >\r\n                                    <i nz-icon nzType=\"user\"></i>\r\n                                    <strong>RECIPIENT REPORTS </strong>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Recipient Service Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Recipient Staff Usage Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Recipient Pay Type Report\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Recipient Program Utilisation \r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Recipient Unused Funding Report\r\n                                            </button>\r\n                                    </div>                                                                                                                                       \r\n                                </li>                  \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                \r\n                </nz-tab>            \r\n                <nz-tab nzTitle=\"System Reports\"   >\r\n                    <div nz-row >\r\n                        <div nz-col [nzSpan]=\"24\">\r\n                            <ul nz-menu nzMode=\"horizontal\">\r\n                                <li nz-menu-item >\r\n                                    <i nz-icon nzType=\"user\"></i>\r\n                                    <strong>SYSTEM REPORTS </strong> \r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            AUdit Register\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            MTA Register\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Program Activity Status Audit\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            Roster Overlap Register\r\n                                            </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button nz-button nzType=\"default\" >\r\n                                            <i nz-icon nzType=\"printer\"></i>\r\n                                            MTA Attendence Verification\r\n                                            </button>\r\n                                    </div>\r\n                                                                                                            \r\n                                </li>                  \r\n                            </ul>\r\n                        </div>\r\n                    </div> \r\n                </nz-tab>\r\n                \r\n            </nz-tabset>\r\n        </div>  \r\n        \r\n    </div>\r\n    <div>\r\n        \r\n        \r\n        <nz-modal\r\n            nzWidth=\"768px\"\r\n            [nzStyle]=\"{ top: '20px' }\"\r\n            [(nzVisible)]=\"isVisibleTop\"\r\n            nzTitle=\"Reporting Criteria\"\r\n            (nzOnCancel)=\"handleCancelTop()\"\r\n            (nzOnOk)=\"handleOkTop()\"\r\n            >\r\n            <div>\r\n                <nz-tabset [nzTabPosition]=\"'top'\" [nzType]=\"'card'\">\r\n                    <nz-tab  nzTitle=\"Date & Programs\">\r\n                        <div nz-row>\r\n                            <div nz-col nzSpan=\"24\">\r\n                                <label><i nz-icon nzType=\"calendar\" nzTheme=\"outline\"></i> Date </label>\r\n                                <nz-date-picker [(ngModel)]=\"startdate\" nzPlaceHolder = \"Start Date\" ></nz-date-picker>\r\n                                 <nz-date-picker [(ngModel)]=\"enddate\" nzPlaceHolder= \"End Date\"></nz-date-picker>                                 \r\n                            </div>\r\n                        </div>\r\n                        <div nz-row [formGroup]=\"inputForm\">\r\n                            <div nz-row> \r\n                                \r\n                                <div nz-col nzSpan=\"6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label><i nz-icon nzType=\"solution\" nzTheme=\"outline\"></i> Programs </label>\r\n                                        <label class=\"checks\" nz-checkbox formControlName=\"allPrograms\">All Programs</label>\r\n                                        <nz-select formControlName=\"programsArr\" nzMode=\"multiple\" [nzDisabled]=\"inputForm.value.allPrograms\">\r\n                                            <nz-option *ngFor=\"let option of programsArr\" [nzLabel]=\"option\" [nzValue]=\"option\"></nz-option> \r\n                                        </nz-select>\r\n                                        \r\n                                    </div>\r\n                                </div>                                                                                       \r\n                                <div nz-col nzSpan=\"6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label><i nz-icon nzType=\"environment\" nzTheme=\"outline\"></i>  Branches</label>\r\n                                        <label class=\"checks\" nz-checkbox formControlName=\"allBranches\">All Branches</label>\r\n                                        <nz-select formControlName=\"branchesArr\"  nzMode=\"multiple\" [nzDisabled]=\"inputForm.value.allBranches\">\r\n                                            <nz-option *ngFor=\"let option of branchesArr\" [nzLabel]=\"option\" [nzValue]=\"option\"></nz-option>\r\n                                        </nz-select>\r\n                                        \r\n                                    </div>\r\n                                </div>                                                           \r\n                            \r\n                                <div nz-col nzSpan=\"6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label><i nz-icon nzType=\"user\" nzTheme=\"outline\"></i> Managers </label>\r\n                                        <label class=\"checks\" nz-checkbox formControlName=\"allManager\">All Managers</label>\r\n                                        <nz-select formControlName=\"managersArr\" nzMode=\"multiple\" [nzDisabled]=\"inputForm.value.allManager\">\r\n                                            <nz-option *ngFor=\"let option of managersArr\" [nzLabel]=\"option\" [nzValue]=\"option\"></nz-option>\r\n                                        </nz-select>                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div nz-col nzSpan=\"6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label><i nz-icon nzType=\"apartment\" nzTheme=\"outline\"></i> Service Regions</label>\r\n                                        <label class=\"checks\" nz-checkbox formControlName=\"allServiceRegion\">All Regions</label>                                        \r\n                                        <nz-select formControlName=\"serviceRegionsArr\"  nzMode=\"multiple\" [nzDisabled]=\"inputForm.value.allServiceRegion\">\r\n                                            <nz-option *ngFor=\"let option of serviceRegionsArr\" [nzLabel]=\"option\" [nzValue]=\"option\"></nz-option>\r\n                                        </nz-select>                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                    </nz-tab>\r\n                    <nz-tab  nzTitle=\"Funders & States\" >\r\n                        <div nz-row [formGroup]=\"inputForm\">                                                        \r\n                                <div nz-col nzSpan=\"6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label><i nz-icon nzType=\"bank\" nzTheme=\"outline\"></i> Funders </label>\r\n                                        <label class=\"checks\" nz-checkbox formControlName=\"allFunders\">All Funders</label>\r\n                                        <nz-select formControlName=\"fundersArr\" nzMaxTagCount=\"4\" nzMode=\"multiple\" [nzDisabled]=\"inputForm.value.allFunders\">\r\n                                            <nz-option *ngFor=\"let option of fundersArr\" [nzLabel]=\"option\" [nzValue]=\"option\"></nz-option>\r\n                                        </nz-select>\r\n                                        \r\n                                    </div>\r\n                                </div>                                \r\n                                    <div nz-col nzSpan=\"6\">\r\n                                        <div class=\"form-group\" >\r\n                                            <label><i nz-icon nzType=\"apartment\" nzTheme=\"outline\"></i>Svc Providers</label>\r\n                                            <label class=\"checks\" nz-checkbox formControlName=\"allSvcProviders\">All Svc Providers</label>\r\n                                            <nz-select formControlName=\"svcprovidersArr\"  nzMode=\"multiple\" [nzDisabled]=\"inputForm.value.allSvcProviders\">\r\n                                                <nz-option *ngFor=\"let option of svcprovidersArr\" [nzLabel]=\"option\" [nzValue]=\"option\" ></nz-option>\r\n                                            </nz-select>                                                                   \r\n                                        </div>\r\n                                    </div>\r\n                                                                                            \r\n                                <div nz-col nzSpan=\"6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label><i nz-icon nzType=\"environment\" nzTheme=\"outline\"></i>  Outlets</label>\r\n                                        <label class=\"checks\" nz-checkbox formControlName=\"allOutlets\">All Outlets</label>\r\n                                        \r\n                                        <nz-select formControlName=\"outletsArr\"  nzMode=\"multiple\" [nzDisabled]=\"inputForm.value.allOutlets\">\r\n                                            <nz-option *ngFor=\"let option of outletsArr\" [nzLabel]=\"option\" [nzValue]=\"option\"></nz-option>\r\n                                        </nz-select>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div nz-col nzSpan=\"6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label><i nz-icon nzType=\"bank\" nzTheme=\"outline\"></i> State </label>\r\n                                        <label class=\"checks\" nz-checkbox formControlName=\"allState\">All State</label>\r\n                                        <nz-select formControlName=\"statesArr\" nzMaxTagCount=\"4\" nzMode=\"multiple\" [nzDisabled]=\"inputForm.value.allState\">\r\n                                            <nz-option *ngFor=\"let option of statesArr\" [nzLabel]=\"option\" [nzValue]=\"option\"></nz-option>\r\n                                        </nz-select>\r\n                                        \r\n                                    </div>\r\n                                </div>                                \r\n                        </div>\r\n                              \r\n                    </nz-tab>\r\n                    <nz-tab  nzTitle=\"Staff\" > \r\n                        <div nz-row >\r\n\r\n                        </div>\r\n                        <div nz-row [formGroup]=\"inputForm\">    \r\n                            <div nz-col nzSpan=\"6\">\r\n                                <div class=\"form-group\">\r\n                                    <label><i nz-icon nzType=\"bank\" nzTheme=\"outline\"></i> Staff Group </label>\r\n                                    <label class=\"checks\" nz-checkbox formControlName=\"allGroups\">All Groups </label>\r\n                                    <nz-select formControlName=\"staffgroupsArr\" nzMaxTagCount=\"4\" nzMode=\"multiple\" [nzDisabled]=\"inputForm.value.allGroups\">\r\n                                        <nz-option *ngFor=\"let option of staffgroupsArr\" [nzLabel]=\"option\" [nzValue]=\"option\"></nz-option>\r\n                                    </nz-select>                                    \r\n                                </div>\r\n                            </div>\r\n                            <div nz-col nzSpan=\"6\">\r\n                                <div class=\"form-group\">\r\n                                    <label><i nz-icon nzType=\"bank\" nzTheme=\"outline\"></i> Staff  </label>\r\n                                    <label class=\"checks\" nz-checkbox formControlName=\"allStaff\">All Staff </label>\r\n                                    <nz-select formControlName=\"staffArr\" nzMaxTagCount=\"4\" nzMode=\"multiple\" [nzDisabled]=\"inputForm.value.allStaff\">\r\n                                        <nz-option *ngFor=\"let option of staffArr\" [nzLabel]=\"option\" [nzValue]=\"option\"></nz-option>\r\n                                    </nz-select>                                    \r\n                                </div>\r\n                            </div>\r\n                                                                                                       \r\n                        </div> \r\n                    </nz-tab>\r\n                    \r\n                </nz-tabset>                        \r\n            </div>\r\n        </nz-modal>\r\n    \r\n\r\n    </div>\r\n    \r\n</div>\r\n\r\n\r\n</div>\r\n    \r\n<nz-drawer [nzWidth]=\"1000\" [nzClosable]=\"true\" [nzVisible]=\"drawerVisible\" nzPlacement=\"right\" [nzTitle]=\"pdfTitle\" (nzOnClose)=\"handleCancelTop()\">\r\n    <div nz-row>\r\n        <iframe *ngIf=\"tryDoctype\" [src]=\"tryDoctype\" width=\"950\" height=\"600\"></iframe> \r\n    </div>\r\n\r\n    \r\n\r\n</nz-drawer>","import { Component, OnInit, OnDestroy, Input, ViewChild, AfterViewInit } from '@angular/core'\r\nimport { FullCalendarComponent, CalendarOptions } from '@fullcalendar/angular';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged, takeUntil} from 'rxjs/operators';\r\nimport { StaffService, GlobalService } from '@services/index';\r\n\r\nimport startOfMonth from 'date-fns/startOfMonth';\r\nimport endOfMonth from 'date-fns/endOfMonth';\r\nimport format from 'date-fns/format';\r\nimport * as moment from 'moment';\r\nimport * as $ from 'jquery';\r\n\r\n@Component({\r\n    styles: [`\r\n        .calendar{\r\n            height:80vh;\r\n            position:relative;\r\n        }\r\n        .date-title{\r\n            font-family: 'Marmelad', sans-serif;\r\n            text-align: center;\r\n            font-size: 2rem;\r\n        }\r\n        nz-button-group{\r\n            float: left;\r\n            margin: 1rem 0 0 0;\r\n        }\r\n    `],\r\n    templateUrl: './rosters.html'\r\n})\r\n\r\n\r\nexport class RostersAdmin implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n    // @ViewChild('calendar', { static: false }) calendarComponent: FullCalendarComponent;\r\n\r\n    // references the #calendar in the template\r\n    @ViewChild('calendar') calendarComponent: FullCalendarComponent;\r\n\r\n    calendarOptions: CalendarOptions = {\r\n        initialView: 'timeGridMonth',\r\n        plugins: [dayGridPlugin,timeGridPlugin,interactionPlugin],\r\n        weekends: true,\r\n        allDaySlot: false,\r\n        fixedWeekCount: false,\r\n        editable: false,\r\n        eventStartEditable: false,\r\n        eventResizableFromStart: false,\r\n        duration: {\r\n            months: 1           \r\n        },\r\n        headerToolbar: {\r\n            left: '',\r\n            center: '',\r\n            right: ''\r\n        },\r\n        events: [],\r\n        height:'100%',\r\n        scrollTime: '',\r\n        slotMinTime: '07:00:00',\r\n        select: function(info){\r\n\r\n        },\r\n        eventClick: function(info) {\r\n            console.log(info)\r\n        },\r\n        views: {\r\n            timeGridMonth: {\r\n              type: 'timeGrid',\r\n              duration: { \r\n                  month: 1\r\n              },\r\n              dayHeaderFormat: { day: '2-digit' },\r\n\r\n              slotDuration: '00:05:00',\r\n              buttonText: '4 day',              \r\n            }            \r\n        }        \r\n    };\r\n\r\n    calendarPlugins = [dayGridPlugin,timeGridPlugin,interactionPlugin]; // important!\r\n\r\n    someMethod() {\r\n        let calendarApi = this.calendarComponent.getApi();\r\n        calendarApi.next();\r\n    }\r\n\r\n    currentDate: Date = new Date();\r\n\r\n    dateStream = new Subject<any>();\r\n    userStream = new Subject<string>();\r\n\r\n    date:any = moment();\r\n    options: any;\r\n    recipient: any;\r\n\r\n    loading: boolean = false;\r\n    basic: boolean = false;\r\n    data: any;\r\n\r\n    private unsubscribe = new Subject();\r\n    private rosters: Array<any>;\r\n    private upORdown = new Subject<boolean>();\r\n\r\n    constructor(\r\n        private staffS: StaffService,\r\n        private globalS: GlobalService\r\n    ) {\r\n        this.dateStream.pipe(\r\n            distinctUntilChanged(),          \r\n            takeUntil(this.unsubscribe),)\r\n            .subscribe(data =>{\r\n                this.searchRoster(this.date);\r\n            });\r\n\r\n        this.userStream.pipe(\r\n            distinctUntilChanged(),\r\n            debounceTime(500),\r\n            takeUntil(this.unsubscribe))\r\n            .subscribe(data =>{\r\n                this.loading = true;\r\n                this.recipient = data;\r\n                this.searchRoster(this.date);\r\n            });\r\n\r\n        this.upORdown.pipe(debounceTime(300))\r\n            .subscribe(data => {\r\n                this.loading = true;                         \r\n                this.searchRoster(this.date);          \r\n            });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.date = moment();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        // console.log(this.calendarComponent.getApi());\r\n        this.searchRoster(this.date);\r\n    }\r\n\r\n    picked(data: any){\r\n        console.log(data);\r\n        this.userStream.next(data);\r\n    }\r\n\r\n    eventRender(e: any){\r\n        e.el.querySelectorAll('.fc-title')[0].innerHTML = e.el.querySelectorAll('.fc-title')[0].innerText;\r\n    }\r\n\r\n    searchRoster(date: any): void{\r\n        console.log(date);\r\n        console.log(this.recipient)\r\n        // console.log(format(startOfMonth(date),'yyyy/MM/dd'));\r\n        if(!this.recipient) return;\r\n        console.log(moment(date).startOf('month').format('YYYY-MM-DD hh:mm'));\r\n\r\n        this.staffS.getroster({\r\n            RosterType: this.recipient.option == '1' ? 'PORTAL CLIENT' : 'SERVICE PROVIDER',\r\n            //AccountNo: 'ABBERTON B',\r\n            AccountNo: this.recipient.data,\r\n            StartDate: moment(date).startOf('month').format('YYYY/MM/DD'),\r\n            EndDate: moment(date).endOf('month').format('YYYY/MM/DD')\r\n        }).pipe(takeUntil(this.unsubscribe)).subscribe(roster => {\r\n\r\n            this.rosters = roster;\r\n\r\n                this.options = null;\r\n                var events = roster.map(x => {\r\n                    return {\r\n                        id: x.recordNo,\r\n                        raw: `<b class=\"title\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"${ x.serviceType }\">${ x.carerCode }</b>`,\r\n                        start: `${ moment(x.shift_Start).format(\"YYYY-MM-DD HH:mm:00\") }`,\r\n                        end: `${ this.detectMidNight(x) }`\r\n                    }\r\n                });\r\n                \r\n                var time = events.map(x => x.start);\r\n                var timeStart = moment(this.globalS.getEarliestTime(time)).subtract(20,'m').format('hh:mm:ss');             \r\n\r\n                if(timeStart != null){\r\n                    this.options = {\r\n                        show: true,\r\n                        scrollTime:  timeStart,\r\n                        events: events\r\n                    }\r\n                }\r\n                else {\r\n                    this.options = {\r\n                        show: true,\r\n                        scrollTime:  '00:00:00',\r\n                        events: events\r\n                    }\r\n                }\r\n                \r\n                this.loading = false;\r\n                this.calendarOptions.events = this.options.events;\r\n                this.calendarOptions.scrollTime = this.options.scrollTime;\r\n\r\n                // console.log(this.options.events);\r\n\r\n                this.calendarComponent.getApi().render();\r\n\r\n                this.globalS.sToast('Roster Notifs',`There are ${(this.options.events).length} rosters found!`)\r\n        });\r\n    }\r\n\r\n    next(){\r\n        this.date = moment(this.date).add('month', 1);\r\n        var calendar = this.calendarComponent.getApi(); \r\n        calendar.next();\r\n\r\n        this.upORdown.next(true);\r\n    }\r\n\r\n    prev(){\r\n        this.date = moment(this.date).subtract('month', 1);\r\n        var calendar = this.calendarComponent.getApi(); \r\n        calendar.prev();\r\n        this.upORdown.next(false);\r\n    }\r\n\r\n    detectMidNight(data: any){\r\n        if(Date.parse(data.shift_Start) >= Date.parse(data.shift_End)){\r\n            return moment(data.shift_End).format(\"YYYY-MM-DD 24:00:00\");\r\n        }\r\n        return moment(data.shift_End).format(\"YYYY-MM-DD HH:mm:00\");\r\n    }\r\n\r\n    handleDateClick({ event }){\r\n        console.log(event);\r\n        this.basic = !this.basic;\r\n        this.data = this.search(this.rosters, 'recordNo', event.id);\r\n    }\r\n\r\n    eventMouseEnter(event){     \r\n        $(event.jsEvent.target).closest('a').css({'cursor':'pointer','background-color':'#4396e8'})\r\n    }\r\n\r\n    eventMouseLeave(event){\r\n        $(event.jsEvent.target).closest('a').css({'cursor':'pointer','background-color':'#3788d8'})\r\n    }\r\n\r\n    search(arr: Array<any>, key: string, name: any): any{\r\n        return arr.find(o => o[key] === name);\r\n    }\r\n\r\n    eventDragStart(event){\r\n        console.log(event)\r\n    }\r\n\r\n    eventDrop(event){\r\n        console.log(event.event)\r\n        console.log(event.oldEvent)\r\n    } \r\n}","<div nz-row>\r\n\r\n    <div nz-row>\r\n        <app-search-timesheet [view]=\"0\" (selected)=\"picked($event)\"></app-search-timesheet>\r\n    </div>\r\n\r\n    <div nz-row>\r\n        <div class=\"calendar-title\">\r\n            <nz-button-group>\r\n                <button nz-button nzType=\"primary\" (click)=\"prev()\"><i nz-icon nzType=\"left\"></i></button>\r\n                <button nz-button nzType=\"primary\" (click)=\"next()\"><i nz-icon nzType=\"right\"></i></button>\r\n              </nz-button-group>\r\n            <!-- <div>\r\n                <button (click)=\"prev()\"><i class=\"material-icons left\"> keyboard_arrow_left </i></button>\r\n            </div> -->\r\n            <div class=\"date-title\">\r\n                {{ date | date: 'MMMM yyyy'}}\r\n            </div>\r\n            <!-- <div>\r\n                <button (click)=\"next()\"><i class=\"material-icons right\"> keyboard_arrow_right </i></button>\r\n            </div>\r\n    -->\r\n            <!-- <button (click)=\"prev()\">prev</button>\r\n            <button (click)=\"next()\">next</button> -->\r\n        </div>\r\n    </div>\r\n\r\n    <div nz-row>\r\n       \r\n        <div class=\"calendar\">\r\n\r\n            <!-- <full-calendar #calendar [options]=\"calendarOptions\"></full-calendar> -->\r\n\r\n            <!-- <full-calendar\r\n\r\n                #calendar\r\n\r\n                (eventMouseEnter)=\"eventMouseEnter($event)\"\r\n                \r\n                (eventMouseLeave)=\"eventMouseLeave($event)\"\r\n\r\n                (eventClick)=\"handleDateClick($event)\"\r\n\r\n                (eventDragStart)=\"eventDragStart($event)\"\r\n\r\n                (eventDrop)=\"eventDrop($event)\"\r\n\r\n                (eventRender)=\"eventRender($event)\"\r\n\r\n                defaultView=\"timeGrid\"\r\n\r\n                [plugins]=\"calendarPlugins\"\r\n\r\n                [fixedWeekCount]=\"false\"\r\n\r\n                [weekends]=\"true\"\r\n\r\n                [editable]=\"false\"\r\n                \r\n                [eventStartEditable]=\"false\"\r\n\r\n                [eventResizableFromStart]=\"false\"\r\n                \r\n                [eventResourceEditable]=\"false\"\r\n\r\n                [duration] =\"{\r\n                    months: 1   \r\n                }\"\r\n\r\n                [scrollToTime]=\"options.scrollTime\"\r\n\r\n                [allDaySlot]=\"false\"\r\n\r\n                [eventColor]=\"'#177dff'\"                    \r\n\r\n                [columnHeaderFormat]=\"{\r\n                    day: '2-digit', omitCommas: true\r\n                }\"                       \r\n\r\n                [height]=\"'parent'\"\r\n\r\n                [header]=\"{\r\n                    left: '',\r\n                    center: '',\r\n                    right: ''\r\n                }\"\r\n                [events]=\"options.events\">\r\n            </full-calendar> -->\r\n\r\n            <full-calendar\r\n                #calendar\r\n                [options]=\"calendarOptions\"\r\n                [plugins]=\"calendarPlugins\"\r\n                [columnHeaderFormat]=\"{\r\n                    day: 'numeric', omitCommas: true\r\n                }\"\r\n                >\r\n            </full-calendar>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\n@Component({\r\n    styles: [`\r\n      \r\n    `],\r\n    templateUrl: './sessions.html'\r\n})\r\n\r\n\r\nexport class SessionsAdmin implements OnInit, OnDestroy {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n\r\n    }\r\n}","<div>\r\n    sessions\r\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\n@Component({\r\n    styles: [`\r\n      .landing-container{\r\n        display: grid;\r\n        grid-template-columns: minmax(min-content, 1fr) minmax(min-content, 1fr) minmax(min-content, 1fr);\r\n        grid-gap: 1rem;\r\n        width: 50%;\r\n        margin: 0 auto;\r\n      }\r\n      figure{\r\n        min-width:4rem;\r\n        background-color:#1b549c;\r\n        color:#fff;\r\n        border-radius: 3px;\r\n        padding: 20px;\r\n        font-size: 30px;\r\n        text-align: center;\r\n        margin:0;\r\n        position: relative;\r\n        height: 8rem;\r\n        cursor:pointer;\r\n      }\r\n      figure:hover{\r\n        background-color: #2466b9;\r\n        color:#fff;\r\n        -webkit-transition: background-color 300ms linear;\r\n        -ms-transition: background-color 300ms linear;\r\n        transition: background-color 300ms linear;\r\n      }\r\n      figure i{\r\n        font-size: 2.7rem;\r\n      }\r\n      figcaption{\r\n        font-size: 1.12rem;\r\n        position: absolute;\r\n        bottom: 1rem;\r\n        left: 0;\r\n        right: 0;\r\n      }\r\n    `],\r\n    templateUrl: './side-main-menu.html'\r\n})\r\n\r\n\r\nexport class SideMainMenu implements OnInit, OnDestroy {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n\r\n    }\r\n}","<div class=\"landing-container\">\r\n\r\n    <figure routerLink=\"/admin/daymanager\">\r\n        <i class=\"material-icons\"> date_range </i>\r\n        <figcaption>Day Manager</figcaption>\r\n    </figure>\r\n\r\n    <figure routerLink=\"/admin/recipient\">\r\n        <i class=\"material-icons\"> people_alt </i>\r\n        <figcaption>Recipients</figcaption>\r\n    </figure>\r\n\r\n    <figure routerLink=\"/admin/staff\"> \r\n        <i class=\"fas fa-user-nurse\"></i>\r\n        <figcaption>Staff</figcaption>\r\n    </figure>\r\n\r\n    <figure routerLink=\"/admin/rosters\">\r\n        <i class=\"far fa-address-card\"></i>\r\n        <figcaption>Rosters</figcaption>\r\n    </figure>\r\n\r\n    <figure routerLink=\"/admin/timesheet\">\r\n        <i class=\"material-icons\"> menu_book </i>\r\n        <figcaption>Timesheets</figcaption>\r\n    </figure>\r\n\r\n    <figure>\r\n        <i class=\"far fa-clock\"></i>\r\n        <figcaption>Time & Attendance</figcaption>\r\n    </figure>\r\n\r\n    <figure routerLink=\"/admin/reports\">\r\n        <i class=\"material-icons\"> poll </i>\r\n        <figcaption>Reports</figcaption>\r\n    </figure>\r\n\r\n    <figure routerLink=\"/admin/budget\">\r\n        <i class=\"material-icons\"> show_chart </i>\r\n        <figcaption>Analyze & Budget</figcaption>\r\n    </figure>\r\n\r\n    <figure>\r\n        <i class=\"material-icons\"> search </i>\r\n        <figcaption>At A Glance</figcaption>\r\n    </figure>\r\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    styles: [`\r\n        ul{\r\n            list-style:none;\r\n        }\r\n\r\n        div.divider-subs div{\r\n            margin-top:2rem;\r\n        }\r\n        \r\n    `],\r\n    templateUrl: './attendance.html'\r\n})\r\n\r\n\r\nexport class StaffAttendanceAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n\r\n    checked: boolean = false;\r\n    isDisabled: boolean = false;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService\r\n    ) {\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/staff/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'time-attendance')) {\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    search(user: any) {\r\n        if (!user) this.router.navigate(['/admin/staff/personal']);\r\n        this.timeS.getattendancestaff(user.id).subscribe(data => {\r\n            this.patchData(data);\r\n        })\r\n    }\r\n\r\n    patchData(data: any) {\r\n        this.inputForm.patchValue({\r\n            autoLogout: data.autoLogout,\r\n            emailMessage: data.emailMessage,\r\n            excludeShiftAlerts: data.excludeShiftAlerts,\r\n            inAppMessage: data.inAppMessage,\r\n            logDisplay: data.logDisplay,\r\n            pin: data.pin,\r\n            rosterPublish: data.rosterPublish,\r\n            shiftChange: data.shiftChange,\r\n            smsMessage: data.smsMessage\r\n        });\r\n    }\r\n\r\n\r\n    buildForm() {\r\n        this.inputForm = this.formBuilder.group({\r\n            autoLogout: [''],\r\n            emailMessage: false,\r\n            excludeShiftAlerts: false,\r\n            inAppMessage: false,\r\n            logDisplay: false,\r\n            pin: [''],\r\n            rosterPublish: false,\r\n            shiftChange: false,\r\n            smsMessage: false\r\n        });\r\n    }\r\n\r\n    onKeyPress(data: KeyboardEvent) {\r\n        return this.globalS.acceptOnlyNumeric(data);\r\n    }\r\n\r\n    save() {\r\n        const group = this.inputForm;\r\n\r\n        this.timeS.updatetimeandattendance({\r\n            AutoLogout: group.get('autoLogout').value,\r\n            EmailMessage: group.get('emailMessage').value,\r\n            ExcludeShiftAlerts: group.get('excludeShiftAlerts').value,\r\n            InAppMessage: group.get('inAppMessage').value,\r\n            LogDisplay: group.get('logDisplay').value,\r\n            Pin: group.get('pin').value,\r\n            RosterPublish: group.get('rosterPublish').value,\r\n            ShiftChange: group.get('shiftChange').value,\r\n            SmsMessage: group.get('smsMessage').value,\r\n            Id: this.user.id\r\n        }).pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data) {\r\n                this.globalS.sToast('Success', 'Change successful');\r\n                this.inputForm.markAsPristine();\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    canDeactivate() {\r\n        if (this.inputForm && this.inputForm.dirty) {\r\n            this.modalService.confirm({\r\n                nzTitle: 'Save changes before exiting?',\r\n                nzContent: '',\r\n                nzOkText: 'Yes',\r\n                nzOnOk: () => {\r\n                    this.save();\r\n                },\r\n                nzCancelText: 'No',\r\n                nzOnCancel: () => {\r\n                    \r\n                }\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col nzOffset=\"3\">\r\n        <div nz-row>\r\n            <button class=\"botton success\" (click)=\"save()\" [disabled]=\"!inputForm?.dirty\">Save Changes</button>\r\n        </div>\r\n        <div nz-row [formGroup]=\"inputForm\">\r\n            <div nz-col nzSpan=\"18\">\r\n                <nz-divider nzText=\"General Settings\" nzOrientation=\"left\"></nz-divider>\r\n                <div nz-row [nzGutter]=\"16\" class=\"divider-subs\">\r\n                    <div nz-col nzSpan=\"12\">\r\n                        <label nz-checkbox formControlName=\"excludeShiftAlerts\">Exclude From Time And Attendance Log\r\n                            Display</label>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"6\">\r\n                        <label for=\"\">Pin Number</label>\r\n                        <input nz-input formControlName=\"pin\" (keypress)=\"onKeyPress($event)\" />\r\n                    </div>\r\n                    <div nz-col nzSpan=\"6\">\r\n                        <label for=\"\">Auto Logout Time</label>\r\n                        <input nz-input formControlName=\"autoLogout\" (keypress)=\"onKeyPress($event)\" />\r\n                    </div>\r\n                </div>\r\n                <nz-divider nzText=\"Messages & Alerts\" nzOrientation=\"left\"></nz-divider>\r\n                <div class=\"divider-subs\">\r\n                    <div>\r\n                        <label nz-checkbox formControlName=\"excludeShiftAlerts\">Exclude From Generating Late, Early, Short, Long\r\n                            Shift Alerts</label>\r\n                    </div>\r\n                    <div>\r\n                        <ul>\r\n                            <li>\r\n                                <label nz-checkbox formControlName=\"inAppMessage\">In App Message</label>\r\n                            </li>\r\n                            <li>\r\n                                <label nz-checkbox formControlName=\"smsMessage\">Email SMS Message</label>\r\n                            </li>\r\n                            <li>\r\n                                <label nz-checkbox formControlName=\"emailMessage\">Email Message</label>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div>\r\n                        <label nz-checkbox formControlName=\"rosterPublish\">Send Message On Master Roster Creation</label>\r\n                        <label nz-checkbox formControlName=\"shiftChange\">Send Message On Shift Changes</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>    \r\n</div>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    styles: [`\r\n        nz-table{\r\n            margin-top:20px;\r\n        }\r\n        nz-select{\r\n            width: 15rem;\r\n        }\r\n    `],\r\n    templateUrl: './competencies.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class StaffCompetenciesAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any>;\r\n    loading: boolean = false;\r\n\r\n    modalOpen: boolean = false;\r\n\r\n    current: number = 0;\r\n    competencies: Array<any>;\r\n\r\n    dateFormat: string = 'dd/MM/yyyy';\r\n\r\n    postLoading: boolean = false;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/staff/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'competencies')) {\r\n                this.cd.reattach();      \r\n                \r\n                this.user = data;\r\n                this.search(this.user);\r\n\r\n                this.cd.detectChanges();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.cd.reattach();\r\n\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    buildForm() {\r\n        this.inputForm = this.formBuilder.group({\r\n            recordNumber: null,\r\n            expiryDate: null,\r\n            reminderDate: null,\r\n            competency: '',\r\n            certReg: '',\r\n            mandatory: false,\r\n            notes: ''\r\n        });\r\n    }\r\n\r\n    search(user: any = this.user) {\r\n        this.loading = true;\r\n        this.timeS.getcompetencies(user.code).subscribe(data => {\r\n            this.tableData = data;\r\n            this.loading = false;\r\n            this.cd.detectChanges();\r\n        });\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    showAddModal() {\r\n        this.resetModal();\r\n        this.populateDropDowns();        \r\n        this.modalOpen = true;\r\n    }\r\n\r\n    showEditModal(index: any) {\r\n\r\n    }\r\n\r\n    handleCancel() {\r\n        this.modalOpen = false;\r\n    }\r\n\r\n    delete(data: any) {\r\n        this.timeS\r\n            .deletecompetency(data.recordNumber)\r\n            .pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n                if (data) {\r\n                    this.globalS.sToast('Success', 'Data Deleted!');\r\n                    this.search(this.user);\r\n                    return;\r\n                }\r\n            });\r\n    }\r\n\r\n    resetModal() {\r\n        this.current = 0;\r\n        this.inputForm.reset();\r\n        this.postLoading = false;\r\n    }\r\n\r\n    populateDropDowns(): void {\r\n        this.timeS\r\n            .getcompetenciesall()\r\n            .pipe(takeUntil(this.unsubscribe))\r\n            .subscribe(data => this.competencies = data)\r\n    }\r\n\r\n    pre(): void {\r\n        this.current -= 1;\r\n        //this.changeContent();\r\n    }\r\n\r\n    next(): void {\r\n        this.current += 1;\r\n        //this.changeContent();\r\n    }\r\n\r\n    save() {\r\n        this.postLoading = true;\r\n        this.timeS.postcompetencies(this.inputForm.value, this.user.id)\r\n            .pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n                if (data) {\r\n                    this.globalS.sToast('Success', 'Competency saved');\r\n                    this.search();\r\n                    this.handleCancel();\r\n                    this.resetModal();\r\n                    return;\r\n                }            \r\n            });\r\n    }\r\n\r\n}","<div nz-row>\r\n    <div nz-col>\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Competency</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\" [nzLoading]=\"loading\"\r\n            [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"left\">Competency</th>\r\n                    <th>Expiry Date</th>\r\n                    <th>Reminder Date</th>\r\n                    <th>Mandatory</th>\r\n                    <th>Cert/Reg.No</th>\r\n                    <th>Notes</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                <td class=\"left\">{{ data.competency  }}</td>\r\n                <td>{{ data.expiryDate | date: 'd/MM/y' }}</td>\r\n                <td>{{ data.reminderDate | date: 'd/MM/y'  }}</td>\r\n                <td>\r\n                    <label nz-checkbox nzDisabled [ngModel]=\"data.mandatory\" nzDisabled ></label>\r\n                </td>\r\n                <td>{{ data.certReg }}</td>\r\n                <td>{{ data.notes }}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete competency?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"delete(data)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n<nz-modal [nzWidth]=\"700\" [(nzVisible)]=\"modalOpen\" [nzTitle]=\"'Add Competency'\" (nzOnCancel)=\"handleCancel()\">\r\n    <div class=\"flexy\">\r\n\r\n        <nz-steps [nzSize]=\"'small'\" [nzCurrent]=\"current\" nzDirection=\"vertical\">\r\n            <nz-step class=\"mini\" nzTitle=\"Competencies\" nzDescription=\"\"></nz-step>\r\n            <nz-step class=\"mini\" nzTitle=\"Additional Details\" nzDescription=\"\"></nz-step>\r\n        </nz-steps>\r\n\r\n        <nz-divider class=\"full-height\" nzType=\"vertical\"></nz-divider>\r\n\r\n        <div class=\"steps-content\" [formGroup]=\"inputForm\">\r\n            <div *ngIf=\"current == 0\">\r\n                <nz-select [nzDropdownMatchSelectWidth]=\"false\" formControlName=\"competency\" nzShowSearch nzAllowClear nzPlaceHolder=\"Select a competency\" >\r\n                    <nz-option *ngFor=\"let d of competencies\" [nzLabel]=\"d\" [nzValue]=\"d\"></nz-option>\r\n                </nz-select>\r\n            </div>\r\n            <div *ngIf=\"current == 1\">\r\n                <div nz-row nzGutter=\"16\" class=\"mrg-btm-2\">\r\n                    <div nz-col nzSpan=\"12\">\r\n                        <nz-date-picker [nzPlaceHolder]=\"'Expiry Date'\" formControlName=\"expiryDate\" [nzFormat]=\"dateFormat\"></nz-date-picker>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"12\">\r\n                        <nz-date-picker [nzPlaceHolder]=\"'Reminder Date'\" formControlName=\"reminderDate\" [nzFormat]=\"dateFormat\"></nz-date-picker>\r\n                    </div>\r\n                </div>\r\n                <div nz-row nzGutter=\"16\" class=\"mrg-btm-2\">\r\n                    <div nz-col nzSpan=\"12\">\r\n                        <input nz-input placeholder=\"Basic usage\" placeholder=\"Cert/Reg #\" formControlName=\"certReg\" />\r\n                    </div>\r\n                    <div nz-col nzSpan=\"12\">\r\n                        <label nz-checkbox formControlName=\"mandatory\">Mandatory</label>\r\n                    </div>\r\n                </div>\r\n                <div nz-row nzGutter=\"16\" class=\"mrg-btm-2\">\r\n                    <textarea style=\"margin: 0 10px;\" rows=\"4\" nz-input placeholder=\"notes\" formControlName=\"notes\"></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <ng-container>\r\n            <button nz-button nzType=\"default\" (click)=\"pre()\" *ngIf=\"current > 0\">\r\n                <span>Previous</span>\r\n            </button>\r\n            <button nz-button nzType=\"default\" (click)=\"next()\" *ngIf=\"current < 1\"  [disabled]=\"!inputForm.get('competency').value\">\r\n                <span>Next</span>\r\n            </button>\r\n            <button nz-button nzType=\"primary\" [nzLoading]=\"postLoading\" (click)=\"save()\" *ngIf=\"current === 1\">\r\n                <span>Done</span>\r\n            </button>\r\n        </ng-container>\r\n    </div>\r\n</nz-modal>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    styles: [`\r\n      \r\n    `],\r\n    templateUrl: './contact.html'\r\n})\r\n\r\n\r\nexport class StaffContactAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n\r\n    user: any;\r\n    transformedUser: any;\r\n\r\n    constructor(\r\n        private sharedS: ShareService,\r\n        private globalS: GlobalService,\r\n        private router: Router,\r\n    ) {\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/staff/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'contacts')) {\r\n                this.user = data;\r\n                this.transform(this.user);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.transform(this.user)\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    transform(user: any) {\r\n        if (!user) return;\r\n\r\n        this.transformedUser = {\r\n            name: user.code,\r\n            view: user.view,\r\n            id: user.id,\r\n            sysmgr: user.sysmgr\r\n        }\r\n    }\r\n}","<div *ngIf=\"transformedUser\">\r\n    <app-contacts-details [(ngModel)]=\"transformedUser\"></app-contacts-details>\r\n</div>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    styles: [`\r\n        nz-table{\r\n            margin-top:20px;\r\n        }\r\n    `],\r\n    templateUrl: './document.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class StaffDocumentAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any>;\r\n\r\n    loading: boolean = false;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.reattach();\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/staff/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'document')) {\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    buildForm() {\r\n        this.inputForm = this.formBuilder.group({\r\n            \r\n        });\r\n    }\r\n\r\n    search(user: any) {\r\n        this.cd.reattach();\r\n\r\n        this.loading = true;\r\n        this.timeS.getdocuments(user.code).subscribe(data => {\r\n            this.tableData = data;\r\n            this.loading = false;\r\n            this.cd.detectChanges();\r\n        });\r\n\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    showAddModal() {\r\n        \r\n    }\r\n\r\n    showEditModal(index: any) {\r\n        \r\n    }\r\n    \r\n    delete(data: any) {\r\n        \r\n    }\r\n}","<div nz-row>\r\n    <div nz-col>\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Document</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n            [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Title</th>\r\n                    <th>Status</th>\r\n                    <th>Classification</th>\r\n                    <th>Category</th>\r\n                    <th>Created</th>\r\n                    <th>Author</th>\r\n                    <th>Modified</th>\r\n                    <th>Filename</th>\r\n                    <th>Type</th>\r\n                    <th>Original Location</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ data.title  }}</td>\r\n                    <td>{{ data.status }}</td>\r\n                    <td>{{ data.classification }}</td>\r\n                    <td>{{ data.category }}</td>\r\n                    <td>{{ data.created | date: 'd/M/yyyy'  }}</td>\r\n                    <td>{{ data.author }}</td>\r\n                    <td>{{ data.modified | date: 'd/M/yyyy'  }}</td>\r\n                    <td>{{ data.filename }}</td>\r\n                    <td>{{ data.type }}</td>\r\n                    <td>{{ data.originalLocation }}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">Download</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a (click)=\"showEditModal(i)\">View</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this group?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"delete(data)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\n@Component({\r\n    styles: [`\r\n        nz-table{\r\n            margin-top:20px;\r\n        }\r\n        nz-form-item{\r\n            margin:0;\r\n        }\r\n        nz-select{\r\n            width:100%;\r\n        }\r\n        a:hover{\r\n            text-decoration:underline;\r\n        }\r\n    `],\r\n    templateUrl: './groupings.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class StaffGroupingsAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n\r\n    loading: boolean = false;\r\n    userdefined1: Array<any>;\r\n    userdefined1List: Array<string>;\r\n    userdefined2: Array<any>;\r\n    userdefined2List: Array<any>;\r\n\r\n    modalOpen: boolean = false;\r\n    isLoading: boolean = false;\r\n    whatView: number;\r\n\r\n    inputForm: FormGroup;\r\n\r\n    listArray: Array<any>;\r\n    \r\n    private editOrAdd: number;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/staff/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'groupings-preferences')) {\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked()\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    buildForm() {\r\n        this.inputForm = this.formBuilder.group({\r\n            list: ['', Validators.required],\r\n            notes: ['', Validators.required],\r\n            id: ['']\r\n        });\r\n    }\r\n\r\n    get title() {\r\n        const str = this.whatView == 1 ? 'Group' : 'Preference';\r\n        const pro = this.editOrAdd == 1 ? 'Add' : 'Edit';\r\n        return `${pro} ${str}`;\r\n    }\r\n\r\n    search(user: any) {\r\n        this.cd.reattach();\r\n        //if (!this.user) return;\r\n        this.loading = true;\r\n\r\n        forkJoin([\r\n            this.timeS.getuserdefined1(user.id),\r\n            this.timeS.getuserdefined2(user.id),\r\n            this.listS.getlistuserdefined1(),\r\n            this.listS.getlistuserdefined2()\r\n        ]).subscribe(data => {\r\n            this.loading = false;\r\n\r\n            this.userdefined1 = data[0];\r\n            this.userdefined2 = data[1];\r\n\r\n            this.userdefined1List = data[2];\r\n            this.userdefined2List = data[3];\r\n            this.cd.detectChanges();\r\n        });\r\n    }\r\n\r\n    showAddModal(view: number) {\r\n        if (view == 1) this.listArray = this.userdefined1List;\r\n        if (view == 2) this.listArray = this.userdefined2List;\r\n\r\n        this.whatView = view;\r\n        this.editOrAdd = 1;\r\n        this.modalOpen = true;\r\n    }\r\n\r\n    showEditModal(view: number, index: number) {\r\n\r\n        if (view == 1) {\r\n            const { group, notes, recordNumber } = this.userdefined1[index];\r\n\r\n            this.inputForm.patchValue({\r\n                list: group,\r\n                notes: notes,\r\n                id: recordNumber\r\n            });\r\n\r\n            this.listArray = this.userdefined1List;\r\n        }\r\n\r\n        if (view == 2) {\r\n            const { preference, notes, recordNumber } = this.userdefined2[index];\r\n\r\n            this.inputForm.patchValue({\r\n                list: preference,\r\n                notes: notes,\r\n                id: recordNumber\r\n            });\r\n\r\n            this.listArray = this.userdefined2List;\r\n        }\r\n        \r\n        this.whatView = view;\r\n        this.editOrAdd = 2;\r\n        this.modalOpen = true;\r\n    }\r\n\r\n    handleCancel() {\r\n        this.inputForm.reset();\r\n        this.isLoading = false;\r\n        this.modalOpen = false;\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    success() {\r\n        this.search(this.sharedS.getPicked());\r\n        this.isLoading = false;\r\n    }\r\n\r\n    processBtn() {\r\n        if (this.editOrAdd == 1) {\r\n            this.save();\r\n        }\r\n\r\n        if (this.editOrAdd == 2) {\r\n            this.edit();\r\n        }\r\n    }\r\n\r\n    save() {\r\n        for (const i in this.inputForm.controls) {\r\n            this.inputForm.controls[i].markAsDirty();\r\n            this.inputForm.controls[i].updateValueAndValidity();\r\n        }\r\n\r\n        if (!this.inputForm.valid)\r\n            return;\r\n        \r\n        const { list, notes } = this.inputForm.value;\r\n        const index = this.whatView;\r\n        this.isLoading = true;\r\n\r\n        if (index == 1) {            \r\n            this.timeS.postuserdefined1({\r\n                notes: notes,\r\n                group: list,\r\n                personID: this.user.id\r\n            }).pipe(takeUntil(this.unsubscribe))\r\n                .subscribe(data => {\r\n                    if (data) {\r\n                        this.handleCancel();\r\n                        this.success();\r\n                        this.globalS.sToast('Success', 'Data Added');\r\n                    }\r\n                })\r\n        }\r\n\r\n        if (index == 2) {\r\n            this.timeS.postuserdefined2({\r\n                notes: notes,\r\n                group: list,\r\n                personID: this.user.id\r\n            }).pipe(takeUntil(this.unsubscribe))\r\n                .subscribe(data => {\r\n                    if (data) {\r\n                        this.handleCancel();\r\n                        this.success();\r\n                        this.globalS.sToast('Success', 'Data Added');\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    edit() {\r\n\r\n        for (const i in this.inputForm.controls) {\r\n            this.inputForm.controls[i].markAsDirty();\r\n            this.inputForm.controls[i].updateValueAndValidity();\r\n        }\r\n\r\n        if (!this.inputForm.valid)\r\n            return;\r\n\r\n        const { list, notes, id } = this.inputForm.value;\r\n        const index = this.whatView;\r\n        this.isLoading = true;\r\n\r\n        if (index == 1) {\r\n            this.timeS.updateshareduserdefined({\r\n                group: list,\r\n                notes,\r\n                recordNumber: id\r\n            }).pipe(\r\n                takeUntil(this.unsubscribe))\r\n                .subscribe(data => {\r\n                    if (data) {\r\n                        this.handleCancel();\r\n                        this.success();\r\n                        this.globalS.sToast('Success', 'Data Updated');\r\n                    }\r\n                })\r\n        }\r\n\r\n        if (index == 2) {\r\n            this.timeS.updateshareduserdefined({\r\n                group: list,\r\n                notes,\r\n                recordNumber: id\r\n            }).pipe(\r\n                takeUntil(this.unsubscribe))\r\n                .subscribe(data => {\r\n                    if (data) {\r\n                        this.handleCancel();\r\n                        this.success();\r\n                        this.globalS.sToast('Success', 'Data Updated');\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    delete(recordNo: any) {\r\n        this.timeS.deleteshareduserdefined(recordNo)\r\n            .subscribe(data => {\r\n                if (data) {\r\n                    this.handleCancel();\r\n                    this.success();\r\n                    this.globalS.sToast('Success', 'Data Deleted');\r\n                }\r\n            });\r\n    }\r\n\r\n}","<div nz-row nzGutter=\"16\">\r\n    <div nz-col nzSpan=\"12\">\r\n        <button class=\"botton success\" (click)=\"showAddModal(1)\">Add Group</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\" [nzData]=\"userdefined1\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Group</th>\r\n                    <th>Notes</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td>{{data.group}}</td>\r\n                    <td>{{data.notes}}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(1,i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a\r\n                            nz-popconfirm\r\n                            nzPopconfirmTitle=\"Are you sure delete this group?\"\r\n                            nzPopconfirmPlacement=\"bottom\"\r\n                            (nzOnConfirm)=\"delete(data.recordNumber)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n\r\n    <div nz-col nzSpan=\"12\">\r\n        <button class=\"botton success\" (click)=\"showAddModal(2)\">Add Preferences</button>\r\n        <nz-table #tb2 [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\" [nzData]=\"userdefined2\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Preference</th>\r\n                    <th>Notes</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of tb2.data;let i=index;trackBy: trackByFn\">\r\n                    <td>{{data.preference}}</td>\r\n                    <td>{{data.notes}}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(2,i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a\r\n                            nz-popconfirm\r\n                            nzPopconfirmTitle=\"Are you sure delete this preference?\"\r\n                            nzPopconfirmPlacement=\"bottom\"\r\n                            (nzOnConfirm)=\"delete(data.recordNumber)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n    \r\n</div>\r\n\r\n\r\n<nz-modal [(nzVisible)]=\"modalOpen\" [nzTitle]=\"title\" (nzOnCancel)=\"handleCancel()\" >\r\n    <div nz-row [formGroup]=\"inputForm\">\r\n        <div nz-row>\r\n            <nz-form-item>\r\n                <nz-form-label>{{ whatView == 1 ? 'Group' :  'Preference'}}</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Required Field\">\r\n                    <nz-select formControlName=\"list\" nzAllowClear nzPlaceHolder=\"\" [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let list of listArray\" [nzValue]=\"list\" [nzLabel]=\"list\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n        <div nz-row>\r\n            <nz-form-item>\r\n                <nz-form-label>Notes</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Required Field\">\r\n                    <textarea rows=\"4\" nz-input formControlName=\"notes\"></textarea>                    \r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"processBtn()\" [nzLoading]=\"isLoading\">Save</button>\r\n    </div>\r\n</nz-modal>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil, delay } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\nimport format from 'date-fns/format';\r\n\r\n@Component({\r\n    styles: [`\r\n       nz-table{\r\n            margin-top:20px;\r\n        }\r\n        nz-select{\r\n            width:100%;\r\n        }\r\n        label.chk{\r\n            position: absolute;\r\n            top: 1.5rem;\r\n        }\r\n    `],\r\n    templateUrl: './hrnote.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n    \r\nexport class StaffHRAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any>;\r\n    loading: boolean = false;\r\n\r\n    modalOpen: boolean = false;\r\n    addORView: number = 1;\r\n    categories: Array<any>;\r\n\r\n    dateFormat: string = 'dd/MM/yyyy';\r\n    isLoading: boolean = false;\r\n\r\n    private default = {\r\n        notes: '',\r\n        isPrivate: false,\r\n        alarmDate: null,\r\n        whocode: '',\r\n        recordNumber: null,\r\n        category: null\r\n    }\r\n\r\n    \r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/staff/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'hr-note')) {\r\n                this.cd.reattach();\r\n                this.user = data;\r\n                this.search(this.user);\r\n            }\r\n        });      \r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    buildForm() {\r\n        this.inputForm = this.formBuilder.group({\r\n            notes: '',\r\n            isPrivate: false,\r\n            alarmDate: null,\r\n            whocode: '',\r\n            recordNumber: null,\r\n            category: ['', [Validators.required]]\r\n        });      \r\n    }\r\n\r\n    populate(): void{\r\n        this.listS.getlisthr().pipe(takeUntil(this.unsubscribe)).subscribe(data => this.categories = data)\r\n    }\r\n\r\n    search(user: any = this.user) {\r\n        this.cd.reattach();\r\n        \r\n        this.loading = true;\r\n        this.timeS.gethrnotes(user.code).pipe(delay(200),takeUntil(this.unsubscribe)).subscribe(data => {\r\n            this.tableData = data;\r\n            this.loading = false;\r\n            this.cd.detectChanges()\r\n        });\r\n\r\n        this.populate();\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    showAddModal() {\r\n        this.addORView = 1;\r\n        this.modalOpen = true;\r\n    }\r\n\r\n    showEditModal(index: any) {\r\n        \r\n        this.addORView = 2;\r\n        const { alarmDate, detail, isPrivate, category, creator, recordNumber } = this.tableData[index];\r\n\r\n        this.inputForm.patchValue({\r\n            notes: detail,\r\n            isPrivate: isPrivate,\r\n            alarmDate: alarmDate,\r\n            whocode: creator,\r\n            recordNumber: recordNumber,\r\n            category: category\r\n        });\r\n\r\n        this.modalOpen = true;\r\n    }\r\n\r\n    save() {\r\n        if (!this.globalS.IsFormValid(this.inputForm))\r\n            return;        \r\n    \r\n        const cleanDate = this.globalS.VALIDATE_AND_FIX_DATETIMEZONE_ANOMALY(\r\n            this.inputForm.get('alarmDate').value);\r\n        \r\n        this.inputForm.controls[\"alarmDate\"].setValue(cleanDate);\r\n        this.inputForm.controls[\"whocode\"].setValue(this.user.code);\r\n        this.timeS.posthrnotes(this.inputForm.value, this.user.id).pipe(\r\n            takeUntil(this.unsubscribe)).subscribe(data => {\r\n                if (data) {\r\n                    this.globalS.sToast('Success', 'Note saved');\r\n                    this.search();\r\n                    this.handleCancel();\r\n                    return;\r\n                }\r\n            });\r\n    }\r\n\r\n    handleCancel() {\r\n        this.modalOpen = false;\r\n        this.inputForm.reset(this.default);\r\n        this.isLoading = false;\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col>\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add HR Note</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\" [nzLoadingDelay]=\"100\" [nzLoading]=\"loading\"\r\n            [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"left\" style=\"width: 40rem\" >Detail</th>\r\n                    <th>Category</th>\r\n                    <th>Detail Date</th>\r\n                    <th>Creator</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ data.detail  }}</td>\r\n                    <td>{{ data.category }}</td>\r\n                    <td>{{ data.detailDate | date: 'dd/MM/y'  }}</td>\r\n                    <td>{{ data.creator || '-' }}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">View</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n<nz-modal [(nzVisible)]=\"modalOpen\" [nzTitle]=\"addORView ? 'Add HR Note' : 'Details'\" (nzOnCancel)=\"handleCancel()\">\r\n    <div [formGroup]=\"inputForm\">\r\n        <div nz-row>\r\n            <nz-form-item>\r\n                <nz-form-label  [nzNoColon]=\"true\">Description</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Category is required!\">\r\n                    <nz-select formControlName=\"category\" nzAllowClear [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let d of categories\" [nzValue]=\"d\" [nzLabel]=\"d\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n        <div nz-row [nzGutter]=\"12\">\r\n            <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                <label for=\"\">Reminder Date</label>\r\n                <nz-date-picker formControlName=\"alarmDate\" [nzFormat]=\"dateFormat\"></nz-date-picker>\r\n            </div>\r\n            <div nz-col nzSpan=\"12\">\r\n                <label class=\"chk\" nz-checkbox formControlName=\"isPrivate\">Private</label>\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n           <div class=\"form-group\">\r\n                <label for=\"\">Notes</label>\r\n                <textarea rows=\"4\" nz-input formControlName=\"notes\"></textarea>\r\n           </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" *ngIf=\"addORView == 1\" (click)=\"save()\" [nzLoading]=\"isLoading\">Save</button>\r\n    </div>\r\n</nz-modal>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    styles: [`\r\n        nz-table{\r\n            margin-top:20px;\r\n        }\r\n    `],\r\n    templateUrl: './incident.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class StaffIncidentAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any>;\r\n    loading: boolean = false;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/staff/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'incident')) {\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    buildForm() {\r\n        this.inputForm = this.formBuilder.group({\r\n\r\n        });\r\n    }\r\n\r\n    search(user: any) {\r\n        this.cd.reattach();\r\n        this.loading = true;\r\n        this.timeS.getincidents(user.code).subscribe(data => {\r\n            this.tableData = data;\r\n            this.loading = false;\r\n            this.cd.detectChanges();\r\n        });\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    showAddModal() {\r\n        \r\n    }\r\n\r\n    showEditModal(index: number) {\r\n        \r\n    }\r\n\r\n    delete(data: any) {\r\n        \r\n    }\r\n}","<div nz-row>\r\n    <div nz-col>\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Incident</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzLoading]=\"loading\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\"\r\n            [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Status</th>\r\n                    <th>Date</th>\r\n                    <th>Type</th>\r\n                    <th>Description</th>\r\n                    <th>Assigned To</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ data.status  }}</td>\r\n                    <td>{{ data.date | date: 'd/MM/y'  }}</td>\r\n                    <td>{{ data.type }}</td>\r\n                    <td>{{ data.description }}</td>\r\n                    <td>{{ data.assigned }}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this group?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"delete(data)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>","export * from './attendance'\r\nexport * from './competencies'\r\nexport * from './contact'\r\nexport * from './document'\r\nexport * from './groupings'\r\nexport * from './hrnote'\r\nexport * from './incident'\r\nexport * from './leave'\r\nexport * from './opnote'\r\nexport * from './pay'\r\nexport * from './personal'\r\nexport * from './position'\r\nexport * from './reminder'\r\nexport * from './training'\r\n","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    styles: [`\r\n        nz-table{\r\n            margin-top:20px;\r\n        }\r\n        nz-select{\r\n            width:100%;\r\n        }\r\n        ul{\r\n            list-style:none;\r\n            padding:0;\r\n        }\r\n        li{\r\n            padding:5px 0;\r\n        }\r\n    `],\r\n    templateUrl: './leave.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class StaffLeaveAdmin implements OnInit, OnDestroy {\r\n\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any>;\r\n\r\n    loading: boolean = false;\r\n    modalOpen: boolean = false;\r\n    dateFormat: string = 'MMM dd yyyy';\r\n    isLoading: boolean;\r\n\r\n    leaveGroup: FormGroup;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/staff/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'leave')) {\r\n                this.user = data;\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    buildForm() {\r\n        this.leaveGroup = this.formBuilder.group({\r\n            user: '',\r\n            staffcode: '',\r\n\r\n            dates: [[], [Validators.required]],\r\n\r\n            makeUnavailable: true,\r\n            unallocAdmin: false,\r\n            unallocUnapproved: true,\r\n            unallocMaster: false,\r\n\r\n            explanation: '',\r\n            activityCode: '',\r\n            payCode: '',\r\n            program: '',\r\n\r\n            programShow: false\r\n        })\r\n    }\r\n\r\n    search(user: any = this.user) {\r\n        this.cd.reattach();\r\n        this.loading = true;\r\n        this.timeS.getleaveapplication(user.code).subscribe(data => {\r\n            this.tableData = data;\r\n            this.loading = false;\r\n            this.cd.detectChanges();\r\n        });\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    showAddModal() {\r\n        this.modalOpen = true;\r\n        \r\n    }\r\n\r\n    handleCancel() {\r\n        this.modalOpen = false;\r\n    }\r\n\r\n    reset() {\r\n        \r\n    }\r\n\r\n    showEditModal(index: any) {\r\n\r\n    }\r\n\r\n    delete(data: any) {\r\n\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col>\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Leave</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\" [nzLoading]=\"loading\"\r\n            [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"left\">Leave Type</th>\r\n                    <th>Start</th>\r\n                    <th>End</th>\r\n                    <th>Notes</th>\r\n                    <th>Reminder Date</th>\r\n                    <th>Approved</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ data.leaveType  }}</td>\r\n                    <td>{{ data.startDate | date: 'dd/MM/y' }}</td>\r\n                    <td>{{ data.endDate | date: 'dd/MM/y' }}</td>\r\n                    <td>{{ data.notes  }}</td>\r\n                    <td>{{ data.reminderDate }}</td>\r\n                    <td>\r\n                        <!-- <input type=\"checkbox\" [ngModel]=\"op.approved\" disabled> -->\r\n                        <!-- <div style=\"display:inline-block;\">\r\n                            <clr-checkbox-wrapper>\r\n                                <input type=\"checkbox\" clrCheckbox value=\"option1\" name=\"options\" [(ngModel)]=\"op.approved\"\r\n                                    (click)=\"checkBoxChange($event,i)\" />\r\n                            </clr-checkbox-wrapper>\r\n                        </div> -->\r\n                    </td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this group?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"delete(data)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<nz-modal [(nzVisible)]=\"modalOpen\" [nzTitle]=\"'Leave Application'\" (nzOnCancel)=\"handleCancel()\" [nzStyle]=\"{ top: '20px' }\">\r\n    <div nz-row [formGroup]=\"leaveGroup\">\r\n        <div nz-row>\r\n            <nz-form-item >\r\n                <nz-form-label [nzNoColon]=\"true\">Date Range</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Required Field\">\r\n                    <nz-range-picker [nzFormat]=\"dateFormat\" formControlName=\"dates\">\r\n                    </nz-range-picker>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n        <div nz-row>\r\n            <ul>\r\n                <li>\r\n                    <label nz-checkbox formControlName=\"makeUnavailable\">Make Unavailable for balance of day</label>\r\n                </li>\r\n                <li>\r\n                    <label nz-checkbox formControlName=\"unallocAdmin\">Unallocate Admin Activities</label>\r\n                </li>\r\n                <li>\r\n                    <label nz-checkbox formControlName=\"unallocUnapproved\">Unallocate any unapproved entries</label>\r\n                </li>\r\n                <li>\r\n                    <label nz-checkbox formControlName=\"unallocMaster\">Unallocate Master Roster</label>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <div nz-row>\r\n            <nz-form-item>\r\n                <nz-form-label [nzNoColon]=\"true\">Short Leave Explanation</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Required Field\">\r\n                    <textarea rows=\"4\" nz-input formControlName=\"explanation\"></textarea>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n        <div nz-row nzGutter=16>\r\n            <div nz-col nzSpan=\"12\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">Reason For Unavailability</label>\r\n                    <nz-select formControlName=\"activityCode\" nzAllowClear>\r\n                        <nz-option nzValue=\"lucy\" nzLabel=\"Lucy\"></nz-option>\r\n                    </nz-select>\r\n                </div>\r\n            </div>\r\n            <div nz-col nzSpan=\"12\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">Pay Code</label>\r\n                    <nz-select formControlName=\"payCode\" nzAllowClear >\r\n                        <nz-option nzValue=\"lucy\" nzLabel=\"Lucy\"></nz-option>\r\n                    </nz-select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n           <div class=\"form-group\">\r\n                <label nz-checkbox formControlName=\"programShow\">Accept Program of Original Service As Program For Leave</label>\r\n           </div>\r\n        </div>\r\n        <div nz-row *ngIf=\"leaveGroup.get('programShow').value\">\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Change Program For Leave To the Following Program</label>\r\n                <nz-select formControlName=\"program\" nzAllowClear>\r\n                    <nz-option nzValue=\"lucy\" nzLabel=\"Lucy\"></nz-option>\r\n                </nz-select>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\"  [nzLoading]=\"isLoading\">Save</button>\r\n    </div>\r\n</nz-modal>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\nimport format from 'date-fns/format';\r\nimport getYear from 'date-fns/getYear';\r\nimport getDate from 'date-fns/getDate';\r\nimport getMonth from 'date-fns/getMonth';\r\n\r\n@Component({\r\n    styles: [`\r\n      nz-table{\r\n            margin-top:20px;\r\n        }\r\n        nz-select{\r\n            width:100%;\r\n        }\r\n        label.chk{\r\n            position: absolute;\r\n            top: 1.5rem;\r\n        }\r\n    `],\r\n    templateUrl: './opnote.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class StaffOPAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any>;\r\n\r\n    modalOpen: boolean = false;\r\n    isLoading: boolean = false;\r\n\r\n    default = {\r\n        notes: '',\r\n        isPrivate: false,\r\n        alarmDate: null,\r\n        whocode: '',\r\n        recordNumber: null,\r\n        category: null\r\n    }\r\n\r\n    dateFormat: string = 'dd/MM/yyyy';\r\n    addOREdit: number;\r\n    categories: Array<any>;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/staff/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'op-note')) {\r\n                this.user = data;\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    buildForm() {\r\n        this.inputForm = this.formBuilder.group({\r\n            notes: '',\r\n            isPrivate: false,\r\n            alarmDate: null,\r\n            whocode: '',\r\n            recordNumber: null,\r\n            category: [null, [Validators.required]]\r\n        });\r\n    }\r\n\r\n    search(user: any = this.user) {\r\n        this.cd.reattach();\r\n        this.isLoading = true;\r\n        this.timeS.getopnotes(user.code).pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            this.tableData = data;\r\n            this.isLoading = false;\r\n            this.cd.detectChanges();\r\n        });\r\n\r\n        this.listS.getlistop().pipe(takeUntil(this.unsubscribe)).subscribe(data => this.categories = data)\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    showAddModal() {\r\n        this.addOREdit = 1;\r\n        this.modalOpen = true;\r\n    }\r\n\r\n    save() {\r\n        if (!this.globalS.IsFormValid(this.inputForm))\r\n            return;        \r\n        \r\n        const cleanDate = this.globalS.VALIDATE_AND_FIX_DATETIMEZONE_ANOMALY(\r\n            this.inputForm.get('alarmDate').value);\r\n        \r\n        this.inputForm.controls[\"alarmDate\"].setValue(cleanDate);\r\n\r\n        this.isLoading = true;\r\n        if (this.addOREdit == 1) {\r\n            this.inputForm.controls[\"whocode\"].setValue(this.user.code);\r\n            this.timeS.postopnote(this.inputForm.value, this.user.id).pipe(\r\n                takeUntil(this.unsubscribe)).subscribe(data => {\r\n                    if (data) {\r\n                        this.globalS.sToast('Success', 'Note saved');\r\n                        this.search();\r\n                        this.handleCancel();\r\n                        return;\r\n                    }\r\n                });\r\n        }\r\n\r\n        if (this.addOREdit == 2) {\r\n            this.timeS.updateopnote(this.inputForm.value, this.inputForm.value.recordNumber).pipe(\r\n                takeUntil(this.unsubscribe)).subscribe(data => {\r\n                    if (data) {\r\n                        this.globalS.sToast('Success', 'Note Updated');\r\n                        this.search();\r\n                        this.handleCancel();\r\n                        return;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    showEditModal(index: any) {\r\n        this.addOREdit = 2;\r\n        const { alarmDate, detail, isPrivate, category, creator, recordNumber } = this.tableData[index];\r\n\r\n        this.inputForm.patchValue({\r\n            notes: detail,\r\n            isPrivate: isPrivate,\r\n            alarmDate: alarmDate,\r\n            whocode: creator,\r\n            recordNumber: recordNumber,\r\n            category: category\r\n        });\r\n        this.modalOpen = true;\r\n    }\r\n\r\n    delete(index: number) {        \r\n        const { recordNumber } = this.tableData[index];\r\n        this.timeS.deleteopnote(recordNumber).pipe(\r\n            takeUntil(this.unsubscribe)).subscribe(data => {\r\n                if (data) {\r\n                    this.globalS.sToast('Success', 'Note Deleted');\r\n                    this.search();\r\n                    this.handleCancel();\r\n                }\r\n            });\r\n    }\r\n\r\n    handleCancel() {\r\n        this.modalOpen = false;\r\n        this.inputForm.reset();\r\n        this.isLoading = false;\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col>\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add OP Note</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\" [nzLoading]=\"isLoading\"\r\n            [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"left\" style=\"width: 40rem\">Detail</th>\r\n                    <th>Category</th>\r\n                    <th>Detail Date</th>\r\n                    <th>Creator</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ data.detail  }}</td>\r\n                    <td>{{ data.category}}</td>\r\n                    <td>{{ data.detailDate | date: 'dd/MM/y' }}</td>\r\n                    <td>{{ data.creator || '-' }}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this group?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"delete(i)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<nz-modal [(nzVisible)]=\"modalOpen\" [nzTitle]=\"addOREdit ? 'Add OP Note' : 'Edit OP Note'\" (nzOnCancel)=\"handleCancel()\">\r\n    <div [formGroup]=\"inputForm\">\r\n        <div nz-row>\r\n            <nz-form-item>\r\n                <nz-form-label [nzNoColon]=\"true\">Description</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Category is required!\">\r\n                    <nz-select formControlName=\"category\" nzAllowClear nzPlaceHolder=\"\"\r\n                        [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let d of categories\" [nzValue]=\"d\" [nzLabel]=\"d\">\r\n                        </nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n        <div nz-row [nzGutter]=\"12\">\r\n            <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                <label for=\"\">Reminder Date</label>\r\n                <nz-date-picker formControlName=\"alarmDate\" [nzFormat]=\"dateFormat\"></nz-date-picker>\r\n            </div>\r\n            <div nz-col nzSpan=\"12\">\r\n                <label class=\"chk\" nz-checkbox formControlName=\"isPrivate\">Private</label>\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Notes</label>\r\n                <textarea rows=\"4\" nz-input formControlName=\"notes\"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"isLoading\">Save</button>\r\n    </div>\r\n</nz-modal>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes, statuses } from '@services/index';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n    styles: [`\r\n      .card-container{\r\n          margin-top:2rem;\r\n      }\r\n      nz-select{\r\n          width:100%;\r\n      }\r\n      .checkboxes label{\r\n        width:23rem;\r\n        margin-top:15px;\r\n      }\r\n      tbody.hours tr td:first-child{\r\n          width: 10rem;\r\n      }\r\n      tbody.work-chart tr td{\r\n          width:3rem;\r\n      }\r\n      tbody.work-chart tr td:not(:first-child){\r\n          text-align:center;\r\n      }\r\n    `],\r\n    templateUrl: './pay.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class StaffPayAdmin implements OnInit, OnDestroy {\r\n\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n\r\n    date: Date = new Date();\r\n    checked: any;\r\n\r\n    statuses: Array<string> = statuses;\r\n    awardsArr: Array<any> = [];\r\n    staffsArr: Array<any> = [];\r\n\r\n    payGroup: FormGroup;\r\n\r\n    constructor(\r\n        private listS: ListService,\r\n        private timeS: TimeSheetService,\r\n        private globalS: GlobalService,\r\n        private cd: ChangeDetectorRef,\r\n        private sharedS: ShareService,\r\n        private router: Router,\r\n        private formBuilder: FormBuilder,\r\n    ) {\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/staff/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'leave')) {\r\n                this.user = data;\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n\r\n        this.populateDropdDowns();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        \r\n    }\r\n\r\n    onChange(event: any) {\r\n        \r\n    }\r\n\r\n    search(user: any = this.user) {\r\n        this.timeS.getpaydetails(user.id)\r\n            .subscribe(data => {\r\n                this.payGroup.patchValue(data)\r\n            });\r\n    }\r\n\r\n    onKeyPress(data: KeyboardEvent) {\r\n        return this.globalS.acceptOnlyNumeric(data);\r\n    }\r\n\r\n    buildForm() {\r\n        this.payGroup = this.formBuilder.group({\r\n            accountNo: \"\",\r\n            award: \"\",\r\n            awardLevel: \"\",\r\n            cH_1_1: \"\",\r\n            cH_1_2: \"\",\r\n            cH_1_3: \"\",\r\n            cH_1_4: \"\",\r\n            cH_1_5: \"\",\r\n            cH_1_6: \"\",\r\n            cH_1_7: \"\",\r\n            cH_2_1: \"\",\r\n            cH_2_2: \"\",\r\n            cH_2_3: \"\",\r\n            cH_2_4: \"\",\r\n            cH_2_5: \"\",\r\n            cH_2_6: \"\",\r\n            cH_2_7: \"\",\r\n            caldStatus: \"\",\r\n            caseManager: false,\r\n            category: \"\",\r\n            commencementDate: \"\",\r\n            contactIssues: \"\",\r\n            cstda_DisabilityGroup: \"\",\r\n            cstda_Indiginous: \"\",\r\n            cstda_OtherDisabilities: null,\r\n            dLicence: \"\",\r\n            dob: \"\",\r\n            emailTimesheet: false,\r\n            employeeOf: \"\",\r\n            excludeClientAdminFromPay: false,\r\n            excludeFromPayExport: false,\r\n            filePhoto: \"\",\r\n            firstName: \"\",\r\n            gender: \"\",\r\n            hrS_DAILY_MAX: \"\",\r\n            hrS_DAILY_MIN: \"\",\r\n            hrS_FNIGHTLY_MAX: \"\",\r\n            hrS_FNIGHTLY_MIN: \"\",\r\n            hrS_WEEKLY_MAX: \"\",\r\n            hrS_WEEKLY_MIN: \"\",\r\n            includeLaundry: false,\r\n            includeUniform: false,\r\n            isRosterable: false,\r\n            jobFTE: null,\r\n            jobStatus: \"\",\r\n            jobTitle: \"\",\r\n            jobWeighting: null,\r\n            lastName: \"\",\r\n            middleNames: \"\",\r\n            nRegistration: \"\",\r\n            pan_Manager: \"\",\r\n            payGroup: \"\",\r\n            preferredName: \"\",\r\n            publicHolidayRegion: \"\",\r\n            rating: \"\",\r\n            serviceRegion: \"\",\r\n            sqlid: null,\r\n            stF_CODE: \"\",\r\n            staffGroup: \"\",\r\n            staffTeam: \"\",\r\n            stf_Code: \"\",\r\n            stf_Department: \"\",\r\n            subCategory: \"\",\r\n            superFund: \"\",\r\n            superPercent: \"\",\r\n            terminationDate: null,\r\n            title: \"\",\r\n            ubdMap: \"\",\r\n            uniqueID: \"\",\r\n            vRegistration: \"\",\r\n        })\r\n    }\r\n\r\n    populateDropdDowns() {\r\n        this.listS.getawards().subscribe(data => this.awardsArr = data);\r\n\r\n        this.timeS.getstaff({\r\n            User: this.globalS.decode().nameid,\r\n            SearchString: ''\r\n        }).subscribe(data => {\r\n            this.staffsArr = data;\r\n        }); \r\n    }\r\n\r\n    updateWorkHours(){\r\n        this.timeS.updateworkhours(this.payGroup.value).pipe(\r\n            takeUntil(this.unsubscribe))\r\n            .subscribe(data => {\r\n                this.globalS.sToast('Success', 'Data Updated');\r\n            });\r\n    }\r\n\r\n    \r\n\r\n}","<div>\r\n    <div>\r\n        <div nz-row>\r\n            <button class=\"botton success\" (click)=\"updateWorkHours()\" [disabled]=\"!payGroup?.dirty\">Save Changes</button>\r\n        </div>\r\n\r\n        <div nz-row [nzGutter]=\"8\" style=\"margin-top:1rem\">\r\n            <div nz-col [nzSpan]=\"12\" [formGroup]=\"payGroup\">\r\n                <nz-card nzTitle=\"Commencement and Termination Dates\">\r\n                    <div nz-row nzGutter=\"8\">\r\n                        <div nz-col nzSpan=\"12\">\r\n                           <div class=\"form-group\">\r\n                                <label for=\"\">Start Date</label>\r\n                                <nz-date-picker formControlName=\"commencementDate\"></nz-date-picker>\r\n                           </div>\r\n                        </div>\r\n                        <div nz-col nzSpan=\"12\">\r\n                           <div class=\"form-group\">\r\n                                <label for=\"\">End Date</label>\r\n                                <nz-date-picker formControlName=\"terminationDate\"></nz-date-picker>\r\n                           </div>\r\n                        </div>\r\n                    </div>\r\n                    <div nz-row>\r\n                       <div class=\"form-group\">\r\n                            <label for=\"\">Public Holiday Region</label>\r\n                            <input type=\"text\" nz-input formControlName=\"publicHolidayRegion\">\r\n                       </div>\r\n                    </div>\r\n                </nz-card>\r\n            </div>\r\n            <div nz-col [nzSpan]=\"12\" [formGroup]=\"payGroup\">\r\n                <nz-card nzTitle=\"Position Details\">\r\n                    <div nz-row nzGutter=\"8\">\r\n                        <div nz-row nzGutter=\"8\">\r\n                            <div nz-col nzSpan=\"12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">Job Status</label>\r\n                                    <nz-select formControlName=\"jobStatus\">\r\n                                        <nz-option *ngFor=\"let status of statuses\" [nzValue]=\"status\" [nzLabel]=\"status\"></nz-option>\r\n                                    </nz-select>\r\n                                </div>\r\n                            </div>\r\n                            <div nz-col nzSpan=\"12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">Job Title</label>\r\n                                    <input type=\"text\" nz-input formControlName=\"jobTitle\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div nz-row nzGutter=\"8\">\r\n                            <div nz-col nzSpan=\"12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">Weighting</label>\r\n                                    <input type=\"text\" nz-input formControlName=\"jobWeighting\">\r\n                                </div>\r\n                            </div>\r\n                            <div nz-col nzSpan=\"12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">FTE</label>\r\n                                    <input type=\"text\" nz-input formControlName=\"jobFTE\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nz-card>\r\n            </div>           \r\n        </div>\r\n\r\n        <div nz-row [nzGutter]=\"8\" class=\"card-container\" [formGroup]=\"payGroup\">\r\n            <div nz-col [nzSpan]=\"24\">\r\n                <nz-card nzTitle=\"Payroll Information\">\r\n                    <div nz-row nzGutter=\"8\">\r\n                        <div nz-row nzGutter=\"8\">\r\n                            <div nz-col nzSpan=\"4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">Staff No</label>\r\n                                    <input type=\"text\" nz-input formControlName=\"stF_CODE\">\r\n                                </div>\r\n                            </div>\r\n                            <div nz-col nzSpan=\"4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">Award Level</label>\r\n                                    <input type=\"text\" nz-input formControlName=\"awardLevel\">\r\n                                </div>\r\n                            </div>\r\n                            <div nz-col nzSpan=\"4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">Party Group</label>\r\n                                    <input type=\"text\" nz-input formControlName=\"payGroup\">\r\n                                </div>\r\n                            </div>\r\n                            <div nz-col nzSpan=\"4\" nzOffset=\"4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">Award</label>\r\n                                    <nz-select formControlName=\"award\">\r\n                                        <nz-option *ngFor=\"let award of awardsArr\" [nzValue]=\"award\" [nzLabel]=\"award\"></nz-option>\r\n                                    </nz-select>\r\n                                </div>\r\n                            </div>\r\n                            <div nz-col nzSpan=\"4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">Employee Of</label>\r\n                                    <nz-select formControlName=\"employeeOf\">\r\n                                        <nz-option *ngFor=\"let staff of staffsArr\" [nzValue]=\"staff.accountNo\" [nzLabel]=\"staff.accountNo\"></nz-option>\r\n                                    </nz-select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div nz-row>\r\n                            <div nz-col nzSpan=\"24\">\r\n                                <div class=\"checkboxes\">\r\n                                    <label nz-checkbox formControlName=\"includeUniform\">Uniform</label>\r\n                                    <label nz-checkbox formControlName=\"excludeFromPayExport\">Exclude From Pay Export</label>\r\n                                </div>\r\n                                <div class=\"checkboxes\">\r\n                                    <label nz-checkbox formControlName=\"includeLaundry\">Laundry</label>\r\n                                    <label nz-checkbox formControlName=\"excludeClientAdminFromPay\">Exclude Client Administration From Payroll</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nz-card>\r\n            </div>           \r\n        </div>\r\n\r\n\r\n        <div nz-row [nzGutter]=\"8\" class=\"card-container\" >\r\n            <div nz-row>\r\n                <nz-card nzTitle=\"Work Hours\">\r\n                    <div nz-row nzGutter=\"8\" [formGroup]=\"payGroup\">\r\n                        <div nz-col nzSpan=\"8\">\r\n                            <table>\r\n                                <tbody class=\"hours\">\r\n                                    <tr>\r\n                                        <td>Min Daily Hours</td>\r\n                                        <td><input type=\"text\" nz-input numeric formControlName=\"hrS_DAILY_MIN\" (keypress)=\"onKeyPress($event)\"  maxlength=\"5\"></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Max Daily Hours</td>\r\n                                        <td><input type=\"text\" nz-input numeric formControlName=\"hrS_DAILY_MAX\" (keypress)=\"onKeyPress($event)\" maxlength=\"5\"></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Min Weekly Hours</td>\r\n                                        <td><input type=\"text\" nz-input numeric formControlName=\"hrS_WEEKLY_MIN\" (keypress)=\"onKeyPress($event)\" maxlength=\"5\"></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Max Weekly Hours</td>\r\n                                        <td><input type=\"text\" nz-input numeric formControlName=\"hrS_WEEKLY_MAX\" (keypress)=\"onKeyPress($event)\" maxlength=\"5\"></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Min Pay Period Hours</td>\r\n                                        <td><input type=\"text\" nz-input numeric formControlName=\"hrS_FNIGHTLY_MIN\" (keypress)=\"onKeyPress($event)\" maxlength=\"5\"></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Max Pay Period Hours</td>\r\n                                        <td><input type=\"text\" nz-input numeric formControlName=\"hrS_FNIGHTLY_MAX\" (keypress)=\"onKeyPress($event)\" maxlength=\"5\"></td>\r\n                                    </tr>                                    \r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div nz-col nzSpan=\"16\">\r\n                           <table>\r\n                               <tbody class=\"work-chart\">\r\n                                    <tr style=\"background: #c6dfff;\">\r\n                                        <td>Day</td>\r\n                                        <td>1</td>\r\n                                        <td>2</td>\r\n                                        <td>3</td>\r\n                                        <td>4</td>\r\n                                        <td>5</td>\r\n                                        <td>6</td>\r\n                                        <td>7</td>\r\n                                        <td>1</td>\r\n                                        <td>2</td>\r\n                                        <td>3</td>\r\n                                        <td>4</td>\r\n                                        <td>5</td>\r\n                                        <td>6</td>\r\n                                        <td>7</td>\r\n                                    </tr>\r\n                                    <tr style=\"background:#8cbeff\">\r\n                                        <td>Week</td>\r\n                                        <td>1</td>\r\n                                        <td>1</td>\r\n                                        <td>1</td>\r\n                                        <td>1</td>\r\n                                        <td>1</td>\r\n                                        <td>1</td>\r\n                                        <td>1</td>\r\n                                        <td>2</td>\r\n                                        <td>2</td>\r\n                                        <td>2</td>\r\n                                        <td>2</td>\r\n                                        <td>2</td>\r\n                                        <td>2</td>\r\n                                        <td>2</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td><input type=\"text\" nz-input formControlName=\"cH_1_1\" numeric maxlength=\"5\"></td>\r\n                                        <td><input type=\"text\" nz-input formControlName=\"cH_1_2\" numeric maxlength=\"5\"></td>\r\n                                        <td><input type=\"text\" nz-input formControlName=\"cH_1_3\" numeric maxlength=\"5\"></td>\r\n                                        <td><input type=\"text\" nz-input formControlName=\"cH_1_4\" numeric maxlength=\"5\"></td>\r\n                                        <td><input type=\"text\" nz-input formControlName=\"cH_1_5\" numeric maxlength=\"5\"></td>\r\n                                        <td><input type=\"text\" nz-input formControlName=\"cH_1_6\" numeric maxlength=\"5\"></td>\r\n                                        <td><input type=\"text\" nz-input formControlName=\"cH_1_7\" numeric maxlength=\"5\"></td>\r\n                                        <td><input type=\"text\" nz-input formControlName=\"cH_2_1\" numeric maxlength=\"5\"></td>\r\n                                        <td><input type=\"text\" nz-input formControlName=\"cH_2_2\" numeric maxlength=\"5\"></td>\r\n                                        <td><input type=\"text\" nz-input formControlName=\"cH_2_3\" numeric maxlength=\"5\"></td>\r\n                                        <td><input type=\"text\" nz-input formControlName=\"cH_2_4\" numeric maxlength=\"5\"></td>\r\n                                        <td><input type=\"text\" nz-input formControlName=\"cH_2_5\" numeric maxlength=\"5\"></td>\r\n                                        <td><input type=\"text\" nz-input formControlName=\"cH_2_6\" numeric maxlength=\"5\"></td>\r\n                                        <td><input type=\"text\" nz-input formControlName=\"cH_2_7\" numeric maxlength=\"5\"></td>\r\n                                    </tr>\r\n                               </tbody>\r\n                           </table>\r\n                        </div>\r\n                    </div>                   \r\n                </nz-card>\r\n            </div>\r\n        </div>\r\n\r\n        <div nz-row [nzGutter]=\"8\" class=\"card-container\">\r\n            <div nz-col [nzSpan]=\"24\">\r\n                <nz-card nzTitle=\"Current Leave Details\">\r\n                    <div nz-row>\r\n\r\n                    </div>\r\n                </nz-card>\r\n            </div>           \r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    styles: [`\r\n      \r\n    `],\r\n    templateUrl: './personal.html'\r\n})\r\n\r\n\r\nexport class StaffPersonalAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n\r\n    user: any;\r\n    transformedUser: any;\r\n\r\n    constructor(\r\n        private sharedS: ShareService,\r\n        private globalS: GlobalService,\r\n        private router: Router,\r\n    ) {\r\n        \r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/staff/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'personal')) {\r\n                this.user = data;\r\n                this.transform(this.user);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.transform(this.user)\r\n        // this.user = {\r\n        //     name: 'ABBAS A',\r\n        //     view: 'staff'\r\n        // }\r\n    }\r\n\r\n    transform(user: any) {\r\n        if (!user) return;\r\n        \r\n        this.transformedUser = {\r\n            name: user.code,\r\n            view: user.view,\r\n            id: user.id,\r\n            sysmgr: user.sysmgr\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n}","<div *ngIf=\"transformedUser\">\r\n    <app-profile-page [(ngModel)]=\"transformedUser\" [isAdmin]=\"true\" ngDefaultControl></app-profile-page>\r\n</div>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\n\r\n@Component({\r\n    styles: [`\r\n        nz-table{\r\n            margin-top:20px;\r\n        }\r\n        nz-select{\r\n            width:100%;\r\n        }\r\n    `],\r\n    templateUrl: './position.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class StaffPositionAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    modalOpen: boolean = false;\r\n    isLoading: boolean = false;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any>;\r\n    lists: Array<any>;\r\n\r\n    dateFormat: string = 'MMM dd yyyy';\r\n    editOrAdd: number;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/staff/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'position')) {\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    buildForm() {\r\n        this.inputForm = this.formBuilder.group({\r\n            personID: [''],\r\n            position: ['', [Validators.required]],\r\n            startDate: null,\r\n            endDate: null,\r\n            dates: [[], [Validators.required]],\r\n            positionID: [''],\r\n            notes: [''],\r\n            recordNumber: ['']\r\n        });\r\n    }\r\n\r\n    get title() {\r\n        const pro = this.editOrAdd == 1 ? 'Add' : 'Edit';\r\n        return `${pro} Position`;\r\n    }\r\n\r\n    search(user: any = this.sharedS.getPicked()) {\r\n        this.cd.reattach();\r\n\r\n        this.isLoading = true;\r\n        this.timeS.getstaffpositions(user.id)\r\n            .subscribe(data => {\r\n                this.tableData = data;\r\n                this.isLoading = false;\r\n                this.cd.detectChanges();\r\n            })\r\n\r\n        this.listS.getlistpositions()\r\n            .subscribe(data => this.lists = data)\r\n    }\r\n\r\n    showAddModal() {\r\n        this.editOrAdd = 1;\r\n        this.modalOpen = true;\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    save() {\r\n\r\n        for (const i in this.inputForm.controls) {\r\n            this.inputForm.controls[i].markAsDirty();\r\n            this.inputForm.controls[i].updateValueAndValidity();\r\n        }\r\n\r\n        if (!this.inputForm.valid)\r\n            return;\r\n\r\n        const { position, dates, positionID, notes, recordNumber } = this.inputForm.value;\r\n\r\n        const inputForm = {\r\n            personID: this.user.id,\r\n            position: position,\r\n            startDate: dates[0],\r\n            endDate: dates[1],\r\n            positionID: positionID,\r\n            notes: notes,\r\n            recordNumber: recordNumber\r\n        }\r\n\r\n        this.isLoading = true;\r\n\r\n        if(this.editOrAdd == 1){\r\n            this.timeS.poststaffpositions(inputForm).pipe(\r\n                takeUntil(this.unsubscribe)).subscribe(data => {\r\n                    if (data) {\r\n                        this.handleCancel();\r\n                        this.success();\r\n                        this.globalS.sToast('Success', 'Data Deleted');\r\n                    }\r\n                })\r\n        }\r\n\r\n        if (this.editOrAdd == 2) {\r\n            this.timeS.updatestaffpositions(inputForm, inputForm.recordNumber).pipe(\r\n                takeUntil(this.unsubscribe)).subscribe(data => {\r\n                    if (data) {\r\n                        this.handleCancel();\r\n                        this.success();\r\n                        this.globalS.sToast('Success', 'Data Updated');\r\n                    }                    \r\n                })\r\n        }\r\n    }   \r\n\r\n    handleCancel() {\r\n        this.inputForm.reset();\r\n        this.isLoading = false;\r\n        this.modalOpen = false;\r\n    }\r\n\r\n    success() {\r\n        this.search();\r\n        this.isLoading = false;\r\n    }\r\n\r\n    delete({ recordNumber }) {\r\n        this.timeS.deletestaffpositions(recordNumber)\r\n            .pipe(takeUntil(this.unsubscribe))\r\n            .subscribe(data => {\r\n                if (data) {\r\n                    this.handleCancel();\r\n                    this.success();\r\n                    this.globalS.sToast('Success', 'Data Deleted');\r\n                }\r\n            });\r\n    }\r\n\r\n    showEditModal(index: number) {\r\n        console.log(this.tableData[index]);\r\n\r\n        const { position, startDate, endDate, positionID, notes, personID, recordNumber  } = this.tableData[index];\r\n\r\n        this.inputForm.patchValue({\r\n            position: position,\r\n            positionID: positionID,\r\n            notes: notes,\r\n            dates: [startDate, endDate],\r\n            recordNumber,\r\n            personID\r\n        });\r\n\r\n        this.editOrAdd = 2;\r\n        this.modalOpen = true;\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col>\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Position</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzLoading]=\"isLoading\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\" [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Position</th>\r\n                    <th>Start Date</th>\r\n                    <th>End Date</th>\r\n                    <th>Position ID</th>\r\n                    <th>Notes</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td>{{data.position}}</td>\r\n                    <td>{{data.startDate | date: 'd/MM/y'}}</td>\r\n                    <td>{{data.endDate | date: 'd/MM/y'}}</td>\r\n                    <td>{{data.positionID}}</td>\r\n                    <td>{{data.notes}}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this group?\" nzPopconfirmPlacement=\"bottom\"\r\n                            (nzOnConfirm)=\"delete(data)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n<nz-modal [(nzVisible)]=\"modalOpen\" [nzTitle]=\"title\" (nzOnCancel)=\"handleCancel()\">\r\n    <div nz-row [formGroup]=\"inputForm\" nz-form [nzLayout]=\"'horizontal'\">\r\n        <div nz-row>\r\n            <nz-form-item>\r\n                <nz-form-label [nzSpan]=\"6\" >Date Range</nz-form-label>\r\n                <nz-form-control [nzSpan]=\"14\" nzErrorTip=\"Date range is required\">\r\n                    <nz-range-picker [nzFormat]=\"dateFormat\" formControlName=\"dates\">\r\n                    </nz-range-picker>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n        <div nz-row>\r\n            <nz-form-item>\r\n                <nz-form-label [nzSpan]=\"6\" nzRequired >Position</nz-form-label>\r\n                <nz-form-control [nzSpan]=\"14\" nzErrorTip=\"Required Field\">\r\n                    <nz-select formControlName=\"position\" nzAllowClear nzPlaceHolder=\"\"\r\n                        [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let list of lists\" [nzValue]=\"list\" [nzLabel]=\"list\"></nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n        <div nz-row>\r\n            <nz-form-item>\r\n                <nz-form-label [nzSpan]=\"6\">Position ID</nz-form-label>\r\n                <nz-form-control [nzSpan]=\"14\" nzErrorTip=\"Required Field\">\r\n                    <input nz-input type=\"text\" formControlName=\"positionID\">\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n        <div nz-row>\r\n            <nz-form-item>\r\n                <nz-form-label [nzSpan]=\"6\">Notes</nz-form-label>\r\n                <nz-form-control [nzSpan]=\"14\" nzErrorTip=\"Required Field\">\r\n                    <textarea rows=\"4\" nz-input formControlName=\"notes\"></textarea>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"isLoading\">Save</button>\r\n    </div>\r\n</nz-modal>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes, recurringInt, recurringStr } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject, EMPTY } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    styles: [`\r\n       nz-table{\r\n            margin-top:20px;\r\n        }\r\n         nz-select{\r\n            width:100%;\r\n        }\r\n    `],\r\n    templateUrl: './reminder.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class StaffReminderAdmin implements OnInit, OnDestroy {\r\n\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any>;\r\n\r\n    modalOpen: boolean = false;\r\n    addOREdit: number;\r\n    isLoading: boolean = false;\r\n    lists: Array<any> = [];\r\n    dateFormat: string = 'dd/MM/yyyy';\r\n\r\n    dayInt = recurringInt;\r\n    dayStr = recurringStr;\r\n\r\n    private default: any = {\r\n        recordNumber: '',\r\n        personID: '',\r\n        listOrder: '',\r\n        followUpEmail: '',\r\n        recurring: false,\r\n        recurrInt: null,\r\n        recurrStr: null,\r\n        notes: '',\r\n        reminderDate: null,\r\n        dueDate: null,\r\n        staffAlert: null\r\n    }\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/staff/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'reminders')) {\r\n                this.user = data;\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    buildForm() {\r\n        this.inputForm = this.formBuilder.group({\r\n            recordNumber: '',\r\n            personID: '',\r\n            listOrder: '',\r\n            followUpEmail: ['', [Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\r\n            recurring: false,\r\n            recurrInt: '',\r\n            recurrStr: '',\r\n            notes: '',\r\n            reminderDate: null,\r\n            dueDate: null,\r\n            staffAlert: ['', [Validators.required]]\r\n        });\r\n\r\n        this.inputForm.controls['recurrStr'].disable();\r\n        this.inputForm.controls['recurrInt'].disable();\r\n\r\n        this.inputForm.get('recurring').valueChanges.subscribe(data => {\r\n            if(!data){\r\n                this.inputForm.controls['recurrInt'].setValue(null)\r\n                this.inputForm.controls['recurrStr'].setValue(null)\r\n                this.inputForm.controls['recurrStr'].disable()\r\n                this.inputForm.controls['recurrInt'].disable()\r\n            } else {\r\n                this.inputForm.controls['recurrStr'].enable()\r\n                this.inputForm.controls['recurrInt'].enable()\r\n            }\r\n        })\r\n    }\r\n\r\n    search(user: any = this.user) {\r\n        this.cd.reattach();\r\n        this.isLoading = true;\r\n        this.timeS.getreminders(user.code).subscribe(data => {\r\n            this.tableData = data;\r\n            this.isLoading = false;\r\n            this.cd.detectChanges();\r\n        });\r\n\r\n        this.listS.getlistreminders().subscribe(data => this.lists = data)\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    save() {\r\n        if (!this.globalS.IsFormValid(this.inputForm))\r\n            return;\r\n\r\n        const remGroup = this.inputForm.value;\r\n        const reminderDate = this.globalS.VALIDATE_AND_FIX_DATETIMEZONE_ANOMALY(remGroup.reminderDate);\r\n        const dueDate = this.globalS.VALIDATE_AND_FIX_DATETIMEZONE_ANOMALY(remGroup.dueDate);\r\n\r\n        const reminder: Dto.Reminders = {\r\n            recordNumber: remGroup.recordNumber,\r\n            personID: this.user.id,\r\n            name: remGroup.staffAlert,\r\n            address1: remGroup.recurring ? remGroup.recurrInt : '',\r\n            address2: remGroup.recurring ? remGroup.recurrStr : '',\r\n            email: remGroup.followUpEmail,  \r\n            date1: reminderDate,\r\n            date2: dueDate,\r\n            state: remGroup.listOrder,\r\n            notes: remGroup.notes,\r\n            recurring: remGroup.recurring\r\n        }\r\n    \r\n\r\n        if(this.addOREdit == 1){\r\n            this.timeS.postreminders(reminder).pipe(\r\n                takeUntil(this.unsubscribe))\r\n                .subscribe(data => {\r\n                    this.globalS.sToast('Success', 'Data added');\r\n                    this.search();\r\n                    this.handleCancel();\r\n                })\r\n        }\r\n\r\n        if (this.addOREdit == 2) {\r\n            this.timeS.updatereminders(reminder).pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n                this.globalS.sToast('Success', 'Data updated');\r\n                this.search();\r\n                this.handleCancel();\r\n            });\r\n        }\r\n    }\r\n\r\n    showAddModal() {\r\n        this.modalOpen = true;\r\n        this.addOREdit = 1;\r\n    }\r\n\r\n    showEditModal(index: any) {\r\n        this.addOREdit = 2;\r\n        const { recordNumber, personID, alert, reminderDate, dueDate, address1, address2, recurring, state, email, notes} = this.tableData[index];\r\n\r\n        this.inputForm.patchValue({\r\n            recordNumber: recordNumber,\r\n            personID: personID,\r\n            staffAlert: alert,\r\n            reminderDate: reminderDate,\r\n            dueDate: dueDate,\r\n            recurrInt: address1,\r\n            recurrStr: address2,\r\n            recurring: recurring,\r\n            listOrder: state,\r\n            followUpEmail: email,\r\n            notes: notes\r\n        });\r\n\r\n        this.modalOpen = true;\r\n    }\r\n\r\n    delete(index: any) {\r\n        const { recordNumber } = this.tableData[index];\r\n\r\n        this.timeS.deletereminders(recordNumber).pipe(\r\n            takeUntil(this.unsubscribe))\r\n            .subscribe(data => {\r\n                if (data) {\r\n                    this.globalS.sToast('Success', 'Data delted');\r\n                    this.handleCancel();\r\n                    this.search();\r\n                }\r\n            })\r\n    }\r\n\r\n    handleCancel() {        \r\n        this.inputForm.reset(this.default);\r\n        this.isLoading = false;\r\n        this.modalOpen = false;\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col>\r\n        <button class=\"botton success\" (click)=\"showAddModal()\">Add Reminder</button>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzSize]=\"'small'\" [nzLoading]=\"isLoading\" [nzFrontPagination]=\"false\"\r\n            [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"left\">Alert</th>\r\n                    <th>Reminder Date</th>\r\n                    <th>Expiry Date</th>\r\n                    <th>Notes</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ data.alert  }}</td>\r\n                    <td>{{ data.reminderDate | date: 'dd/MM/y' }}</td>\r\n                    <td>{{ data.dueDate | date: 'dd/MM/y'  }}</td>\r\n                    <td>{{ data.notes || '-' }}</td>\r\n                    <td>\r\n                        <a (click)=\"showEditModal(i)\">Update</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a nz-popconfirm nzPopconfirmTitle=\"Are you sure delete this group?\"\r\n                            nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"delete(i)\">Delete</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>\r\n\r\n<nz-modal [nzStyle]=\"{ top: '20px' }\" [(nzVisible)]=\"modalOpen\" [nzTitle]=\"addOREdit ? 'Add Reminder' : 'Edit Reminder'\"\r\n    (nzOnCancel)=\"handleCancel()\">\r\n    <div [formGroup]=\"inputForm\">\r\n        <div nz-row>\r\n            <nz-form-item>\r\n                <nz-form-label [nzNoColon]=\"true\">Reminder</nz-form-label>\r\n                <nz-form-control nzErrorTip=\"Reminder is required!\">\r\n                    <nz-select formControlName=\"staffAlert\" nzAllowClear nzPlaceHolder=\"\"\r\n                        [nzDropdownMatchSelectWidth]=\"false\">\r\n                        <nz-option *ngFor=\"let d of lists\" [nzValue]=\"d\" [nzLabel]=\"d\"></nz-option>\r\n                    </nz-select>\r\n                </nz-form-control>\r\n            </nz-form-item>\r\n        </div>\r\n        <div nz-row [nzGutter]=\"12\">\r\n            <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                <label for=\"\">Reminder Date</label>\r\n                <nz-date-picker formControlName=\"reminderDate\" [nzFormat]=\"dateFormat\"></nz-date-picker>\r\n            </div>\r\n            <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                <label for=\"\">Due Date</label>\r\n                <nz-date-picker formControlName=\"dueDate\" [nzFormat]=\"dateFormat\"></nz-date-picker>\r\n            </div>\r\n        </div>\r\n        <div nz-row [nzGutter]=\"12\">\r\n            <div nz-col nzSpan=\"5\" class=\"form-group\">\r\n                <label for=\"\">Recurring</label>\r\n                <label style=\"margin: 10px;\" nz-checkbox formControlName=\"recurring\"></label>\r\n            </div>\r\n            <div nz-col nzOffset = \"3\" nzSpan=\"8\" class=\"form-group\">\r\n                <nz-form-item>\r\n                    <nz-form-label [nzNoColon]=\"true\">Recurring Every</nz-form-label>\r\n                    <nz-form-control nzErrorTip=\"Preferences is required!\">\r\n                        <nz-select formControlName=\"recurrInt\" nzAllowClear nzPlaceHolder=\"\" [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let d of dayInt\" [nzValue]=\"d\" [nzLabel]=\"d\"></nz-option>\r\n                        </nz-select>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n            </div>\r\n            <div nz-col nzSpan=\"8\" class=\"form-group\">\r\n                <nz-form-item>\r\n                    <nz-form-label [nzNoColon]=\"true\"></nz-form-label>\r\n                    <nz-form-control nzErrorTip=\"Preferences is required!\">\r\n                        <nz-select formControlName=\"recurrStr\" nzAllowClear nzPlaceHolder=\"\" [nzDropdownMatchSelectWidth]=\"false\">\r\n                            <nz-option *ngFor=\"let d of dayStr\" [nzValue]=\"d\" [nzLabel]=\"d\"></nz-option>\r\n                        </nz-select>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n            </div>\r\n        </div>\r\n        <div nz-row [nzGutter]=\"12\">\r\n            <div nz-col nzSpan=\"8\" class=\"form-group\">\r\n                <label for=\"\">List Order</label>\r\n                <input nz-input formControlName=\"listOrder\" />\r\n            </div>\r\n            <div nz-col nzSpan=\"16\" class=\"form-group\">\r\n                <nz-form-item>\r\n                    <nz-form-label [nzNoColon]=\"true\">Follow-up Email</nz-form-label>\r\n                    <nz-form-control nzErrorTip=\"Enter a valid email address!\">\r\n                        <nz-input-group>\r\n                            <input type=\"text\" nz-input formControlName=\"followUpEmail\" />\r\n                        </nz-input-group>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Notes</label>\r\n                <textarea rows=\"4\" nz-input formControlName=\"notes\"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"isLoading\">Save</button>\r\n    </div>\r\n</nz-modal>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\n\r\nimport { GlobalService, ListService, TimeSheetService, ShareService, leaveTypes } from '@services/index';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { forkJoin, Subscription, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor, FormArray } from '@angular/forms';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Component({\r\n    styles: [`\r\n        nz-table{\r\n            margin-top:20px;\r\n        }\r\n    `],\r\n    templateUrl: './training.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class StaffTrainingAdmin implements OnInit, OnDestroy {\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    user: any;\r\n    inputForm: FormGroup;\r\n    tableData: Array<any>;\r\n    loading: boolean = false;\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private sharedS: ShareService,\r\n        private listS: ListService,\r\n        private router: Router,\r\n        private globalS: GlobalService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        cd.detach();\r\n\r\n        this.router.events.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (data instanceof NavigationEnd) {\r\n                if (!this.sharedS.getPicked()) {\r\n                    this.router.navigate(['/admin/staff/personal'])\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sharedS.changeEmitted$.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            if (this.globalS.isCurrentRoute(this.router, 'training')) {\r\n                this.search(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.sharedS.getPicked();\r\n        this.search(this.user);\r\n        this.buildForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    buildForm() {\r\n        this.inputForm = this.formBuilder.group({\r\n\r\n        });\r\n    }\r\n\r\n    search(user: any) {\r\n        this.cd.reattach();\r\n        this.loading = true;\r\n        this.timeS.gettraining(user.code).subscribe(data => {\r\n            this.tableData = data;\r\n            this.loading = false;\r\n            this.cd.detectChanges();\r\n        });\r\n\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    showAddModal() {\r\n\r\n    }\r\n\r\n    showEditModal(index: any) {\r\n\r\n    }\r\n\r\n    delete(data: any) {\r\n\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col>\r\n        <nz-table #basicTable [nzShowPagination]=\"false\" [nzSize]=\"'small'\" [nzFrontPagination]=\"false\" [nzLoading]=\"loading\"\r\n            [nzData]=\"tableData\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"left\">Date</th>\r\n                    <th>Training</th>\r\n                    <th>Expiry Date</th>\r\n                    <th>Notes</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data;let i = index;trackBy: trackByFn\">\r\n                    <td class=\"left\">{{ data.date  }}</td>\r\n                    <td>{{ data.training }}</td>\r\n                    <td>{{ data.expiryDate }}</td>\r\n                    <td>{{ data.notes }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core'\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { GlobalService, StaffService, ShareService, leaveTypes } from '@services/index';\r\n\r\n@Component({\r\n    styles: [`\r\n        nz-tabset{\r\n            margin-top:1rem;\r\n        }\r\n        nz-tabset >>> div > div.ant-tabs-nav-container{\r\n            height: 25px !important;\r\n            font-size: 13px !important;\r\n        }\r\n\r\n        nz-tabset >>> div div.ant-tabs-nav-container div.ant-tabs-nav-wrap div.ant-tabs-nav-scroll div.ant-tabs-nav div div.ant-tabs-tab{\r\n            line-height: 24px;\r\n            height: 25px;\r\n        }\r\n        nz-tabset >>> div div.ant-tabs-nav-container div.ant-tabs-nav-wrap div.ant-tabs-nav-scroll div.ant-tabs-nav div div.ant-tabs-tab.ant-tabs-tab-active{\r\n            background: #85B9D5;\r\n            color: #fff;\r\n        }\r\n        nz-tabset >>> div div.ant-tabs-nav-container div.ant-tabs-nav-wrap div.ant-tabs-nav-scroll div.ant-tabs-nav div div.ant-tabs-tab{\r\n            border-radius: 0;\r\n        }\r\n    `],\r\n    templateUrl: './staff.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class StaffAdmin implements OnInit, OnDestroy {\r\n    user: any = null;\r\n    nzSelectedIndex: number = 0;\r\n\r\n    isFirstLoad: boolean = false;\r\n    sample: any;\r\n\r\n    listChange(event: any) {\r\n\r\n        if (event == null) {\r\n            this.user = null;\r\n            this.isFirstLoad = false;\r\n            this.sharedS.emitChange(this.user);\r\n            return;\r\n        }\r\n\r\n        if (!this.isFirstLoad) {\r\n            this.view(0);\r\n            this.isFirstLoad = true;\r\n        }\r\n\r\n        // this.user = {\r\n        //     agencyDefinedGroup: \"ARUNDEL\",\r\n        //     code: \"2CDC STEPH\",\r\n        //     id: \"T0100005506\",\r\n        //     sysmgr: true,\r\n        //     view: \"recipient\"\r\n        // }\r\n\r\n        this.user = {\r\n            code: event.accountNo,\r\n            id: event.uniqueID,\r\n            view: event.view,\r\n            agencyDefinedGroup: event.agencyDefinedGroup,\r\n            sysmgr: event.sysmgr\r\n        }\r\n\r\n        this.sharedS.emitChange(this.user);\r\n        this.cd.detectChanges();\r\n    }\r\n    \r\n    // change(data: any) {\r\n        \r\n    //     let user = {};\r\n    //     if (data == 'ABBAS A') {\r\n    //         user = {\r\n    //             code: \"ABBAS A\",\r\n    //             id: \"S0100006438\",\r\n    //             view: 'staff',\r\n    //             sysmgr: true\r\n    //         }\r\n    //     } else {\r\n    //         user = {\r\n    //             code: \"ADAMS D S\",\r\n    //             id: \"SM100005229\",\r\n    //             view: \"staff\",\r\n    //             sysmgr: true\r\n    //         } \r\n    //     }\r\n        \r\n\r\n    //     if (!this.isFirstLoad) {\r\n    //         this.view(0);\r\n    //         this.isFirstLoad = true;\r\n    //     }\r\n    //     this.sharedS.emitChange(user);\r\n    // }\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private activeRoute: ActivatedRoute,\r\n        private sharedS: ShareService,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        \r\n        this.router.events.pipe(\r\n            filter(event => event instanceof NavigationEnd)\r\n        ).subscribe((event: NavigationEnd ) => {\r\n            if (event.url == '/admin/staff') {\r\n                this.sample = { refresh: true };\r\n                this.cd.detectChanges();\r\n            }          \r\n        });\r\n\r\n        this.sharedS.emitRouteChangeSource$.subscribe(data => {\r\n            console.log(data);\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.isFirstLoad = false;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n\r\n    }\r\n\r\n    view(index: number) {\r\n        this.nzSelectedIndex = index;\r\n        if (index == 0) {\r\n            this.router.navigate(['/admin/staff/personal'])\r\n        }\r\n        if (index == 1) {\r\n            this.router.navigate(['/admin/staff/contacts']);            \r\n        }\r\n        if (index == 2) {\r\n            this.router.navigate(['/admin/staff/pay'])\r\n        }\r\n        if (index == 3) {\r\n            this.router.navigate(['/admin/staff/leave'])\r\n        }\r\n        if (index == 4) {\r\n            this.router.navigate(['/admin/staff/reminders'])\r\n        }\r\n        if (index == 5) {\r\n            this.router.navigate(['/admin/staff/op-note'])\r\n        }\r\n        if (index == 6) {\r\n            this.router.navigate(['/admin/staff/hr-note'])\r\n        }\r\n        if (index == 7) {\r\n            this.router.navigate(['/admin/staff/competencies'])\r\n        }\r\n        if (index == 8) {\r\n            this.router.navigate(['/admin/staff/training'])\r\n        }\r\n        if (index == 9) {\r\n            this.router.navigate(['/admin/staff/incident'])\r\n        }\r\n        if (index == 10) {\r\n            this.router.navigate(['/admin/staff/document'])\r\n        }\r\n        if (index == 11) {\r\n            this.router.navigate(['/admin/staff/time-attendance'])\r\n        }\r\n        if (index == 12) {\r\n            this.router.navigate(['/admin/staff/position'])\r\n        }\r\n        if (index == 13) {\r\n            this.router.navigate(['/admin/staff/groupings-preferences'])\r\n        }\r\n        // this.nzSelectedIndex = this.nzSelectedIndex - 1;\r\n    }\r\n}","<div nz-row>\r\n\r\n    <div nz-col nzSpan=\"6\" style=\"margin-top: 10px;\">\r\n        <app-search-list [view]=\"1\" [(ngModel)]=\"sample\" (ngModelChange)=\"listChange($event)\"></app-search-list>\r\n    </div>\r\n\r\n\r\n    <!-- <div>\r\n        <select [(ngModel)]=\"user\" (ngModelChange)=\"change($event)\">\r\n            <option value=\"\"></option>\r\n            <option value=\"ABBAS A\">ABBAS A</option>\r\n            <option value=\"ADAMS D S\">ADAMS D S</option>\r\n        </select>\r\n    </div> -->\r\n\r\n    <!-- (nzSelectedIndexChange)=\"view($event)\" -->\r\n    <div nz-col nzSpan=\"24\">\r\n        <nz-tabset *ngIf=\"user\" [nzTabPosition]=\"'top'\" [nzSelectedIndex]=\"nzSelectedIndex\" [nzType]=\"'card'\">\r\n            <nz-tab nzTitle=\"Personal\" (nzClick)=\"view(0)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Contacts\" (nzClick)=\"view(1)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Pay\" (nzClick)=\"view(2)\"></nz-tab>\r\n            <nz-tab nzTitle=\"Leave App\" (nzClick)=\"view(3)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Reminders\" (nzClick)=\"view(4)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"OP Notes\" (nzClick)=\"view(5)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"HR Notes\" (nzClick)=\"view(6)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Competencies\" (nzClick)=\"view(7)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Training\" (nzClick)=\"view(8)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Incident\" (nzClick)=\"view(9)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Document\" (nzClick)=\"view(10)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Time & Attendance\" (nzClick)=\"view(11)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Position\" (nzClick)=\"view(12)\"> </nz-tab>\r\n            <nz-tab nzTitle=\"Groupings & Preferences\" (nzClick)=\"view(13)\"> </nz-tab>\r\n        </nz-tabset>\r\n    </div>\r\n\r\n    <nz-empty *ngIf=\"user == null\" style=\"margin-top:8rem\" nzNotFoundImage=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n        [nzNotFoundContent]=\"contentTpl\">\r\n        <ng-template #contentTpl>\r\n            <p>Select Staff</p>\r\n        </ng-template>\r\n    </nz-empty>\r\n\r\n    <div nz-col nzSpan=\"24\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, forwardRef, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nimport { mergeMap, takeUntil, concatMap, switchMap, distinctUntilChanged } from 'rxjs/operators';\r\nimport { TimeSheetService, GlobalService, view, ClientService, StaffService, ListService, UploadService, months, days, gender, types, titles, caldStatuses, roles } from '@services/index';\r\nimport { forkJoin, Subscription, Observable, Subject, EMPTY, of } from 'rxjs';\r\n\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\nimport * as _ from 'lodash';\r\n\r\nimport { NzFormatEmitEvent, NzTreeNodeOptions } from 'ng-zorro-antd/core';\r\nimport { NzStepsModule, NzStepComponent } from 'ng-zorro-antd/steps';\r\n\r\nimport format from 'date-fns/format';\r\nimport parseISO from 'date-fns/parseISO'\r\nimport addMinutes from 'date-fns/addMinutes'\r\nimport isSameDay from 'date-fns/isSameDay'\r\n\r\ninterface AddTimesheetModalInterface {\r\n    index: number,\r\n    name: string\r\n}\r\n\r\nexport interface TreeNodeInterface {\r\n  key: number;\r\n  name?: string;\r\n  shiftbookNo?: any;\r\n  activity?: any;\r\n  level?: number;\r\n  expand?: boolean;\r\n  address?: string;\r\n  children?: TreeNodeInterface[];\r\n  parent?: TreeNodeInterface;\r\n}\r\n\r\n\r\ninterface CalculatedPay{\r\n    KMAllowancesQty: number,\r\n    AllowanceQty: number,\r\n    WorkedHours : number,\r\n    PaidAsHours : number,\r\n    PaidAsServices: number,\r\n    WorkedAttributableHours : number,\r\n    PaidQty: number,\r\n    PaidAmount : number,\r\n    ProvidedHours: number,\r\n    BilledAsHours : number,\r\n    BilledAsServices: number,\r\n    BilledQty : number,\r\n    BilledAmount : number,\r\n    HoursAndMinutes: string\r\n}\r\n\r\n@Component({    \r\n    styles: [`\r\n       ul{\r\n            list-style:none;\r\n            float:right;\r\n            margin:0;\r\n        }\r\n        li{\r\n            display: inline-block;\r\n            margin-right: 10px;\r\n            font-size: 12px;\r\n            padding: 5px;\r\n            cursor:pointer;\r\n        }\r\n        li:hover{\r\n            color:#177dff;\r\n        }\r\n        li div{\r\n            text-align: center;\r\n            font-size: 17px;\r\n            width:4rem;\r\n        }\r\n        .selected td{\r\n            background: #d5ffca;\r\n        }\r\n        nz-step >>> .ant-steps-item-container .ant-steps-item-content{\r\n            width: auto !important;\r\n        }\r\n        nz-select{\r\n            width: 11.4rem;\r\n        }\r\n        .time-duration{\r\n            font-weight: 500; \r\n            margin-top: 8px;\r\n        }\r\n        .calculations{\r\n            \r\n        }\r\n        nz-descriptions >>> .ant-descriptions-view tr td.ant-descriptions-item-label{\r\n            padding: 4px 16px;\r\n        }\r\n        nz-descriptions >>> div table tbody tr:last-child td:last-child {\r\n            background: #e1ffdc;\r\n        }\r\n        nz-descriptions >>> div table tbody tr td{\r\n            font-size:11px;\r\n        }\r\n    `],\r\n    templateUrl: './timesheet.html',\r\n})\r\n\r\n\r\nexport class TimesheetAdmin implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n    private unsubscribe: Subject<void> = new Subject();\r\n    private picked$: Subscription;\r\n\r\n    loading: boolean = false;\r\n\r\n    timesheets: Array<any> = [];\r\n    timesheetsGroup: Array<any> = [];   \r\n\r\n    index: number = 0;\r\n    resultMapData: Array<any> = [];\r\n\r\n    currentDate: string;\r\n    payPeriodEndDate: Date;\r\n    unitsArr: Array<string> = ['HOUR', 'SERVICE'];\r\n\r\n    activity_value: number;\r\n    durationObject: any;\r\n\r\n    // 0 = staff; 1 = recipient\r\n    view: number = 0;\r\n    viewType: any;\r\n\r\n    parserPercent = (value: string) => value.replace(' %', '');\r\n    parserDollar = (value: string) => value.replace('$ ', '');\r\n    formatterDollar = (value: number) => `${value > -1 || !value ? `$ ${value}` : ''}`;\r\n    formatterPercent = (value: number) => `${value > -1 || !value ? `% ${value}` : ''}`;\r\n\r\n    overlapValue: any;\r\n    dateFormat: string = 'dd/MM/yyyy'\r\n\r\n    timesheetForm: FormGroup;\r\n    modalTimesheetValues: Array<AddTimesheetModalInterface> = [\r\n        {\r\n            index: 1,\r\n            name: 'ADMINISTRATION'\r\n        },\r\n        {\r\n            index: 2,\r\n            name: 'ALLOWANCE CHARGEABLE'\r\n        },\r\n        {\r\n            index: 3,\r\n            name: 'ALLOWANCE NON-CHARGEABLE'\r\n        },\r\n        {\r\n            index: 4,\r\n            name: 'CASE MANAGEMENT'\r\n        },\r\n        {\r\n            index: 5,\r\n            name: 'ITEM'\r\n        },\r\n        {\r\n            index: 6,\r\n            name: 'SLEEPOVER'\r\n        },\r\n        {\r\n            index: 7,\r\n            name: 'TRAVEL TIME'\r\n        },\r\n        {\r\n            index: 8,\r\n            name: 'SERVICE'\r\n        },\r\n    ];\r\n\r\n    agencyDefinedGroup: string;\r\n\r\n    today = new Date();\r\n\r\n    defaultStartTime: Date = new Date(this.today.getFullYear(), this.today.getMonth(), this.today.getDate(), 8, 0, 0);\r\n    defaultEndTime: Date = new Date(this.today.getFullYear(), this.today.getMonth(), this.today.getDate(), 9, 0, 0);\r\n\r\n    payTotal: CalculatedPay;\r\n    selected: any = null;\r\n\r\n    selectAll: boolean = false;\r\n    overlapVisible: boolean = false;\r\n    addTimesheetVisible: boolean = false;\r\n    multipleRecipientShow: boolean = false;\r\n    isTravelTimeChargeable: boolean = false;\r\n    isSleepOver: boolean = false;\r\n    payUnits: any;\r\n\r\n    rosterGroup: string;\r\n    Object = Object;\r\n    mapOfExpandedData: { [key: string]: TreeNodeInterface[] } = {};\r\n\r\n    collapse(array: TreeNodeInterface[], data: TreeNodeInterface, $event: boolean): void {\r\n        console.log(data)\r\n        if ($event === false) {\r\n            if (data.children) {\r\n                data.children.forEach(d => {\r\n                    const target = array.find(a => a.key === d.key)!;\r\n                    target.expand = false;\r\n                    this.collapse(array, target, false);\r\n                });\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    convertTreeToList(root: TreeNodeInterface): TreeNodeInterface[] {\r\n        const stack: TreeNodeInterface[] = [];\r\n        const array: TreeNodeInterface[] = [];\r\n        const hashMap = {};\r\n\r\n        stack.push({ ...root, level: 0, expand: true });\r\n        // console.log(stack);\r\n        while (stack.length !== 0) {\r\n            const node = stack.pop()!;\r\n            this.visitNode(node, hashMap, array);\r\n            if (node.children) {\r\n                for (let i = node.children.length - 1; i >= 0; i--) {\r\n                    stack.push({ ...node.children[i], level: node.level! + 1, expand: true, parent: node });\r\n                }\r\n            }\r\n        }\r\n        // console.log(array);\r\n        return array;\r\n    }\r\n\r\n    visitNode(node: TreeNodeInterface, hashMap: { [key: string]: boolean }, array: TreeNodeInterface[]): void {\r\n        if (!hashMap[node.key]) {\r\n            hashMap[node.key] = true;\r\n            array.push(node);\r\n        }\r\n    }\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private globalS: GlobalService,\r\n        private modalService: NzModalService,\r\n        private cd: ChangeDetectorRef,\r\n        private formBuilder: FormBuilder,\r\n        private staffS:StaffService,\r\n        private clientS: ClientService,\r\n        private listS: ListService\r\n    ) {\r\n        cd.detach();\r\n\r\n        this.currentDate = format(new Date(), 'MM-dd-yyyy');\r\n    }\r\n\r\n    ngOnInit(): void{\r\n        this.buildForm();        \r\n    }\r\n\r\n    buildForm() {\r\n        this.timesheetForm = this.formBuilder.group({\r\n            date: [this.payPeriodEndDate, Validators.required],\r\n            serviceType: ['', Validators.required],\r\n            program: ['', Validators.required],\r\n            serviceActivity: ['', Validators.required],\r\n            payType: ['', Validators.required],\r\n            analysisCode: [''],\r\n            recipientCode:  [''],\r\n            haccType: '',\r\n            staffCode:  [''],\r\n            debtor:  [''],\r\n            isMultipleRecipient: false,\r\n            isTravelTimeChargeable: false,\r\n            sleepOverTime: '',\r\n            time: this.formBuilder.group({\r\n                startTime:  [''],\r\n                endTime:  [''],\r\n            }),\r\n            pay: this.formBuilder.group({\r\n                unit:  ['HOUR'],\r\n                rate:  ['0'],\r\n                quantity:  ['1'],\r\n                position: ''\r\n            }),\r\n            bill: this.formBuilder.group({\r\n                unit: ['HOUR'],\r\n                rate: ['0'],\r\n                quantity: ['1'],\r\n                tax: '1'\r\n            }),\r\n        })\r\n\r\n        this.durationObject = this.globalS.computeTimeDATE_FNS(this.defaultStartTime, this.defaultEndTime);\r\n        this.fixStartTimeDefault();\r\n\r\n        this.timesheetForm.get('time.startTime').valueChanges.pipe(\r\n            takeUntil(this.unsubscribe)\r\n        ).subscribe(d => {\r\n            this.durationObject = this.globalS.computeTimeDATE_FNS(this.defaultStartTime, this.defaultEndTime);\r\n        });\r\n\r\n        // this.timesheetForm.get('isMultipleRecipient').valueChanges.subscribe(data => {\r\n        //     if(data){\r\n        //         this.timesheetForm.patchValue({\r\n        //             recipientCode: '!MULTIPLE'\r\n        //         })\r\n        //     }\r\n        // });\r\n\r\n        this.timesheetForm.get('payType').valueChanges.pipe(\r\n            takeUntil(this.unsubscribe),\r\n            switchMap(d => {\r\n                if(!d) return EMPTY;\r\n                return this.timeS.getpayunits(d);\r\n            })\r\n        ).subscribe(d => {\r\n            this.timesheetForm.patchValue({\r\n                pay: {\r\n                    unit: d.unit,\r\n                    rate: d.amount,\r\n                    quantity: (this.durationObject.duration) ? \r\n                        (((this.durationObject.duration * 5) / 60)).toFixed(2) : 0\r\n                }\r\n            });\r\n        });\r\n\r\n        this.timesheetForm.get('time.endTime').valueChanges.pipe(\r\n            takeUntil(this.unsubscribe)\r\n        ).subscribe(d => {\r\n            this.durationObject = this.globalS.computeTimeDATE_FNS(this.defaultStartTime, this.defaultEndTime);\r\n        });\r\n\r\n\r\n        this.timesheetForm.get('recipientCode').valueChanges.pipe(\r\n            takeUntil(this.unsubscribe),\r\n            switchMap(x => {\r\n                this.timesheetForm.patchValue({\r\n                    debtor: x\r\n                });\r\n                return this.GETPROGRAMS(x)\r\n            })\r\n        ).subscribe((d: Array<any>) => {\r\n            this.programsList = d;\r\n\r\n            if(d && d.length == 1){\r\n                this.timesheetForm.patchValue({\r\n                    program: d[0].ProgName\r\n                });\r\n            }\r\n            \r\n        });\r\n\r\n        this.timesheetForm.get('debtor').valueChanges.pipe(\r\n            takeUntil(this.unsubscribe),\r\n            switchMap(x => {\r\n                if(this.selected.option == 0) return EMPTY;\r\n                \r\n                return this.GETPROGRAMS(x)\r\n            })\r\n        ).subscribe(d => {\r\n            this.programsList = d;\r\n        });\r\n\r\n        this.timesheetForm.get('serviceType').valueChanges.pipe(\r\n            takeUntil(this.unsubscribe),\r\n            switchMap(x => {\r\n                this.clearLowerLevelInputs();\r\n\r\n                this.multipleRecipientShow = this.isServiceTypeMultipleRecipient(x);\r\n                this.isTravelTimeChargeable = this.isTravelTimeChargeableProcess(x);\r\n                this.isSleepOver = this.isSleepOverProcess(x);\r\n\r\n                if (!x) return EMPTY;\r\n                return forkJoin(\r\n                    this.GETANALYSISCODE(),\r\n                    this.GETPAYTYPE(x),\r\n                    this.GETPROGRAMS(x)\r\n                )\r\n            })\r\n        ).subscribe(d => {\r\n            this.analysisCodeList = d[0];\r\n            this.payTypeList = d[1];\r\n            this.programsList = d[2];\r\n\r\n            if(this.viewType == 'Recipient'){\r\n                this.timesheetForm.patchValue({\r\n                    analysisCode: this.agencyDefinedGroup\r\n                });\r\n            }\r\n        });\r\n\r\n        this.timesheetForm.get('program').valueChanges.pipe(\r\n            distinctUntilChanged(),\r\n            switchMap(x => {\r\n                this.serviceActivityList = [];\r\n                this.timesheetForm.patchValue({\r\n                    serviceActivity: null\r\n                });\r\n                return this.GETSERVICEACTIVITY(x)\r\n            })\r\n        ).subscribe((d: Array<any>) => {\r\n\r\n            this.serviceActivityList = d;\r\n\r\n            if(d && d.length == 1){\r\n                this.timesheetForm.patchValue({\r\n                    serviceActivity: d[0].activity\r\n                });\r\n            }\r\n        });\r\n\r\n        this.timesheetForm.get('serviceActivity').valueChanges.pipe(\r\n            distinctUntilChanged(),\r\n            switchMap(x => {\r\n                if (!x) {\r\n                    this.rosterGroup = '';\r\n                    return EMPTY;\r\n                };\r\n                return this.GETROSTERGROUP(x)\r\n            })\r\n        ).subscribe(d => {\r\n            if (d.length > 1) return false;\r\n            this.rosterGroup = (d[0].RosterGroup).toUpperCase();\r\n            this.GET_ACTIVITY_VALUE((this.rosterGroup).trim());\r\n\r\n            this.timesheetForm.patchValue({\r\n                haccType: this.rosterGroup\r\n            })\r\n        });        \r\n    }\r\n\r\n    GET_ACTIVITY_VALUE(roster: string) {\r\n        // ADMINISTRATION\r\n        // ADMISSION\r\n        // ALLOWANCE\r\n        // CENTREBASED\r\n        // GROUPACTIVITY\r\n        // ITEM\r\n        // ONEONONE\r\n        // RECPTABSENCE\r\n        // SALARY\r\n        // SLEEPOVER\r\n        // TRANSPORT\r\n        // TRAVELTIME\r\n\r\n        this.activity_value = 0;\r\n\r\n        if (roster === 'ADMINISTRATION') {\r\n            this.activity_value = 6;\r\n        }\r\n\r\n        if (roster === 'ADMISSION') {\r\n            this.activity_value = 7;\r\n        }\r\n\r\n        if (roster === 'ALLOWANCE') {\r\n            this.activity_value = 9;\r\n        }\r\n        \r\n        if (roster === 'CENTREBASED') {\r\n            this.activity_value = 11;\r\n        }\r\n\r\n        if (roster === 'GROUPACTIVITY') {\r\n            this.activity_value = 12;\r\n        }\r\n\r\n        if (roster === 'ITEM') {\r\n            this.activity_value = 14;\r\n        }\r\n\r\n        if (roster === 'ONEONONE') {\r\n            this.activity_value = 2;\r\n        }\r\n\r\n        if (roster === 'RECPTABSENCE') {\r\n            this.activity_value = 6;\r\n        }\r\n\r\n        if (roster === 'SALARY') {\r\n            this.activity_value = 0;\r\n        }\r\n\r\n        if (roster === 'SLEEPOVER') {\r\n            this.activity_value = 8;\r\n        }\r\n\r\n        if (roster === 'TRANSPORT') {\r\n            this.activity_value = 10;\r\n        }\r\n\r\n        if (roster === 'TRAVEL TIME') {\r\n            this.activity_value = 5;\r\n        }\r\n    }\r\n\r\n    isEndSteps() {\r\n        if (this.rosterGroup === 'ALLOWANCE') {\r\n            return this.current >= 3;\r\n        }\r\n        else {\r\n            return this.current >= 3;\r\n        }\r\n    }\r\n    \r\n    clearLowerLevelInputs() {\r\n\r\n        this.timesheetForm.patchValue({\r\n            recipientCode: null,\r\n            debtor: null,\r\n            program: null,\r\n            serviceActivity: null,\r\n            analysisCode: null,\r\n            time: {\r\n                startTime: '',\r\n                endTime: '',\r\n            },\r\n            pay: {\r\n                unit: 'HOUR',\r\n                rate: '0',\r\n                quantity: '1',\r\n                position: ''\r\n            },\r\n            bill: {\r\n                unit: 'HOUR',\r\n                rate: '0',\r\n                quantity: '1',\r\n                tax: '0'\r\n            },\r\n        });\r\n    }\r\n\r\n    empty: any = [];\r\n    temp: any;\r\n    recurse(hehe: any, indexObj: any = null) {\r\n        this.temp = \"\";\r\n        for (var property in hehe) {            \r\n            if (Object.prototype.toString.call(hehe[property]) == '[object Object]') {\r\n                if (indexObj) {\r\n                    let child = indexObj.child.push({\r\n                        name: property,\r\n                        child: hehe[property]\r\n                    });\r\n                    this.recurse(hehe[property], child)\r\n                }\r\n\r\n                if (indexObj == null) {\r\n                    let child = this.empty.push({\r\n                        name: property,\r\n                        child: hehe[property]\r\n                    })\r\n                    this.recurse(hehe[property], child);\r\n                }\r\n            }\r\n            if (Object.prototype.toString.call(hehe[property]) == '[object Array]') {\r\n                return hehe[property]\r\n            }\r\n        }\r\n    }   \r\n\r\n    ngOnDestroy(): void{\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    ngAfterViewInit(): void{\r\n        this.staffS.getpayperiod().pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            this.payPeriodEndDate = parseISO(data.end_Date);\r\n            console.log(this.payPeriodEndDate)\r\n        });\r\n\r\n        this.cd.reattach();\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n\r\n    picked(data: any) {\r\n        console.log(data);\r\n        if (!data.data) {\r\n            this.timesheets = [];\r\n            this.selected = null;\r\n            return;\r\n        }\r\n\r\n        this.selected = data;\r\n\r\n        this.viewType = this.whatType(data.option);\r\n        this.loading = true;\r\n\r\n        if (this.picked$) {\r\n            this.picked$.unsubscribe();\r\n        }\r\n\r\n        if(this.viewType == 'Recipient'){\r\n            this.clientS.getagencydefinedgroup(this.selected.data)\r\n                .subscribe(data => {\r\n                    this.agencyDefinedGroup = data.data;\r\n                });\r\n        }\r\n\r\n        this.picked$ = this.timeS.gettimesheets({\r\n            AccountNo: data.data,\r\n            personType: this.viewType\r\n        }).pipe(takeUntil(this.unsubscribe))\r\n            .subscribe(data => {\r\n\r\n                this.loading = false;\r\n\r\n                this.timesheets = data.map(x => {\r\n                    return {\r\n                        shiftbookNo: x.shiftbookNo,\r\n                        date: x.activityDate,\r\n                        startTime: this.fixDateTime(x.activityDate, x.activity_Time.start_time),\r\n                        endTime: this.fixDateTime(x.activityDate, x.activity_Time.end_Time),\r\n                        duration: x.activity_Time.calculated_Duration,\r\n                        durationNumber: x.activity_Time.duration,\r\n                        recipient: x.recipientLocation,\r\n                        program: x.program.title,\r\n                        activity: x.activity.name,\r\n                        paytype: x.payType.paytype,\r\n                        payquant: x.pay.quantity,\r\n                        payrate: x.pay.pay_Rate,\r\n                        billquant: x.bill.quantity,\r\n                        billrate: x.bill.bill_Rate,\r\n                        approved: x.approved,\r\n                        billto: x.billedTo.accountNo,\r\n                        notes: x.note,\r\n                        selected: false,\r\n\r\n                        serviceType: x.roster_Type,\r\n                        recipientCode: x.recipient_staff.accountNo,\r\n                        debtor: x.billedTo.accountNo,\r\n                        serviceActivity: x.activity.name,\r\n                        serviceSetting: x.recipientLocation,\r\n                        analysisCode: x.anal\r\n\r\n                    }\r\n                });\r\n                \r\n                // this.timesheetsGroup = this.nest(this.timesheets, ['activity']);\r\n                // // console.log(JSON.stringify(this.timesheetsGroup));\r\n                    \r\n                // this.index = 0;\r\n                \r\n                // //this.resultMapData = this.recurseObjOuterLoop(this.timesheetsGroup);\r\n                // this.resultMapData = this.listOfMapData\r\n                // console.log(this.resultMapData)\r\n                \r\n                // this.resultMapData.forEach(item => {\r\n                //     this.mapOfExpandedData[item.key] = this.convertTreeToList(item);\r\n                //     console.log(this.convertTreeToList(item));\r\n                // });\r\n                \r\n                // console.log(this.mapOfExpandedData)\r\n            });\r\n        \r\n        this.getComputedPay(data).subscribe(x => this.computeHoursAndPay(x));\r\n        \r\n        this.selectAll = false;\r\n    }\r\n\r\n    getComputedPay(data: any = this.selected): Observable<any>{\r\n        return this.timeS.getcomputetimesheet({\r\n            AccountName: data.data,\r\n            IsCarerCode: this.viewType == 'Staff' ? true : false\r\n        });\r\n    }\r\n\r\n    computeHoursAndPay(compute: any): void{\r\n        var hourMinStr;\r\n\r\n        if (compute.workedHours && compute.workedHours > 0) {\r\n            const hours = Math.floor(compute.workedHours * 60 / 60);\r\n            const minutes = ('0' + compute.workedHours * 60 % 60).slice(-2);\r\n\r\n            hourMinStr = `${hours}:${minutes}`\r\n        }\r\n\r\n        var _temp = {\r\n            KMAllowancesQty: compute.kmAllowancesQty || 0,\r\n            AllowanceQty: compute.allowanceQty || 0,\r\n            WorkedHours: compute.workedHours || 0,\r\n            PaidAsHours: compute.paidAsHours || 0,\r\n            PaidAsServices: compute.paidAsServices || 0,\r\n            WorkedAttributableHours: compute.workedAttributableHours || 0,\r\n            PaidQty: compute.paidQty || 0,\r\n            PaidAmount: compute.paidAmount || 0,\r\n            ProvidedHours: compute.providedHours || 0,\r\n            BilledAsHours: compute.billedAsHours || 0,\r\n            BilledAsServices: compute.billedAsServices || 0,\r\n            BilledQty: compute.billedQty || 0,\r\n            BilledAmount: compute.billedAmount || 0,\r\n            HoursAndMinutes: hourMinStr\r\n        };\r\n\r\n        this.payTotal = _temp;\r\n    }\r\n\r\n    fixDateTime(date: string, timedate: string) {\r\n        var currentDate = parseISO(date);\r\n        var currentTime = parseISO(timedate);\r\n\r\n        var newDate = format(\r\n            new Date(\r\n                currentDate.getFullYear(),\r\n                currentDate.getMonth(),\r\n                currentDate.getDate(),\r\n                currentTime.getHours(),\r\n                currentTime.getMinutes(),\r\n                currentTime.getSeconds()\r\n            ), \"yyyy-MM-dd'T'hh:mm:ss\");\r\n        \r\n        return newDate;\r\n    }\r\n\r\n    recurseSubDirectories(data: any) {\r\n        var arr: Array<TreeNodeInterface> = [];        \r\n        this.index++;\r\n\r\n        if (Object.prototype.toString.call(data) === '[object Array]') {\r\n            arr.push({\r\n                key: this.index,\r\n                name: Object.keys(data)[0],\r\n                children: data\r\n            });\r\n        }\r\n\r\n        if (Object.prototype.toString.call(data) === '[object Object]') {\r\n            for (var key in data) {\r\n                arr.push({\r\n                    key: this.index,\r\n                    name: key,\r\n                    children: this.recurseSubDirectories(data[key])\r\n                });\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    recurseObjOuterLoop(data: any) {\r\n        var out = [];        \r\n        for (var key in data) {\r\n            if (Object.prototype.toString.call(data[key]) === '[object Object]') {\r\n                out.push({ key: this.index, name: key, children: { ...(this.recurseSubDirectories(data[key])) } });\r\n                this.recurseObjOuterLoop(data[key]);\r\n            }\r\n\r\n            if (Object.prototype.toString.call(data[key]) === '[object Array]') {\r\n                out.push({ key: this.index++, name: key, children: { ...data[key] } });\r\n            }\r\n        }\r\n        return out;\r\n    }\r\n\r\n    nest = (seq: any[], keys: Array<string | ((obj: any) => string)>) => {\r\n        if (!keys.length) {\r\n            return seq;\r\n        }\r\n        const [first, ...rest] = keys;\r\n        return _.mapValues(_.groupBy(seq, first), (value) => this.nest(value, rest));\r\n    };\r\n\r\n    clickme(){\r\n        console.log('hehe')\r\n    }\r\n\r\n    confirm(index: number) {\r\n        if (!this.selected && this.timesheets.length > 0) return;\r\n\r\n        if (index == 1) {\r\n            this.addTimesheetVisible = true;\r\n            this.resetAddTimesheetModal();\r\n        }\r\n\r\n        if (index == 2) {\r\n            this.modalService.confirm({\r\n                nzTitle: '<b>Do you want to delete highlighted shifts?</b>',\r\n                nzContent: '<b></b>',\r\n                nzOnOk: () => this.process(index)\r\n            });\r\n        }\r\n\r\n        if (index == 3) {\r\n            this.modalService.confirm({\r\n                nzTitle: '<b>Do you want to delete all unapproved items?</b>',\r\n                nzContent: '<b></b>',\r\n                nzOnOk: () => this.process(index)\r\n            });\r\n        }\r\n\r\n        if (index == 4) {\r\n            this.overlapVisible = true;\r\n            //this.OVERLAP_PROCESS(this.timesheets);           \r\n\r\n            // this.modalService.confirm({\r\n            //     nzTitle: '<b>Automatic Overlap Removal</b>',\r\n            //     nzContent: `\r\n            //         <div>This action will force any overlapping shifts to a later start time to remove the overlap. All entries must be either approved or unapproved. You cannot use this function if some entries are approved and others are not.</div>\r\n            //         <div>If you want to force a timegap between overlapping shifts - select 5 minutes from the drop down or if a gap is not needed accept the default of 0</div>\r\n            //         <butto (click)=\"clickme()\">Click</butto>\r\n            //     `,\r\n            //     nzOnOk: () => this.process(index)\r\n            // });\r\n        }\r\n\r\n        if (index == 5) {\r\n            this.modalService.confirm({\r\n                nzTitle: '<b>Do you want to approve all items?</b>',\r\n                nzContent: '<b></b>',\r\n                nzOnOk: () => this.process(index)\r\n            });\r\n        }\r\n\r\n        if (index == 6) {\r\n            this.modalService.confirm({\r\n                nzTitle: '<b>Do you want to unapprove all items?</b>',\r\n                nzContent: '<b></b>',\r\n                nzOnOk: () => this.process(index)\r\n            });\r\n        }\r\n    }\r\n\r\n    handleCancel() {\r\n        this.overlapVisible = false;\r\n        this.overlapValue = null;\r\n        this.addTimesheetVisible = false;\r\n    }\r\n\r\n    removeOverlap() {\r\n        this.OVERLAP_PROCESS(this.timesheets, this.overlapValue);\r\n    }\r\n\r\n    selectAllChange(event: any) {\r\n        this.cd.detach();\r\n        this.timesheets.forEach(x => x.selected = event);\r\n        this.cd.reattach();\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n\r\n    selectedTimesheet(event: any, data: any) {\r\n        console.log(event);\r\n        data.selected = event;\r\n        // this.timesheets = [...this.timesheets, data]\r\n        // this.timesheets = this.timesheets.filter(x => x.shiftbookNo == data.shiftbookNo);\r\n\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    ifRosterGroupHasTimePayBills(rosterGroup: string) {\r\n        return (\r\n            rosterGroup === 'ADMINISTRATION' ||\r\n            rosterGroup === 'ADMISSION' ||\r\n            rosterGroup === 'CENTREBASED' ||\r\n            rosterGroup === 'GROUPACTIVITY' ||\r\n            rosterGroup === 'ITEM' ||\r\n            rosterGroup === 'ONEONONE' ||\r\n            rosterGroup === 'SLEEPOVER' ||\r\n            rosterGroup === 'TRANSPORT' ||\r\n            rosterGroup === 'TRAVELTIME'\r\n        );\r\n    }\r\n\r\n    OVERLAP_PROCESS(rosters: Array<any>, overlapCounter: number) {\r\n\r\n        let _unique = null;\r\n        let endTime: Date;\r\n\r\n        var cloneRosters = _.cloneDeep(rosters);\r\n\r\n        cloneRosters.forEach(roster => {\r\n            if (roster && roster.date != _unique) {\r\n                _unique = roster.date;\r\n                endTime = parseISO(roster.endTime);\r\n            } else {\r\n                if (overlapCounter == 0) {\r\n                    roster.startTime = format(endTime, \"yyyy-MM-dd'T'hh:mm:ss\");\r\n                    roster.endTime = format(addMinutes(parseISO(roster.startTime), roster.durationNumber * 5), \"yyyy-MM-dd'T'hh:mm:ss\");\r\n                    endTime = parseISO(roster.endTime);\r\n                }\r\n                \r\n                if (overlapCounter == 5){\r\n                    roster.startTime = format(addMinutes(endTime, 5), \"yyyy-MM-dd'T'hh:mm:ss\");\r\n                    roster.endTime = format(addMinutes(parseISO(roster.startTime), roster.durationNumber * 5), \"yyyy-MM-dd'T'hh:mm:ss\");\r\n                    endTime = parseISO(roster.endTime);\r\n                }\r\n            }\r\n        });\r\n\r\n        var inputs = cloneRosters.map(x => {\r\n            return {\r\n                RecordNo: x.shiftbookNo,\r\n                startTime: format(parseISO(x.startTime), \"hh:mm\")\r\n            }\r\n        })\r\n\r\n        var ss = {\r\n            OverLaps: inputs\r\n        }\r\n\r\n        this.timeS.updatetimeoverlap(ss).subscribe(data => {\r\n            this.globalS.sToast('Success', 'Time Overlap Processed');\r\n            this.picked(this.selected);\r\n            this.handleCancel();\r\n        });\r\n    }\r\n\r\n    checkBoxChange(event: any, timesheet: any){\r\n   \r\n        const tdate = parseISO(timesheet.date);\r\n\r\n        this.timeS.getclosedate(timesheet.program)\r\n            .pipe(\r\n                switchMap(x => {\r\n                    if(x.closeDate == null){\r\n                        return this.timeS.selectedApprove({\r\n                            AccountNo: timesheet.shiftbookNo,\r\n                            PersonType: this.GET_VIEW(),\r\n                            Status: event\r\n                        });\r\n                    }\r\n                    \r\n                    const closeDate = parseISO(x.closeDate);\r\n\r\n                    if(closeDate.toString() !== 'Invalid Date' && tdate.toString() !== 'Invalid Date' && (isSameDay(tdate, closeDate) || tdate > closeDate)){                    \r\n                        return this.timeS.selectedApprove({\r\n                            AccountNo: timesheet.shiftbookNo,\r\n                            PersonType: this.GET_VIEW(),\r\n                            Status: event\r\n                        });                        \r\n                    } else {\r\n                        timesheet.approved = !event;\r\n                        this.globalS.eToast('Error', `You cannot approve/unapprove entries for this program on that date - as the program is closed for action prior to ${ format(closeDate,'dd/MM/yyyy') }`)\r\n                        return EMPTY;\r\n                    }                    \r\n                }),\r\n                switchMap( x => this.getComputedPay())\r\n            ).subscribe(data => {\r\n                this.computeHoursAndPay(data);\r\n            });           \r\n    }\r\n\r\n    GETBILLINGRATE(){\r\n        \r\n    }\r\n\r\n    GET_VIEW(): string {\r\n        return this.selected.option == 1 ? 'Recipient' : 'Staff'\r\n    }\r\n\r\n    process(index: number) {\r\n        if (!this.selected && this.timesheets.length > 0) return;\r\n\r\n        if (index == 2) {\r\n            const shiftArray = this.timesheets.filter(x => x.selected).map(x => x.shiftbookNo)\r\n\r\n            if(shiftArray.length == 0){\r\n                this.globalS.wToast('No Highlighted Item','Warning');\r\n                return;\r\n            }\r\n            \r\n            this.timeS.deleteshift(shiftArray)\r\n                .subscribe(data => {\r\n                    this.globalS.sToast('Success','Selected items are deleted');\r\n                    this.picked(this.selected);                \r\n                });\r\n        }\r\n\r\n        if (index == 3) {\r\n            \r\n            // const shiftArray = this.timesheets.filter(x => x.app).map(x => x.shiftbookNo)\r\n\r\n            let input = {\r\n                AccountNo: this.selected.data,\r\n                PersonType: this.GET_VIEW(),\r\n                Status: 1\r\n            }\r\n\r\n            console.log(input);\r\n            this.timeS.deleteunapprovedall(input).subscribe(data => {\r\n                this.globalS.sToast('Success', data.message);\r\n                this.picked(this.selected);              \r\n            });\r\n        }\r\n\r\n        if (index == 5) {\r\n            this.timeS.approveAll({\r\n                accountNo: this.selected.data,\r\n                PersonType: this.GET_VIEW()\r\n            }).subscribe(data => {\r\n                this.globalS.sToast('Success', 'All items are approved');\r\n                this.picked(this.selected);                \r\n            });\r\n        }\r\n\r\n        if (index == 6) {\r\n            this.timeS.unapproveAll({\r\n                accountNo: this.selected.data,\r\n                PersonType: this.GET_VIEW()\r\n            }).subscribe(data => {\r\n                this.globalS.sToast('Success', 'All items are unapproved');\r\n                this.picked(this.selected);\r\n            });\r\n        }\r\n    }\r\n\r\n    isServiceTypeMultipleRecipient(type: string): boolean {\r\n        return type === 'SERVICE';\r\n    }\r\n\r\n    isTravelTimeChargeableProcess(type: string): boolean {\r\n        return type === 'TRAVEL TIME';\r\n    }\r\n\r\n    isSleepOverProcess(type: string): boolean {\r\n        return type == 'SLEEPOVER';\r\n    }\r\n\r\n\r\n    whatType(data: number): string {\r\n        return data == 0 ? 'Staff' : 'Recipient';\r\n    }    \r\n    duration: any;\r\n\r\n    ngModelChangeStart(event): void{\r\n        this.timesheetForm.patchValue({\r\n            time: {\r\n                startTime: event\r\n            }\r\n        })\r\n    }\r\n\r\n    ngModelChangeEnd(event): void {\r\n        this.timesheetForm.patchValue({\r\n            time: {\r\n                endTime: event\r\n            }\r\n        })\r\n    }\r\n\r\n    GETPROGRAMS(type: string): Observable<any> {\r\n        let sql;\r\n        if (!type) return EMPTY;\r\n        const { isMultipleRecipient } = this.timesheetForm.value;\r\n        if (type === 'ADMINISTRATION' || type === 'ALLOWANCE NON-CHARGEABLE' || type === 'ITEM' || (type == 'SERVICE' && !isMultipleRecipient)) {\r\n            sql = `SELECT Distinct [Name] AS ProgName FROM HumanResourceTypes WHERE [group] = 'PROGRAMS' AND ISNULL(UserYesNo3,0) = 0 AND (EndDate Is Null OR EndDate >=  '${this.currentDate}') ORDER BY [ProgName]`;\r\n        } else {\r\n            sql = `SELECT Distinct [Program] AS ProgName FROM RecipientPrograms \r\n                INNER JOIN Recipients ON RecipientPrograms.PersonID = Recipients.UniqueID \r\n                WHERE Recipients.AccountNo = '${type}' AND RecipientPrograms.ProgramStatus IN ('ACTIVE', 'WAITING LIST') ORDER BY [ProgName]`\r\n        }\r\n        if (!sql) return EMPTY;\r\n        return this.listS.getlist(sql);\r\n    }\r\n\r\n    GETSERVICEACTIVITY(program: any): Observable<any> {\r\n\r\n        const { serviceType } = this.timesheetForm.value;\r\n        if (!program) return EMPTY;\r\n\r\n        if (serviceType != 'ADMINISTRATION' && serviceType != 'ALLOWANCE NON-CHARGEABLE' && serviceType != 'ITEM'  || serviceType != 'SERVICE') {\r\n            const { recipientCode, debtor } = this.timesheetForm.value;\r\n\r\n            return this.listS.getserviceactivityall({\r\n                program,\r\n                recipient: this.selected.option == 0 ? recipientCode : debtor,\r\n                viewType: this.viewType\r\n            });\r\n        }\r\n        else {\r\n            let sql = `SELECT DISTINCT [service type] AS activity FROM serviceoverview SO INNER JOIN humanresourcetypes HRT ON CONVERT(NVARCHAR, HRT.recordnumber) = SO.personid \r\n                WHERE SO.serviceprogram = '${ program}' AND EXISTS (SELECT title FROM itemtypes ITM WHERE title = SO.[service type] AND ITM.[rostergroup] = 'ADMINISTRATION' AND processclassification = 'OUTPUT' AND ( ITM.enddate IS NULL OR ITM.enddate >= '${this.currentDate}' )) ORDER BY [service type]`;\r\n            \r\n            // let sql = `SELECT DISTINCT [Service Type] AS activity FROM ServiceOverview SO INNER JOIN HumanResourceTypes HRT ON CONVERT(nVarchar, HRT.RecordNumber) = SO.PersonID\r\n            //     WHERE SO.ServiceProgram = '${ program}' AND EXISTS (SELECT Title FROM ItemTypes ITM WHERE Title = SO.[Service Type] AND \r\n            //     ProcessClassification = 'OUTPUT' AND (ITM.EndDate Is Null OR ITM.EndDate >= '${this.currentDate}')) ORDER BY [Service Type]`;\r\n            return this.listS.getlist(sql);\r\n        }\r\n    }\r\n\r\n    GETANALYSISCODE(): Observable<any>{\r\n        return this.listS.getserviceregion();\r\n    }\r\n\r\n    GETROSTERGROUP(activity: string): Observable<any>{\r\n        if (!activity) return EMPTY;\r\n        return this.listS.getlist(`SELECT RosterGroup, Title FROM ItemTypes WHERE Title= '${activity}'`);\r\n    }\r\n\r\n    GETPAYTYPE(type: string): Observable<any> {\r\n        // `SELECT TOP 1 RosterGroup, Title FROM  ItemTypes WHERE Title = '${type}'`\r\n        let sql;\r\n        if (!type) return EMPTY;\r\n        if (type === 'ALLOWANCE CHARGEABLE' || type === 'ALLOWANCE NON-CHARGEABLE') {\r\n            sql = `SELECT Recnum, Title FROM ItemTypes WHERE RosterGroup = 'ALLOWANCE ' \r\n                AND Status = 'NONATTRIBUTABLE' AND ProcessClassification = 'INPUT' AND (EndDate Is Null OR EndDate >= '${this.currentDate}') ORDER BY TITLE`\r\n        } else {\r\n            sql = `SELECT Recnum, LTRIM(RIGHT(Title, LEN(Title) - 0)) AS Title\r\n            FROM ItemTypes WHERE RosterGroup = 'SALARY'   AND Status = 'NONATTRIBUTABLE'   AND ProcessClassification = 'INPUT' AND Title BETWEEN '' \r\n            AND 'zzzzzzzzzz'AND (EndDate Is Null OR EndDate >= '${ this.currentDate }') ORDER BY TITLE`\r\n        }\r\n        return this.listS.getlist(sql);\r\n    }\r\n\r\n\r\n    // Add Timesheet\r\n\r\n    current = 0;\r\n    nextDisabled: boolean = false;\r\n    programsList: Array<any> = [];\r\n    serviceActivityList: Array<any> = [];\r\n    payTypeList: Array<any> = [];\r\n    analysisCodeList: Array<any> = []\r\n    \r\n    showRecipient(): boolean  {\r\n        const { serviceType, isMultipleRecipient } = this.timesheetForm.value;            \r\n        return ((serviceType !== 'ADMINISTRATION' && serviceType !== 'ALLOWANCE NON-CHARGEABLE' && serviceType !== 'ITEM') && !isMultipleRecipient);\r\n    }\r\n\r\n    canProceed() {\r\n        const { date, serviceType } = this.timesheetForm.value;\r\n\r\n        if (this.current == 0) {\r\n            if (!date || !serviceType) {\r\n                this.nextDisabled = true;\r\n            } else {\r\n                this.nextDisabled = false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        if (this.current == 1) {\r\n            return true;\r\n        }\r\n\r\n        if (this.current == 2) {\r\n            return true;\r\n        }\r\n\r\n        if (this.current == 3) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    resetAddTimesheetModal() {\r\n        this.current = 0;\r\n        this.rosterGroup = '';\r\n\r\n        this.timesheetForm.reset({\r\n            date: this.payPeriodEndDate,\r\n            serviceType: '',\r\n            program: '',\r\n            serviceActivity: '',\r\n            payType: '',\r\n            analysisCode: '',\r\n            recipientCode: '',\r\n            debtor: '',\r\n            isMultipleRecipient: false,\r\n            isTravelTimeChargeable: false,\r\n            sleepOverTime: '',\r\n            time: this.formBuilder.group({\r\n                startTime: '',\r\n                endTime: '',\r\n            }),\r\n            pay: this.formBuilder.group({\r\n                unit: 'HOUR',\r\n                rate: '0',\r\n                quantity: '1',\r\n                position: ''\r\n            }),\r\n            bill: this.formBuilder.group({\r\n                unit: 'HOUR',\r\n                rate: 0,\r\n                quantity: '1',\r\n                tax: '1'\r\n            }),\r\n        });\r\n        \r\n        this.defaultStartTime = new Date(this.today.getFullYear(), this.today.getMonth(), this.today.getDate(), 8, 0, 0);\r\n        this.defaultEndTime = new Date(this.today.getFullYear(), this.today.getMonth(), this.today.getDate(), 9, 0, 0);        \r\n    }\r\n\r\n    pre(): void {\r\n        this.current -= 1;\r\n    }\r\n\r\n    next(): void {\r\n        this.current += 1;\r\n\r\n        if(this.current == 1 && this.selected.option == 1){\r\n            this.timesheetForm.patchValue({\r\n                debtor: this.selected.data\r\n            });\r\n        }\r\n\r\n        if(this.current == 4){\r\n            const { recipientCode, program, serviceActivity } = this.timesheetForm.value;\r\n\r\n            if(!this.globalS.isEmpty(recipientCode) &&\r\n                    !this.globalS.isEmpty(serviceActivity) &&\r\n                        !this.globalS.isEmpty(program)){\r\n                this.timeS.getbillingrate({\r\n                    RecipientCode: recipientCode,\r\n                    ActivityCode: serviceActivity,\r\n                    Program: program\r\n                }).subscribe(data => {\r\n                    this.timesheetForm.patchValue({\r\n                        bill: {\r\n                            unit: data.unit,\r\n                            rate: this.DEFAULT_NUMERIC(data.rate),\r\n                            tax: this.DEFAULT_NUMERIC(data.tax)\r\n                        }\r\n                    });\r\n                });\r\n            }            \r\n        }\r\n    }\r\n\r\n    DEFAULT_NUMERIC(data: any): number{\r\n        if(!this.globalS.isEmpty(data) && !isNaN(data)){\r\n            return data;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    get nextCondition() {\r\n        if (this.current == 2 && !this.ifRosterGroupHasTimePayBills(this.rosterGroup)) {\r\n            return false; \r\n        }\r\n        return this.current < 4;\r\n    }\r\n\r\n    get isFormValid(){\r\n        return  this.timesheetForm.valid;\r\n    }\r\n\r\n    done(): void {\r\n        this.fixStartTimeDefault();\r\n        \r\n        const tsheet = this.timesheetForm.value;\r\n        let clientCode = this.FIX_CLIENTCODE_INPUT(tsheet);\r\n\r\n        var durationObject = (this.globalS.computeTimeDATE_FNS(tsheet.time.startTime, tsheet.time.endTime));\r\n        console.log(this.selected.option)\r\n        let inputs = {\r\n            anal: tsheet.analysisCode || \"\",\r\n            billQty: tsheet.bill.quantity || 0,\r\n            billTo: clientCode,\r\n            billUnit: tsheet.bill.unit || 0,\r\n            blockNo: durationObject.blockNo,\r\n            carerCode: this.selected.option == 0 ? this.selected.data : tsheet.staffCode,\r\n            clientCode: this.selected.option == 0 ? clientCode : this.selected.data,\r\n            costQty: tsheet.pay.quantity || 0,\r\n            costUnit: tsheet.pay.unit || 0,\r\n            date: format(tsheet.date,'yyyy/MM/dd'),\r\n            dayno: format(tsheet.date, 'd'),\r\n            duration: durationObject.duration,\r\n            groupActivity: false,\r\n            haccType: tsheet.haccType || \"\",\r\n            monthNo: format(tsheet.date, 'M'),\r\n            program: tsheet.program,\r\n            serviceDescription: tsheet.payType || \"\",\r\n            serviceSetting: null || \"\",\r\n            serviceType: tsheet.serviceActivity || \"\",\r\n            staffPosition: null || \"\",\r\n            startTime: format(tsheet.time.startTime,'HH:mm'),\r\n            status: \"1\",\r\n            taxPercent: tsheet.bill.tax || 0,\r\n            transferred: 0,\r\n            type: this.activity_value,\r\n            unitBillRate: tsheet.bill.rate || 0,\r\n            unitPayRate: tsheet.pay.rate || 0,\r\n            yearNo: format(tsheet.date, 'yyyy')\r\n        };\r\n\r\n        if(!this.timesheetForm.valid){\r\n            this.globalS.eToast('Error', 'All fields are required');\r\n            return;\r\n        }\r\n\r\n        console.log(inputs);\r\n\r\n        this.timeS.posttimesheet(inputs).subscribe(data => {\r\n            this.globalS.sToast('Success', 'Timesheet has been added');\r\n            this.addTimesheetVisible = false;\r\n        });\r\n    }\r\n\r\n    FIX_CLIENTCODE_INPUT(tgroup: any): string{\r\n        if (tgroup.serviceType == 'ADMINISTRATION' || tgroup.serviceType == 'ALLOWANCE NON-CHARGEABLE' || tgroup.serviceType == 'ITEM') {\r\n            return \"!INTERNAL\"\r\n        }\r\n\r\n        if (tgroup.serviceType == 'SERVICE' || tgroup.serviceType == 'TRAVEL TIME') {\r\n            if (tgroup.isMultipleRecipient) {\r\n                return \"!MULTIPLE\"\r\n            }\r\n            return tgroup.recipientCode;            \r\n        }\r\n\r\n        return tgroup.recipientCode;\r\n    }\r\n\r\n    fixStartTimeDefault() {\r\n        const { time } = this.timesheetForm.value;\r\n        if (!time.startTime) {\r\n            this.ngModelChangeStart(this.defaultStartTime)\r\n        }\r\n\r\n        if (!time.endTime) {\r\n            this.ngModelChangeEnd(this.defaultEndTime)\r\n        }\r\n    }\r\n\r\n     // Add Timesheet\r\n\r\n}\r\n","<div nz-row>\r\n    \r\n    <div nz-row>\r\n        <div nz-col nzSpan=\"8\">\r\n            <app-search-timesheet [view]=\"0\" (selected)=\"picked($event)\"></app-search-timesheet>\r\n        </div>\r\n        <div nz-col nzSpan=\"16\">\r\n            <ul *ngIf=\"selected\">\r\n                <li>\r\n                    <div (click)=\"confirm(1)\" nz-tooltip nzTooltipTitle=\"Add Timesheets\"><i nz-icon nzType=\"plus\" nzTheme=\"outline\"></i></div>\r\n                </li>\r\n                <li>\r\n                    <div (click)=\"confirm(2)\" nz-tooltip nzTooltipTitle=\"Delete Highlighted Status\"><i nz-icon nzType=\"minus\" nzTheme=\"outline\"></i></div>\r\n                </li>\r\n                <li>\r\n                    <div (click)=\"confirm(3)\" nz-tooltip nzTooltipTitle=\"Delete All Unapproved\"><i nz-icon nzType=\"delete\" nzTheme=\"outline\"></i></div>\r\n                </li>\r\n                <li>\r\n                    <div (click)=\"confirm(4)\" nz-tooltip nzTooltipTitle=\"Remove Shift Overlap\"><i nz-icon nzType=\"close-circle\" nzTheme=\"outline\"></i></div>\r\n                </li>\r\n                <li>\r\n                    <div (click)=\"confirm(5)\" nz-tooltip nzTooltipTitle=\"Approve All\"><i nz-icon nzType=\"like\" nzTheme=\"outline\"></i></div>\r\n                </li>\r\n                <li>\r\n                    <div (click)=\"confirm(6)\" nz-tooltip nzTooltipTitle=\"Unapprove All\"><i nz-icon nzType=\"dislike\" nzTheme=\"outline\"></i></div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"false\" nz-row>\r\n        <nz-table #fixedTable [nzData]=\"resultMapData\" [nzSize]=\"'small'\"  [nzScroll]=\"{ x: '2000px', y: '300px' }\">\r\n            <thead>\r\n                <tr>\r\n                    <th nzWidth=\"200px\" nzLeft=\"0px\">Shift #</th>\r\n                    <th nzWidth=\"100px\" nzLeft=\"200px\">Date</th>\r\n                    <th nzWidth=\"80px\" nzLeft=\"300px\">Start Time</th>\r\n                    <th nzWidth=\"80px\" nzLeft=\"380px\">End Time</th>\r\n                    <th nzWidth=\"80px\">Duration</th>\r\n                    <th nzWidth=\"160px\">Recipient or Location</th>\r\n                    <th nzWidth=\"160px\">Program</th>\r\n                    <th nzWidth=\"220px\">Activity</th>\r\n                    <th nzWidth=\"90px\">Pay Type</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <ng-container *ngFor=\"let data of fixedTable.data\">\r\n                    <ng-container *ngFor=\"let item of mapOfExpandedData[data.key]\">\r\n                        <tr>\r\n                            <!-- [nzShowExpand]=\"!!item.children\" [(nzExpand)]=\"item.expand\"\r\n                            (nzExpandChange)=\"collapse(mapOfExpandedData[data.key], item, $event)\" -->\r\n                            <td nzWidth=\"200px\" nzLeft=\"0px\" [nzIndentSize]=\"item.level * 10\">\r\n                                {{ item.name || item.activity }}\r\n                            </td>\r\n                            <td  nzWidth=\"100px\" nzLeft=\"200px\">{{ item.activity }}</td>\r\n                            <td  nzWidth=\"80px\" nzLeft=\"300px\">{{ item.activity }}</td>\r\n                            <td  nzWidth=\"80px\" nzLeft=\"380px\">{{ item.activity }}</td>\r\n                            <td  nzWidth=\"80px\">{{ item.activity }}</td>\r\n                            <td  nzWidth=\"160px\">{{ item.activity }}</td>\r\n                            <td  nzWidth=\"160px\">{{ item.activity }}</td>\r\n                            <td  nzWidth=\"220px\">{{ item.activity }}</td>\r\n                            <td  nzWidth=\"90px\">{{ item.activity }}</td>\r\n                        </tr>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n\r\n    <div nz-row>\r\n        <div nz-col nzSpan=\"24\">\r\n            <nz-table #sss [nzShowPagination]=\"true\" [nzPageSize]=\"30\" [nzLoading]=\"loading\" [nzSize]=\"'small'\"  [nzScroll]=\"{ x: '2000px', y: '415px' }\"\r\n                [nzFrontPagination]=\"true\" [nzData]=\"timesheets\">\r\n                <thead>\r\n                    <tr>\r\n                        <th nzWidth=\"70px\" nzLeft=\"0px\">Shift #</th>\r\n                        <th nzWidth=\"95px\" nzLeft=\"70px\">Date</th>\r\n                        <th nzWidth=\"70px\" nzLeft=\"165px\">Start Time</th>\r\n                        <th nzWidth=\"70px\" nzLeft=\"240px\">End Time</th>\r\n                        <th nzWidth=\"80px\">Duration</th>\r\n                        <th nzWidth=\"160px\">Recipient or Location</th>\r\n                        <th nzWidth=\"160px\">Program</th>\r\n                        <th nzWidth=\"220px\">Activity</th>\r\n                        <th nzWidth=\"90px\">Pay Type</th>\r\n                        <th nzWidth=\"100px\" [nzAlign]=\"'right'\">Pay Quantity</th>\r\n                        <th nzWidth=\"100px\" [nzAlign]=\"'right'\">Pay Rate</th>\r\n                        <th nzWidth=\"100px\" [nzAlign]=\"'right'\">Bill Quantity</th>\r\n                        <th nzWidth=\"100px\" [nzAlign]=\"'right'\">Bill Rate</th>\r\n                        <th nzWidth=\"100px\">Bill To</th>\r\n                        <th nzWidth=\"70px\" nzRight=\"220px\">Approve</th> \r\n                        <th nzWidth=\"150px\" nzRight=\"70px\">Notes</th>\r\n                        <th nzWidth=\"70px\" nzRight=\"0px\"><label nz-checkbox [(ngModel)]=\"selectAll\" (ngModelChange)=\"selectAllChange($event)\">All</label></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let data of sss.data;let i = index;trackBy: trackByFn\" [class.selected]=\"data.selected\">\r\n                        <td nzLeft=\"0px\">{{ data.shiftbookNo}}</td>\r\n                        <td nzLeft=\"70px\">{{ data.date | date: 'dd/MM/yyyy' }}</td>\r\n                        <td nzLeft=\"165px\">{{ data.startTime | date: 'HH:mm' }}</td>\r\n                        <td nzLeft=\"240px\">{{ data.endTime | date: 'HH:mm' }}</td>\r\n                        <td nzWidth=\"80px\">{{ data.duration }}</td>\r\n                        <td nzWidth=\"160px\">{{ data.recipient }}</td>\r\n                        <td nzWidth=\"160px\">{{ data.program }}</td>\r\n                        <td nzWidth=\"220px\">{{ data.activity }}</td>\r\n                        <td nzWidth=\"90px\">{{ data.paytype }}</td>\r\n                        <td nzWidth=\"100px\" [nzAlign]=\"'right'\"> {{ data.payquant | number : '1.2-2' }}</td>\r\n                        <td nzWidth=\"100px\" [nzAlign]=\"'right'\">{{ data.payrate }}</td>\r\n                        <td nzWidth=\"100px\" [nzAlign]=\"'right'\">{{ data.billquant | number : '1.2-2' }}</td>\r\n                        <td nzWidth=\"100px\" [nzAlign]=\"'right'\">{{ data.billrate | currency: 'USD' }}</td>\r\n                        <td nzWidth=\"100px\">{{ data.billto }}</td>\r\n                        <td nzWidth=\"70px\" nzRight=\"220px\">\r\n                            <label nz-checkbox [(ngModel)]=\"data.approved\"  (ngModelChange)=\"checkBoxChange($event,data)\"></label>\r\n                        </td>\r\n                        <td nzWidth=\"150px\" nzRight=\"70px\" >{{ data.notes }}</td>\r\n                        <td nzRight=\"0px\" [nzAlign]=\"'left'\">\r\n                            <label nz-checkbox [(ngModel)]=\"data.selected\" (ngModelChange)=\"selectedTimesheet($event,data)\"></label>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </nz-table>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"selected && timesheets?.length > 0\" nz-row class=\"calculations\">\r\n        <nz-descriptions nzBordered [nzSize]=\"'small'\" nzBordered nzLayout=\"horizontal\">\r\n            <nz-descriptions-item nzTitle=\"Total Time\">{{ payTotal?.WorkedHours }}</nz-descriptions-item>\r\n            <nz-descriptions-item nzTitle=\"Hours & Minutes\">{{ payTotal?.HoursAndMinutes }}</nz-descriptions-item>\r\n            <nz-descriptions-item nzTitle=\"Total Paid as Hours\">{{ payTotal?.PaidAsHours }}</nz-descriptions-item>\r\n            <nz-descriptions-item nzTitle=\"Total Paid as Services\">{{ payTotal?.PaidAsServices }}</nz-descriptions-item>\r\n            <nz-descriptions-item nzTitle=\"Recipient Attributable Hours\">{{ payTotal?.WorkedAttributableHours }}</nz-descriptions-item>\r\n            <nz-descriptions-item nzTitle=\"Total KM Allowance\">{{ payTotal?.KMAllowancesQty }}</nz-descriptions-item>\r\n            <nz-descriptions-item nzTitle=\"Total Other Allowance\" [nzSpan]=\"1\">{{ payTotal?.AllowanceQty }}</nz-descriptions-item>\r\n            <nz-descriptions-item class=\"total\" nzTitle=\"Calculated Pay\" [nzSpan]=\"2\">{{ payTotal?.BilledAmount | currency: 'USD' }}</nz-descriptions-item>\r\n        </nz-descriptions>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n<nz-modal [(nzVisible)]=\"overlapVisible\" nzTitle=\"Automatic Overlap Removal\" (nzOnCancel)=\"handleCancel()\" (nzOnOk)=\"removeOverlap()\">\r\n    <div nz-row>\r\n        <div nz-row class=\"boxy\">\r\n            This action will force any overlapping shifts to a later start time to remove the overlap. All entries must be either\r\n            approved or unapproved. You cannot use this function if some entries are approved and others are not.\r\n        </div>\r\n        <div nz-row class=\"boxy\">\r\n            If you want to force a timegap between overlapping shifts - select 5 minutes from the drop down or if a gap is not\r\n            needed accept the default of 0\r\n        </div>\r\n        <div nz-row style=\"text-align: center\">\r\n            <nz-select [(ngModel)]=\"overlapValue\" nzAllowClear>\r\n                <nz-option nzValue=\"0\" nzLabel=\"0 minute\"></nz-option>\r\n                <nz-option nzValue=\"5\" nzLabel=\"5 minute\"></nz-option>\r\n            </nz-select>\r\n        </div>\r\n    </div>\r\n</nz-modal>\r\n\r\n<!-- Add Timesheet -->\r\n\r\n<nz-modal [(nzVisible)]=\"addTimesheetVisible\" [nzWidth]=\"900\" nzTitle=\"Add Timesheet\"  [nzFooter]=\"modalFooter\" (nzOnCancel)=\"handleCancel()\">\r\n    <div class=\"flexy\" style=\"min-height:21rem\">\r\n\r\n            <nz-steps [nzCurrent]=\"current\" nzProgressDot nzDirection=\"vertical\">\r\n                <nz-step nzTitle=\"Service Type & Date\"></nz-step>\r\n                <nz-step nzTitle=\"Recipient Details\"></nz-step>\r\n                <nz-step nzTitle=\"Pay Details\"></nz-step>\r\n                <!-- <nz-step *ngIf=\"ifRosterGroupHasTimePayBills(rosterGroup)\" nzTitle=\"Time\"></nz-step> -->\r\n                <nz-step *ngIf=\"ifRosterGroupHasTimePayBills(rosterGroup)\" nzTitle=\"Pay\"></nz-step>\r\n                <nz-step *ngIf=\"ifRosterGroupHasTimePayBills(rosterGroup)\"nzTitle=\"Bills\"></nz-step>\r\n            </nz-steps>\r\n    \r\n            <nz-divider class=\"full-height\" nzType=\"vertical\"></nz-divider>\r\n \r\n            <div class=\"steps-content\">\r\n                <div *ngIf=\"current == 0\" [formGroup]=\"timesheetForm\">\r\n                    <div nz-row nzGutter=\"8\">\r\n                        <div nz-col nzSpan=\"6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"\">Start Time</label>\r\n                                <nz-time-picker [(ngModel)]=\"defaultStartTime\" [ngModelOptions]=\"{standalone: true}\" (ngModelChange)=\"ngModelChangeStart($event)\"  nzFormat=\"HH:mm\"></nz-time-picker>\r\n                            </div>\r\n                        </div>\r\n                        <div nz-col nzSpan=\"6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"\">End Time</label>\r\n                                <nz-time-picker [(ngModel)]=\"defaultEndTime\" [ngModelOptions]=\"{standalone: true}\" (ngModelChange)=\"ngModelChangeEnd($event)\" nzFormat=\"HH:mm\"></nz-time-picker>\r\n                            </div>\r\n                        </div>\r\n                        <div nz-col nzSpan=\"8\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"\">Duration</label>\r\n                                <p class=\"time-duration\">{{ durationObject?.durationStr }}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div nz-row>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Date</label>\r\n                            <nz-date-picker [nzFormat]=\"dateFormat\" formControlName=\"date\"></nz-date-picker>\r\n                        </div>\r\n                    </div>\r\n                    <div nz-row>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Service Type</label>\r\n                            <nz-select formControlName=\"serviceType\" [nzDropdownMatchSelectWidth]=\"false\" style=\"width:15rem\">\r\n                                <nz-option *ngFor=\"let list of modalTimesheetValues\" [nzValue]=\"list.name\" [nzLabel]=\"list.name\"></nz-option>\r\n                            </nz-select>\r\n                        </div>\r\n                    </div>\r\n                    <div nz-row *ngIf=\"multipleRecipientShow\">\r\n                        <label for=\"\">Multiple Recipients</label>\r\n                        <nz-switch nzSize=\"small\" formControlName=\"isMultipleRecipient\"></nz-switch>\r\n                    </div>\r\n                    <div nz-row *ngIf=\"isTravelTimeChargeable\">\r\n                        <label for=\"\">Is Travel Time Chargeable</label>\r\n                        <nz-switch nzSize=\"small\" formControlName=\"isTravelTimeChargeable\"></nz-switch>\r\n                    </div>\r\n                    <div nz-row *ngIf=\"isSleepOver\">\r\n                        <label for=\"\">Select the End Time on the following day for the sleepover</label>\r\n                        <nz-time-picker formControlName=\"sleepOverTime\" nzFormat=\"HH:mm\"></nz-time-picker>\r\n                        <!-- <nz-switch nzSize=\"small\" formControlName=\"isTravelTimeChargeable\"></nz-switch> -->\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"current == 1\" [formGroup]=\"timesheetForm\">\r\n                    <div class=\"form-group\" *ngIf=\"showRecipient() && selected?.option === 0\">\r\n                        <label for=\"\">Recipient</label>\r\n                        <app-recipient-popup formControlName=\"recipientCode\"></app-recipient-popup>\r\n                    </div>\r\n                    <div class=\"form-group\" *ngIf=\"showRecipient() \">\r\n                        <label for=\"\">Debtor</label>\r\n                        <app-recipient-popup formControlName=\"debtor\"></app-recipient-popup>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">Program</label>\r\n                        <nz-select nzAllowClear formControlName=\"program\" [nzDropdownMatchSelectWidth]=\"false\" style=\"width:15rem\">\r\n                            <nz-option *ngFor=\"let list of programsList\" [nzValue]=\"list.ProgName\" [nzLabel]=\"list.ProgName\"></nz-option>\r\n                        </nz-select>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">Service/Activity/Item</label>\r\n                        <nz-select nzAllowClear formControlName=\"serviceActivity\" [nzDropdownMatchSelectWidth]=\"false\" style=\"width:15rem\">\r\n                            <nz-option *ngFor=\"let list of serviceActivityList\" [nzValue]=\"list.activity\" [nzLabel]=\"list.activity\"></nz-option>\r\n                        </nz-select>                        \r\n                        <div>\r\n                            <span style=\"font-size: 11px; color: #45be26; font-weight: 500;\">{{ rosterGroup}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\" *ngIf=\"selected?.option === 1\">\r\n                        <label for=\"\">Staff/Contractor</label>\r\n                        <app-staff-popup formControlName=\"staffCode\"></app-staff-popup>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div *ngIf=\"current == 2\" [formGroup]=\"timesheetForm\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">Pay Type</label>\r\n                        <nz-select formControlName=\"payType\"\r\n                            [nzDropdownMatchSelectWidth]=\"false\" style=\"width:15rem\">\r\n                            <nz-option *ngFor=\"let list of payTypeList\" [nzValue]=\"list.Title\" [nzLabel]=\"list.Title\">\r\n                            </nz-option>\r\n                        </nz-select>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">Category</label>\r\n                        <nz-select formControlName=\"analysisCode\"\r\n                            [nzDropdownMatchSelectWidth]=\"false\" style=\"width:15rem\">\r\n                            <nz-option *ngFor=\"let list of analysisCodeList\" [nzValue]=\"list\" [nzLabel]=\"list\">\r\n                            </nz-option>\r\n                        </nz-select>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- <div nz-row nzSpan=\"24\" nzGutter=\"8\" *ngIf=\"current == 3\" style=\"width: 30rem;\">\r\n                    <ng-container>\r\n                        <div nz-col nzSpan=\"8\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"\">Start Time</label>\r\n                                <nz-time-picker [(ngModel)]=\"defaultStartTime\" (ngModelChange)=\"ngModelChangeStart($event)\"  nzFormat=\"HH:mm\"></nz-time-picker>\r\n                            </div>\r\n                        </div>\r\n                        <div nz-col nzSpan=\"8\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"\">End Time</label>\r\n                                <nz-time-picker [(ngModel)]=\"defaultEndTime\" (ngModelChange)=\"ngModelChangeEnd($event)\" nzFormat=\"HH:mm\"></nz-time-picker>\r\n                            </div>\r\n                        </div>\r\n                        <div nz-col nzSpan=\"8\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"\">Duration</label>\r\n                                <p class=\"time-duration\">{{ durationObject?.durationStr }}</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </div> -->\r\n\r\n                <div nz-row nzSpan=\"24\" nzGutter=\"8\" [formGroup]=\"timesheetForm\" *ngIf=\"current == 3\" style=\"width: 30rem;\">\r\n                    <ng-container formGroupName=\"pay\">\r\n                        <div nz-row>\r\n                            <div nz-col nzSpan=\"10\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">Unit</label>\r\n                                    <nz-select formControlName=\"unit\" [nzDropdownMatchSelectWidth]=\"false\">\r\n                                        <nz-option *ngFor=\"let list of unitsArr\" [nzValue]=\"list\" [nzLabel]=\"list\"></nz-option> \r\n                                    </nz-select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                       <div nz-row>\r\n                            <div nz-col nzSpan=\"7\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">Rate</label>\r\n                                    <nz-input-number formControlName=\"rate\" [nzMin]=\"-1\" [nzStep]=\"1\" [nzFormatter]=\"formatterDollar\"\r\n                                        [nzParser]=\"parserDollar\"></nz-input-number>\r\n                                </div>\r\n                            </div>\r\n                            <div nz-col nzSpan=\"7\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">Quantity</label>\r\n                                    <nz-input-number formControlName=\"quantity\" [nzMin]=\"0\"  [nzStep]=\"1\"></nz-input-number>\r\n                                </div>\r\n                            </div>\r\n                       </div>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <div nz-row nzSpan=\"24\" nzGutter=\"8\" *ngIf=\"current == 4\" [formGroup]=\"timesheetForm\" style=\"width: 30rem;\">\r\n                    <ng-container formGroupName=\"bill\">\r\n                        <div nz-row>\r\n                            <div nz-col nzSpan=\"8\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">Unit</label>\r\n                                    <nz-select formControlName=\"unit\" [nzDropdownMatchSelectWidth]=\"false\">\r\n                                        <nz-option *ngFor=\"let list of unitsArr\" [nzValue]=\"list\" [nzLabel]=\"list\">\r\n                                        </nz-option>\r\n                                    </nz-select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                       <div nz-row>\r\n                            <div nz-col nzSpan=\"7\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">Rate</label>\r\n                                    <nz-input-number formControlName=\"rate\" [nzMin]=\"0\" [nzStep]=\"1\" [nzFormatter]=\"formatterDollar\"\r\n                                        [nzParser]=\"parserDollar\"></nz-input-number>\r\n                                </div>\r\n                            </div>\r\n                            <div nz-col nzSpan=\"7\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">Quantity</label>\r\n                                    <nz-input-number formControlName=\"quantity\" [nzMin]=\"0\" [nzStep]=\"1\"></nz-input-number>\r\n                                </div>\r\n                            </div>\r\n                            <div nz-col nzSpan=\"7\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">Tax %</label>\r\n                                    <nz-input-number formControlName=\"tax\" [nzMin]=\"-1\" [nzMax]=\"100\" [nzStep]=\"1\" [nzFormatter]=\"formatterPercent\"\r\n                                        [nzParser]=\"parserPercent\"></nz-input-number>\r\n                                </div>\r\n                            </div>\r\n                       </div>\r\n                    </ng-container>\r\n                </div>\r\n\r\n            </div>\r\n   \r\n    </div>\r\n\r\n    <ng-template #modalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"pre()\" *ngIf=\"current > 0\">\r\n            <span>Previous</span>\r\n        </button>\r\n        <button nz-button nzType=\"default\" (click)=\"next()\" *ngIf=\"nextCondition\" [disabled]=\"nextDisabled\">\r\n            <span>Next</span>\r\n        </button>\r\n        <button nz-button nzType=\"primary\" (click)=\"done()\" [disabled]=\"!isFormValid\" *ngIf=\"current >= 4\">\r\n            <span>Done</span>\r\n        </button>\r\n        <!-- <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Custom Callback</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"handleOk()\" [nzLoading]=\"isConfirmLoading\">Custom Submit</button> -->\r\n    </ng-template>\r\n\r\n</nz-modal>\r\n\r\n<!-- Add Timesheet -->\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\nimport { ClientService, GlobalService, StaffService, TimeSheetService, SettingsService } from '@services/index';\r\n\r\nimport * as moment from 'moment';\r\nimport { NzNotificationService } from 'ng-zorro-antd/notification';\r\nimport format from 'date-fns/format';\r\n\r\n\r\nimport { forkJoin, Subject, Observable, EMPTY } from 'rxjs';\r\nimport { takeUntil, debounceTime, distinctUntilChanged, switchMap, mergeMap } from 'rxjs/operators';\r\nimport differenceInCalendarDays from 'date-fns/differenceInCalendarDays';\r\n\r\nconst enum ImagePosition {\r\n    LaundryService = '-81px -275px',\r\n    PersonalCare = \"-247px -276px \",\r\n    CaseManagement = \"-164px -181px\",\r\n    StaffTravel = \"1px -21px\",\r\n    Transport = \"1px -264px\",\r\n    Unavailable = \"-50px 0px\",\r\n    SocialHelp = \"-247px -365px\"\r\n}\r\n\r\nconst enum ImageActivity {\r\n    Laundry = 'DA LAUNDRY PRV',\r\n    Personal = 'PERSONAL CARE PKGE',\r\n    Case = 'CASE MANAGEMENT PKGE',\r\n    StaffTravel = 'STAFF TRAVEL',\r\n    Transport = 'TRANSPORT',\r\n    Unavailable = 'UNAVAILABLE',\r\n    SocialHelp = 'SOCIAL HELP PRIV'\r\n}\r\n\r\n@Component({\r\n    selector: 'booking-client',\r\n    styles: [`\r\n        .steps-content{\r\n            display: inline-block;\r\n            height: 23rem;\r\n            min-width:40rem;\r\n            margin:2rem;\r\n            overflow-y: auto;\r\n            padding: 1rem;\r\n        }\r\n        button{\r\n            margin-left:5px;\r\n        }\r\n        .chkboxes div:first-child{\r\n            margin:1rem 0;\r\n        }\r\n        .services-list > div{\r\n            margin-top:15px;\r\n        }\r\n        .book-wrapper{\r\n            border: 1px solid #e8e8e8;\r\n            padding:10px;\r\n            height:9rem;\r\n        }\r\n        .book-wrapper h4{\r\n            color:rgb(36, 36, 36);\r\n        }\r\n        .book-wrapper p{\r\n            display: inline-block;\r\n            font-size: 11px;\r\n            color:#1e3936;\r\n        }\r\n        .book-wrapper > div{\r\n            display: inline-block;\r\n            width: 100%;\r\n        }\r\n        .book-wrapper button{\r\n            position: absolute;\r\n            bottom: 10px;\r\n            right: 50%;\r\n            left: 50%;\r\n        }\r\n        .book-image{\r\n            background: url(assets/medical-icons.png);            \r\n            background-repeat: no-repeat;\r\n            background-size: 18rem;\r\n            width: 60px;\r\n            height: 60px;\r\n            float:left;\r\n        }\r\n        .pick{\r\n            background:linear-gradient(#d0f4ff,#d0ffc8);\r\n        }\r\n        .example{\r\n            text-align: center;\r\n            border-radius: 4px;\r\n            margin-bottom: 20px;\r\n            padding: 30px 50px;\r\n            margin: 20px 0;\r\n        }\r\n        .numVars > div{\r\n            font-size:24px;\r\n        }\r\n        .total{\r\n            color: #00e47b;\r\n        }\r\n        ul{\r\n            list-style:none;\r\n        }\r\n        li{\r\n            border-bottom: 1px solid #f1f1f1;\r\n            padding:0.5rem 0;\r\n            position:relative;\r\n        }\r\n        li label{\r\n            position: absolute;\r\n            right: 0rem;\r\n            top: 1.5rem;\r\n        }\r\n        li nz-rate{\r\n            margin-left: 3.7rem;\r\n        }\r\n        nz-avatar{\r\n            float: left;\r\n            margin: 6px;\r\n            margin-right: 1rem;\r\n        }\r\n        h3{\r\n            color: #5288ff;\r\n        }\r\n        .leadtime{\r\n            font-size: 10px;\r\n            color: #14b144;\r\n            margin-top: 5px;\r\n        }\r\n        .arrow-right{\r\n            font-size: 2.5rem;\r\n            color: #1890ff;\r\n            margin-top: 5rem;\r\n        }\r\n    `],\r\n    templateUrl: './booking.html'\r\n})\r\n\r\n\r\nexport class BookingClient implements OnInit, OnDestroy {\r\n\r\n    @Input() inputUser: any;\r\n\r\n    current = 0;\r\n\r\n    time = new Date(1990, 1, 1, 9, 0, 0);\r\n\r\n    startTime: any = new Date(1990, 1, 1, 9, 0, 0);\r\n    endTime: any = new Date(1990, 1, 1, 10, 0, 0);\r\n    date = new Date();\r\n\r\n    checked: boolean = false;\r\n\r\n    once: boolean = true;\r\n    permanent: boolean = false;\r\n    aprovider: boolean = true;\r\n    cprovider: boolean = false;\r\n\r\n    selectedInputParams: any;\r\n\r\n    user: any;\r\n    token: any;\r\n\r\n    services: Array<any>;\r\n    loadServices: boolean = false;\r\n\r\n    selectedService: any = null;\r\n    selectedStaff: any = null;\r\n\r\n    loading: boolean = false;\r\n    bookingModalOpen: boolean = false;\r\n\r\n    notes: string = '';\r\n    _settings: SettingsService;\r\n    results: Array<any> = [];\r\n\r\n    bookType: boolean = false;\r\n    weekly: string = '';\r\n\r\n    loadBooking: boolean = false;\r\n\r\n    private unsubscribe = new Subject()\r\n\r\n    constructor(\r\n        private clientS: ClientService,\r\n        private globalS: GlobalService,\r\n        private settings: SettingsService,\r\n        private notification: NzNotificationService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log(this.globalS.decode());\r\n        // console.log(this.globalS.userProfile);\r\n\r\n        this._settings = this.settings;\r\n        console.log(this._settings);\r\n\r\n        this.user = this.inputUser || this.globalS.decode().code;\r\n        this.token = this.globalS.decode();\r\n    }\r\n\r\n    computeDuration(start: any, end: any) {\r\n        return this.globalS.computeTime(start, end);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n\r\n    pre(): void {\r\n        if (this.cprovider && this.current == 2) {\r\n            this.selectedStaff = null;\r\n        }\r\n        this.current -= 1;\r\n    }\r\n\r\n    next(): void {\r\n        if (this.current == 0) {\r\n            this.loading = true;\r\n            this.selectedService = '';\r\n            this.services = [];\r\n\r\n            this.getApprovedServices();\r\n        }\r\n\r\n        if (this.current == 1) {\r\n            console.log(this.current);\r\n        }\r\n\r\n        if (this.cprovider && this.current == 1) {\r\n            this.loading = true;\r\n            \r\n            this.clientS.getqualifiedstaff({\r\n                RecipientCode: this.token.code,\r\n                User: this.token.user,\r\n                BookDate: format(this.date,'yyyy/MM/dd'),\r\n                StartTime: '09:00',\r\n                EndTime: '11:00',\r\n                EndLimit: '17:00',\r\n                Gender: '',\r\n                Competencys: '',\r\n                CompetenciesCount: 0\r\n            }).subscribe((data: any) => {\r\n                this.loading = false;\r\n                let original = data.map(x => {\r\n                    var gender = -1;\r\n\r\n                    if (x.gender && (x.gender[0]).toUpperCase() == 'F') {\r\n                        gender = 0;\r\n                    }\r\n\r\n                    if (x.gender && (x.gender[0]).toUpperCase() == 'M') {\r\n                        gender = 1;\r\n                    }\r\n\r\n                    return {\r\n                        firstName: x.firstName,\r\n                        age: x.age,\r\n                        rating: x.rating,\r\n                        km: x.km,\r\n                        gender: gender,\r\n                        accountNo: x.accountNo\r\n                    };\r\n                });\r\n\r\n                this.results = original;\r\n            });\r\n        }\r\n        if (this.cprovider && this.current == 2){\r\n            console.log(this.selectedStaff)\r\n        } \r\n        this.current += 1;\r\n    }\r\n\r\n    getApprovedServices() {\r\n        if (this.cprovider) {\r\n            this.selectedInputParams = {\r\n                RecipientCode: this.user,\r\n                User: this.token['nameid'],\r\n                BookDate: moment(this.date).format('YYYY/MM/DD'),\r\n                StartTime: this.startTime,\r\n                EndTime: this.endTime,\r\n                EndLimit: '17:00',\r\n                Gender: '',\r\n                Competencys: '',\r\n                CompetenciesCount: 0\r\n            }\r\n        }\r\n                \r\n        this.clientS.getapprovedservices({\r\n            RecipientCode: this.user,\r\n            BookDate: moment(this.date).format('YYYY/MM/DD'),\r\n            StartTime: format(this.startTime,'HH:mm')\r\n        }).subscribe(data => {\r\n            this.services = data.list\r\n            this.loadServices = false;\r\n            this.loading = false;\r\n        });\r\n    }\r\n\r\n    get canGoNext(): boolean {\r\n        if (this.current == 0) return true;\r\n        if (this.current == 1 && this.selectedService ) return true;           \r\n\r\n        if (!this.cprovider && this.current > 2) return true;\r\n        if (this.cprovider && this.current > 1 && this.current == 2 && this.selectedStaff) return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    get canBeDone(): boolean {\r\n        return (!this.cprovider && this.current == 2) || (this.cprovider && this.current == 3);\r\n    }\r\n\r\n    computeRating(rating: string): number{\r\n        if (!rating || rating == null || rating == '') return 0;\r\n        var ratingNo = rating.split('*').length - 1;\r\n\r\n        if (ratingNo > 7) return 7;\r\n        return ratingNo;\r\n    }\r\n\r\n    change(data: any, source: string) {\r\n        if (source == 'aprov') {\r\n            if (data)\r\n                this.cprovider = false;\r\n        }\r\n\r\n        if (source == 'cprov') {\r\n            if (data)\r\n                this.aprovider = false\r\n        }\r\n\r\n        if (source == 'once') {\r\n            if (data)\r\n                this.permanent = false;\r\n            else\r\n                this.permanent = true;\r\n        }\r\n\r\n        if (source == 'permanent') {\r\n            if (data) {\r\n                this.once = false;\r\n                this.weekly = '';\r\n                //this.weekly = 'Weekly'\r\n            }\r\n            else {\r\n                this.once = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    getPositionImg(data: any): string {\r\n        let temp = data.serviceType || \"\";\r\n        if (temp.indexOf(ImageActivity.Laundry) !== -1) return ImagePosition.LaundryService;\r\n        if (temp.indexOf(ImageActivity.Unavailable) !== -1) return ImagePosition.Unavailable;\r\n        if (temp.indexOf(ImageActivity.Transport) !== -1) return ImagePosition.Transport;\r\n        if (temp.indexOf(ImageActivity.StaffTravel) !== -1) return ImagePosition.StaffTravel;\r\n        if (temp.indexOf(ImageActivity.Personal) !== -1) return ImagePosition.PersonalCare;\r\n        if (temp.indexOf(ImageActivity.Case) !== -1) return ImagePosition.CaseManagement;\r\n        if (temp.indexOf(ImageActivity.SocialHelp) !== -1) return ImagePosition.SocialHelp;\r\n    }\r\n\r\n    add(data: any) {\r\n        if (Object.is(data, this.selectedService)) {\r\n            this.selectedService = null;\r\n            return false;\r\n        }\r\n        this.selectedService = data;\r\n    }\r\n\r\n    isPicked(data: any) {\r\n        return Object.is(data, this.selectedService);\r\n    }\r\n\r\n\r\n    confirm() {\r\n        this.bookingModalOpen = true;\r\n    }\r\n\r\n    book() {\r\n        let booking: Dto.AddBooking = {\r\n            BookType: this.bookType,\r\n            StaffCode: !(this.aprovider) ? this.selectedStaff.accountNo : \"\",\r\n            Service: this.selectedService,\r\n            StartDate: moment(this.date).format('YYYY/MM/DD'),\r\n            StartTime: format(this.startTime,'HH:mm'),\r\n            ClientCode: this.user,\r\n            Duration: format(this.endTime, 'HH:mm'),\r\n            Username: this.token['nameid'],\r\n            AnyProvider: this.aprovider,\r\n            BookingType: this.once ? 'Normal' : this.permanent ? this.weekly : '',\r\n            Notes: this.notes\r\n        }\r\n        // console.log(booking);\r\n        this.loadBooking = true;\r\n\r\n        this.clientS.addbooking(booking).pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n            let resultRows = parseInt(data);\r\n            if (resultRows == 1) {\r\n                this.notification.create('success', 'Booking Success', 'A booking record has been successfully inserted');\r\n            } else if (resultRows > 1)\r\n                this.globalS.eToast('Error', 'You already have a booking in that timeslot');\r\n\r\n            this.resetStepper();\r\n            this.bookingModalOpen = false;\r\n        }, (err) => {\r\n            this.globalS.eToast('Error', 'Booking Unsuccessful')\r\n        });\r\n\r\n    }\r\n\r\n    resetStepper() {\r\n        this.current = 0;\r\n        this.notes = \"\";\r\n        this.selectedService = null;\r\n        this.startTime = new Date(1990, 1, 1, 9, 0, 0);\r\n        this.endTime = new Date(1990, 1, 1, 10, 0, 0);\r\n        this.date = new Date();\r\n        this.loadBooking = false;\r\n        this.selectedStaff = '';\r\n        this.weekly = '';\r\n    }\r\n\r\n    disabledDate = (current: Date): boolean => {\r\n        // Can not select days before today and today\r\n        return differenceInCalendarDays(current, new Date()) < this._settings?.BOOKINGLEADTIME();\r\n\r\n    };\r\n}","<div>\r\n    <nz-steps [nzCurrent]=\"current\" nzSize=\"small\">\r\n        <nz-step nzTitle=\"Booking Details\"></nz-step>\r\n        <nz-step nzTitle=\"Services\"></nz-step>\r\n        <nz-step *ngIf=\"cprovider\" nzTitle=\"Staff\"></nz-step>\r\n        <nz-step nzTitle=\"Notes\"></nz-step>\r\n    </nz-steps>\r\n\r\n    <div nzRow>\r\n        <div class=\"steps-content\">\r\n            <div *ngIf=\"current == 0\" style=\"height:100%\">\r\n                <div nz-row nzGutter=\"16\" style=\"height:100%\">\r\n                    <div nz-col nzSpan=\"6\" style=\"height:100%\" >\r\n                        <div nzRow>\r\n                            <div class=\"mrg-btm form-wrap\" nz-col [nzSpan]=\"12\" [nzXs]=\"12\" [nzMd]=\"12\">\r\n                                <label for=\"\">Start Time</label>\r\n                                <nz-time-picker [(ngModel)]=\"startTime\" nzFormat=\"HH:mm\"></nz-time-picker>\r\n                            </div>\r\n                            <div class=\"mrg-btm form-wrap\" nz-col [nzSpan]=\"12\" [nzXs]=\"12\" [nzMd]=\"12\">\r\n                                <label for=\"\">End Time</label>\r\n                                <nz-time-picker [(ngModel)]=\"endTime\" nzFormat=\"HH:mm\"></nz-time-picker>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"mrg-btm form-wrap\" nzRow>\r\n                            <div nz-col [nzMd]=\"24\">\r\n                                <label for=\"\">Date</label>\r\n                                <nz-date-picker [(ngModel)]=\"date\" [nzFormat]=\"'yyyy/MM/dd'\" [nzDisabledDate]=\"disabledDate\"></nz-date-picker>\r\n                                <div class=\"leadtime\">Booking Lead Time: {{ _settings?.BOOKINGLEADTIME() - 1 }}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div nzRow>\r\n                            <div class=\"mrg-btm chkboxes\" nz-col [nzSpan]=\"12\" [nzXs]=\"24\" [nzMd]=\"12\">\r\n                                <div>\r\n                                    <label nz-checkbox [(ngModel)]=\"once\" (ngModelChange)=\"change($event,'once')\">Once\r\n                                        Only</label>\r\n                                </div>\r\n                                <div>\r\n                                    <label nz-checkbox [(ngModel)]=\"permanent\" (ngModelChange)=\"change($event,'permanent')\">Permanent</label>\r\n                                </div>                                \r\n                            </div>\r\n                        \r\n                            <div class=\"mrg-btm chkboxes\" [nzSpan]=\"12\" nz-col [nzXs]=\"24\" [nzMd]=\"12\" *ngIf=\"_settings?.CANCHOOSEPROVIDER()\">\r\n                                <div>\r\n                                    <label nz-checkbox [(ngModel)]=\"aprovider\" (ngModelChange)=\"change($event,'aprov')\">Any\r\n                                        Provider</label>\r\n                                </div>\r\n                                <div>\r\n                                    <label nz-checkbox [(ngModel)]=\"cprovider\" (ngModelChange)=\"change($event,'cprov')\">Pick\r\n                                        Provider</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"1\" style=\"height:100%\">\r\n                        <i nz-icon nzType=\"right\" *ngIf=\"permanent\" class=\"arrow-right\" nzTheme=\"outline\"></i>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"17\">\r\n                        <div nz-row *ngIf=\"permanent\">\r\n                            <div nz-row class=\"mrg-btm form-wrap\">\r\n                                <label for=\"\">Interval Period</label>\r\n                                <nz-select style=\"width: 10rem;\" nzShowSearch nzAllowClear nzPlaceHolder=\"Time Interval\"\r\n                                    [(ngModel)]=\"weekly\">\r\n                                    <nz-option nzLabel=\"Weekly\" nzValue=\"Weekly\"></nz-option>\r\n                                    <nz-option nzLabel=\"Fortnightly\" nzValue=\"Fortnightly\"></nz-option>\r\n                                    <nz-option nzLabel=\"4 Weekly\" nzValue=\"FourWeekly\"></nz-option>\r\n                                </nz-select>\r\n                            </div>\r\n                            <div nz-row>\r\n                                <app-interval-design [interval]=\"weekly\"></app-interval-design>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"current == 1\">\r\n                <div nz-row [nzGutter]=\"7\" class=\"services-list\">\r\n                    <div class=\"example\" *ngIf=\"loading\">\r\n                        <nz-spin nzSimple></nz-spin>\r\n                    </div>\r\n                    <div nz-col [nzSpan]=\"8\" *ngFor=\"let svc of services\">\r\n                        <!-- <nz-card [nzTitle]=\"svc.serviceName | uppercase\"\r\n                            [nzBodyStyle]=\"{'height':'6rem', 'fontSize': '11px'}\">\r\n                            <p>{{ svc.serviceProgram | uppercase }}</p>\r\n                        </nz-card> -->\r\n                        <div class=\"book-wrapper\" [class.pick]=\"isPicked(svc)\">\r\n                            <div>\r\n                                <div class=\"book-image\" [style.background-position]=\"getPositionImg(svc)\"></div>\r\n                                <h4>{{ svc.serviceName | uppercase }}</h4>\r\n                                <h3 style=\"color:#63db54\">{{ svc.serviceBillRate | currency: 'USD' }}</h3>\r\n                            </div>\r\n                            <p>{{ svc.serviceProgram | uppercase }}</p>\r\n                            <button nz-button nzType=\"primary\" [nzSize]=\"'small'\"\r\n                                (click)=\"add(svc)\"><i nz-icon nzType=\"bulb\" nzTheme=\"outline\"></i> Pick</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"cprovider && current == 2\">\r\n                <div class=\"example\" *ngIf=\"loading\">\r\n                    <nz-spin nzSimple></nz-spin>\r\n                </div>\r\n                <div nz-row>\r\n                    <div nz-col nzSpan=\"12\" nzGutter=\"32\">\r\n                        <nz-radio-group [(ngModel)]=\"selectedStaff\" nzName=\"radiogroup\" style=\"width:100%\">\r\n                            <ul>                        \r\n                                <li *ngFor=\"let staff of results;let i=index\">\r\n                                    <nz-avatar [nzShape]=\"'square'\" [nzSize]=\"'large'\" [nzIcon]=\"'user'\"></nz-avatar>\r\n                                    <h3>{{staff.accountNo}}</h3>\r\n                                    <h5>{{ staff.firstName}} <span *ngIf=\"staff.age && _settings?.CANSEEPROVIDERAGE()\"> * {{ staff.age }} yrs old</span></h5>\r\n                                    <nz-rate *ngIf=\"staff.rating && _settings?.CANESEEPROVIDERREVIEWS()\" [nzCount]=\"7\" [ngModel]=\"computeRating(staff.rating)\" nzDisabled></nz-rate>\r\n                                    <label nz-radio [nzValue]=\"staff\"></label>\r\n                                </li>\r\n                            </ul>\r\n                        </nz-radio-group>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"12\">\r\n                        #\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div *ngIf=\"(!cprovider && current == 2) || (cprovider && current == 3)\">\r\n                <div>\r\n                    <label for=\"\">Notes</label>\r\n                    <textarea [(ngModel)]=\"notes\" rows=\"4\" nz-input></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"steps-action\">\r\n        <div>\r\n            <button nz-button nzType=\"default\" (click)=\"pre()\" *ngIf=\"current > 0\">\r\n                <span>Previous</span>\r\n            </button>\r\n\r\n            <!-- *ngIf=\"current == 0 || ( current == 1 && selectedService )\" -->\r\n            <button nz-button nzType=\"default\" (click)=\"next()\"\r\n                *ngIf=\"canGoNext\">\r\n                <span>Next</span>\r\n            </button>\r\n\r\n            <button nz-button *ngIf=\"canBeDone && _settings?.ALLOWBOOKING()\" nzType=\"primary\" (click)=\"confirm()\">\r\n                <span>Done</span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n<nz-modal [nzWidth]=\"'800'\" [(nzVisible)]=\"bookingModalOpen\" nzTitle=\"BOOKING DETAILS\"\r\n    (nzOnCancel)=\"bookingModalOpen = false\">\r\n    <div>\r\n        <div nz-row>\r\n            <div nz-col nzSpan=\"8\" class=\"item\">\r\n                <label for=\"\">Date</label>\r\n                <div>{{ date | date: 'MMMM dd, yyyy' }}</div>\r\n            </div>\r\n            <div nz-col nzSpan=\"5\" class=\"item\">\r\n                <label for=\"\">Start Time</label>\r\n                <div>{{ startTime | date: 'HH:mm' }}</div>\r\n            </div>\r\n            <div nz-col nzSpan=\"5\" class=\"item\">\r\n                <label for=\"\">End Time</label>\r\n                <div>{{ endTime | date: 'HH:mm' }}</div>\r\n            </div>\r\n            <div nz-col nzSpan=\"5\" class=\"item\">\r\n                <label for=\"\">Duration</label>\r\n                <div>{{ computeDuration(startTime,endTime).durationStr }}</div>\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n            <div nz-col nzSpan=\"8\" class=\"item\">\r\n                <label for=\"\">Service Name</label>\r\n                <div>{{ selectedService?.serviceName | uppercase }}</div>\r\n            </div>\r\n            <div nz-col nzSpan=\"14\" class=\"item\">\r\n                <label for=\"\">Program</label>\r\n                <div>{{ selectedService?.serviceProgram }}</div>\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n            <div class=\"item\">\r\n                <label for=\"\">Notes</label>\r\n                <textarea rows=\"4\" nz-input readonly [ngModel]=\"notes\"></textarea>\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n            <div nz-col nzSpan=\"24\">\r\n                <label for=\"\">Total</label>\r\n                <div nz-row>\r\n                    <div nz-col nzOffset=\"2\" nzSpan=\"4\" class=\"numVars\">\r\n                        <label for=\"\">Rate</label>\r\n                        <div>${{ selectedService?.serviceBillRate | number : '1.2-2' }} /hr</div>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"3\" class=\"numVars\">\r\n                        <label for=\"\" style=\"height: 20px;\"></label>\r\n                        <div>X</div>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"3\" class=\"numVars\">\r\n                        <label for=\"\">Duration</label>\r\n                        <div>{{ computeDuration(startTime,endTime).durationInHours | number : '1.2-2' }}</div>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"3\" class=\"numVars\">\r\n                        <label for=\"\" style=\"height: 20px;\"></label>\r\n                        <div>=</div>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"3\" class=\"numVars\">\r\n                        <label for=\"\" style=\"height: 20px;\"></label>\r\n                        <div class=\"total\">\r\n                            ${{ selectedService?.serviceBillRate * computeDuration(startTime,endTime).durationInHours | number : '1.2-2' }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"bookingModalOpen = false\">Cancel</button>\r\n        <button nz-button nzType=\"primary\" [nzLoading]=\"loadBooking\" (click)=\"book()\">Book</button>\r\n    </div>\r\n</nz-modal>","import {\r\n    Component,\r\n    ChangeDetectionStrategy,\r\n    ViewChild,\r\n    TemplateRef,\r\n    Input,\r\n    OnInit,\r\n    OnDestroy\r\n} from '@angular/core';\r\nimport {\r\n    startOfDay,\r\n    endOfDay,\r\n    subDays,\r\n    addDays,\r\n    isSameDay,\r\n    isSameMonth,\r\n    addHours\r\n} from 'date-fns';\r\n\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport parseISO from 'date-fns/parseISO'\r\nimport parse from 'date-fns/parse'\r\nimport startOfMonth from 'date-fns/startOfMonth'\r\nimport endOfMonth from 'date-fns/endOfMonth'\r\nimport startOfWeek from 'date-fns/startOfWeek'\r\nimport endOfWeek from 'date-fns/endOfWeek'\r\nimport format from 'date-fns/format'\r\n\r\nimport { GlobalService, StaffService, leaveTypes } from '@services/index';\r\nimport { Subject } from 'rxjs';\r\n// import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n    CalendarEvent,\r\n    CalendarEventAction,\r\n    CalendarEventTimesChangedEvent,\r\n    CalendarView\r\n} from 'angular-calendar';\r\n\r\ninterface RosterEvent {\r\n    billRate: string,\r\n    carer: string,\r\n    client: string,\r\n    endTime: string,\r\n    notes: string,\r\n    recordNo: string,\r\n    service: string,\r\n    startTime: string,\r\n    status: string,\r\n    type: string\r\n}\r\n\r\n\r\nconst colors: any = {\r\n    red: {\r\n        primary: '#ad2121',\r\n        secondary: '#FAE3E3'\r\n    },\r\n    blue: {\r\n        primary: '#1e90ff',\r\n        secondary: '#D1E8FF'\r\n    },\r\n    yellow: {\r\n        primary: '#e3bc08',\r\n        secondary: '#FDF1BA'\r\n    }\r\n};\r\n\r\n@Component({\r\n    selector: 'calendar-client',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    styleUrls: ['./calendar.css'],\r\n    styles: [`\r\n        h3 {\r\n            margin: 0 0 10px;\r\n        }\r\n\r\n        pre {\r\n            background-color: #f5f5f5;\r\n            padding: 15px;\r\n        }\r\n        .btn-group div{\r\n            padding: 4px 5px;\r\n            font-size: 14px;\r\n        }\r\n        mwl-calendar-month-view >>> mwl-calendar-month-view-header > div.cal-header > div{\r\n            font-weight: 400;\r\n        }\r\n        nz-select{\r\n            float: right;\r\n            margin: 0 0 10px 0;\r\n        }\r\n    `],\r\n    templateUrl: 'calendar.html'\r\n})\r\nexport class CalendarClient implements OnInit, OnDestroy {\r\n    @Input() accountNo;\r\n    @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\r\n\r\n    private unsubscribe$ = new Subject();\r\n\r\n    view: CalendarView = CalendarView.Month;\r\n\r\n    CalendarView = CalendarView;\r\n\r\n    viewDate: Date = new Date();\r\n\r\n    temporaryEvents: CalendarEvent[];\r\n\r\n    timeArray: Array<number> = [5, 10, 15, 30];\r\n\r\n    hourSegments: number;\r\n    minuteInterval: number;\r\n\r\n    modalData: {\r\n        action: string;\r\n        event: CalendarEvent;\r\n    };\r\n\r\n    isVisible: boolean = false;\r\n    toggleAdminFees: boolean = false;\r\n    title: string;\r\n\r\n    rosterData: RosterEvent;\r\n\r\n\r\n    // actions: CalendarEventAction[] = [\r\n    //     {\r\n    //         label: '<i class=\"fa fa-fw fa-pencil\"></i>',\r\n    //         a11yLabel: 'Edit',\r\n    //         onClick: ({ event }: { event: CalendarEvent }): void => {\r\n    //             this.handleEvent('Edited', event);\r\n    //         }\r\n    //     },\r\n    //     {\r\n    //         label: '<i class=\"fa fa-fw fa-times\"></i>',\r\n    //         a11yLabel: 'Delete',\r\n    //         onClick: ({ event }: { event: CalendarEvent }): void => {\r\n    //             this.events = this.events.filter(iEvent => iEvent !== event);\r\n    //             this.handleEvent('Deleted', event);\r\n    //         }\r\n    //     }\r\n    // ];\r\n\r\n    refresh: Subject<any> = new Subject();\r\n    events: CalendarEvent[] = [];\r\n    activeDayIsOpen: boolean = false;\r\n\r\n    constructor(\r\n        // private modal: NgbModal\r\n        private staffS: StaffService,\r\n        private globalS: GlobalService\r\n    ) { }\r\n\r\n\r\n    ngOnInit() {\r\n        this.search(\r\n            format(startOfMonth(new Date()), 'yyyy/MM/dd'),\r\n            format(endOfMonth(new Date()), 'yyyy/MM/dd')\r\n        )\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe$.next();\r\n        this.unsubscribe$.complete();\r\n    }\r\n\r\n    dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\r\n        if (isSameMonth(date, this.viewDate)) {\r\n            if (\r\n                (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\r\n                events.length === 0\r\n            ) {\r\n                this.activeDayIsOpen = false;\r\n            } else {\r\n                this.activeDayIsOpen = true;\r\n            }\r\n            this.viewDate = date;\r\n        }\r\n    }\r\n\r\n    // eventTimesChanged({\r\n    //     event,\r\n    //     newStart,\r\n    //     newEnd\r\n    // }: CalendarEventTimesChangedEvent): void {\r\n    //     this.events = this.events.map(iEvent => {\r\n    //         if (iEvent === event) {\r\n    //             return {\r\n    //                 ...event,\r\n    //                 start: newStart,\r\n    //                 end: newEnd\r\n    //             };\r\n    //         }\r\n    //         return iEvent;\r\n    //     });\r\n    //     this.handleEvent('Dropped or resized', event);\r\n    // }\r\n\r\n    eventTimesChanged({\r\n        event,\r\n        newStart,\r\n        newEnd\r\n    }: CalendarEventTimesChangedEvent): void {\r\n        event.start = newStart;\r\n        event.end = newEnd;\r\n        this.handleEvent('Dropped or resized', event);\r\n        this.refresh.next();\r\n    }\r\n\r\n    handleEvent(action: string, event: any): void {\r\n        this.modalData = { event, action };\r\n        this.rosterData = event.data;\r\n\r\n        const type = parseInt(this.rosterData.type);\r\n        const status = parseInt(this.rosterData.status);\r\n\r\n        if (type == 1) {\r\n            this.title = \"UNASSIGNED BOOKING\";\r\n        }\r\n\r\n        if (type > 1) {\r\n            if (status == 1) this.title = \"ASSIGNED BOOKING\";\r\n            if (status == 2) this.title = \"FINALISED SERVICE\";\r\n            if (status == 3 || status == 4) this.title = `BILLED ${this.rosterData.recordNo}`;\r\n        }\r\n\r\n        this.isVisible = true;\r\n        // this.modal.open(this.modalContent, { size: 'lg' });\r\n    }\r\n\r\n    handleCancel() {\r\n        this.isVisible = false;\r\n    }\r\n\r\n    addEvent(): void {\r\n        this.events = [\r\n            ...this.events,\r\n            {\r\n                title: 'New event',\r\n                start: startOfDay(new Date()),\r\n                end: endOfDay(new Date()),\r\n                color: colors.red,\r\n                draggable: true,\r\n                resizable: {\r\n                    beforeStart: true,\r\n                    afterEnd: true\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    deleteEvent(eventToDelete: CalendarEvent) {\r\n        this.events = this.events.filter(event => event !== eventToDelete);\r\n    }\r\n\r\n    setView(view: CalendarView) {\r\n        this.view = view;\r\n    }\r\n\r\n    closeOpenMonthViewDay() {\r\n        this.activeDayIsOpen = false;\r\n    }\r\n\r\n    filterDate(datalist: Array<any>, isToggleAdmin: boolean = false, initialLoad: boolean = false) {\r\n\r\n        this.events = datalist.map(x => {\r\n            let totalColors = Object.keys(colors);\r\n\r\n            let sTime = format(parse(x.shift_Start, 'yyyy/MM/dd HH:mm', new Date()), 'HH:mm');\r\n            let eTime = format(parse(x.shift_End, 'yyyy/MM/dd HH:mm', new Date()), 'HH:mm');\r\n\r\n            return {\r\n                start: new Date(x.shift_Start),\r\n                end: new Date(x.shift_End),\r\n                title: `${x.serviceType} |  ${x.carerCode} | ${sTime} - ${eTime}`,\r\n                //actions: this.actions,\r\n                color: colors[totalColors[this.designateColor(x.status, x.type)]],\r\n                data: {\r\n                    client: x.clientCode,\r\n                    service: x.serviceType,\r\n                    carer: x.carerCode,\r\n                    startTime: sTime,\r\n                    endTime: eTime,\r\n                    notes: x.notes,\r\n                    recordNo: x.recordNo,\r\n                    type: x.type,\r\n                    billUnit: x.billUnit,\r\n                    billRate: x.billRate,\r\n                    status: x.status\r\n                }\r\n            }\r\n        }).filter(x => {\r\n            var type = !isToggleAdmin ? \"14\" : \"\"\r\n            if (x && x.data.type !== type)\r\n                return x;\r\n        });\r\n        this.refresh.next();\r\n    }\r\n\r\n    designateColor(_status: string, _type: string): number {\r\n        const type = parseInt(_type);\r\n        const status = parseInt(_status);\r\n\r\n        if (type == 1) {\r\n            return 0;\r\n        }\r\n\r\n        if (type > 1) {\r\n            if (status == 1) return 6;\r\n            if (status == 2) return 3;\r\n            if (status == 3 || status == 4) return 4;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    search(startDate: any, endDate: any) {\r\n\r\n        this.staffS.getroster({\r\n            RosterType: 'PORTAL CLIENT',\r\n            AccountNo: this.accountNo || this.globalS.decode().code,\r\n            StartDate: startDate,\r\n            EndDate: endDate\r\n        }).pipe(\r\n            takeUntil(this.unsubscribe$))\r\n            .subscribe(data => {\r\n                this.temporaryEvents = data;\r\n                this.filterDate(this.temporaryEvents, null, true);\r\n            });\r\n    }\r\n\r\n\r\n    dateChanged(event: any, view: string = \"\"): void {\r\n\r\n        if (this.view === 'month') {\r\n            const startDate = startOfMonth(event);\r\n            const endDate = endOfMonth(event);\r\n\r\n            this.search(\r\n                format(startDate, 'yyyy/MM/dd'),\r\n                format(endDate, 'yyyy/MM/dd')\r\n            );\r\n        }\r\n\r\n        if (this.view === 'week') {\r\n\r\n            const startDate = startOfWeek(event);\r\n            const endDate = endOfWeek(event);\r\n\r\n            this.search(\r\n                format(startDate, 'yyyy/MM/dd'),\r\n                format(endDate, 'yyyy/MM/dd')\r\n            );\r\n        }\r\n\r\n        if (this.view === 'day') {\r\n            const startDate = event;\r\n            this.minuteInterval = 5;\r\n            this.hourSegments = 12;\r\n\r\n            // this.search(\r\n            //   moment(startDate).format('YYYY/MM/DD'), \r\n            //   moment(startDate).format('YYYY/MM/DD')\r\n            // );\r\n        }\r\n    }\r\n\r\n    toggle(toggle: boolean) {\r\n        this.filterDate(this.temporaryEvents, toggle);\r\n    }\r\n\r\n    timeSegChange(num: number) {\r\n        if (num == 5) {\r\n            this.hourSegments = 12\r\n        }\r\n\r\n        if (num == 10) {\r\n            this.hourSegments = 6\r\n        }\r\n\r\n        if (num == 15) {\r\n            this.hourSegments = 4\r\n        }\r\n\r\n        if (num == 30) {\r\n            this.hourSegments = 2\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.refresh.next();\r\n        }, 10);\r\n    }\r\n}","<div nz-row>\r\n    <div nz-col nzSpan=\"22\" nzOffset=\"1\">\r\n        <div class=\"row text-center\">\r\n            <div class=\"col-md-4\">\r\n                <div class=\"btn-group\">\r\n                    <div class=\"btn btn-primary\" mwlCalendarPreviousView [view]=\"view\" [(viewDate)]=\"viewDate\"\r\n                        (viewDateChange)=\"dateChanged($event,view);activeDayIsOpen = false;closeOpenMonthViewDay()\">\r\n                        Previous\r\n                    </div>\r\n                    <div class=\"btn btn-outline-secondary\" mwlCalendarToday [(viewDate)]=\"viewDate\"\r\n                        (viewDateChange)=\"dateChanged($event,view);activeDayIsOpen = false;closeOpenMonthViewDay()\">\r\n                        Current {{ view | titlecase }}\r\n                    </div>\r\n                    <div class=\"btn btn-primary\" mwlCalendarNextView [view]=\"view\" [(viewDate)]=\"viewDate\"\r\n                        (viewDateChange)=\"dateChanged($event,view);activeDayIsOpen = false;closeOpenMonthViewDay()\">\r\n                        Next\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <h4>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h4>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <div class=\"btn-group\">\r\n                    <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Month);dateChanged(viewDate)\"\r\n                        [class.active]=\"view === CalendarView.Month\">\r\n                        Month\r\n                    </div>\r\n                    <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Week);dateChanged(viewDate)\"\r\n                        [class.active]=\"view === CalendarView.Week\">\r\n                        Week\r\n                    </div>\r\n                    <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Day);dateChanged(viewDate)\"\r\n                        [class.active]=\"view === CalendarView.Day\">\r\n                        Day\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br />\r\n\r\n        <div nz-row>\r\n            <div nz-col nzSpan=\"22\">\r\n                <nz-switch nzSize=\"small\" [ngModel]=\"toggleAdminFees\" (ngModelChange)=\"toggle($event)\"></nz-switch>\r\n                <label for=\"\" style=\"margin-left:10px\">Admin Fees</label>\r\n            </div>\r\n            <div class=\"clearfix\" *ngIf=\"view === CalendarView.Day\">\r\n                <nz-select nzAllowClear nzPlaceHolder=\"Interval\" [(ngModel)]=\"minuteInterval\"\r\n                    (ngModelChange)=\"timeSegChange($event)\">\r\n                    <nz-option *ngFor=\"let time of timeArray\" [nzLabel]=\"time + ' minutes'\" [nzValue]=\"time\">\r\n                    </nz-option>\r\n                </nz-select>\r\n            </div>\r\n        </div>\r\n        <div [ngSwitch]=\"view\">\r\n            <mwl-calendar-month-view *ngSwitchCase=\"CalendarView.Month\" [viewDate]=\"viewDate\" [events]=\"events\"\r\n                [refresh]=\"refresh\" [activeDayIsOpen]=\"activeDayIsOpen\" (dayClicked)=\"dayClicked($event.day)\"\r\n                (eventClicked)=\"handleEvent('Clicked', $event.event)\" (eventTimesChanged)=\"eventTimesChanged($event)\">\r\n            </mwl-calendar-month-view>\r\n            <mwl-calendar-week-view *ngSwitchCase=\"CalendarView.Week\" [viewDate]=\"viewDate\" [events]=\"events\"\r\n                [refresh]=\"refresh\" (eventClicked)=\"handleEvent('Clicked', $event.event)\"\r\n                (eventTimesChanged)=\"eventTimesChanged($event)\">\r\n            </mwl-calendar-week-view>\r\n            <mwl-calendar-day-view *ngSwitchCase=\"CalendarView.Day\" [viewDate]=\"viewDate\" [events]=\"events\"\r\n                [hourSegments]=\"hourSegments\" [dayStartHour]=\"6\" [hourSegmentHeight]=\"28\" [refresh]=\"refresh\"\r\n                (eventClicked)=\"handleEvent('Clicked', $event.event)\" (eventTimesChanged)=\"eventTimesChanged($event)\">\r\n            </mwl-calendar-day-view>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<nz-modal [(nzVisible)]=\"isVisible\" [nzTitle]=\"title\" (nzOnCancel)=\"handleCancel()\">\r\n    <div>\r\n        <div nz-row class=\"mrg-btm\">\r\n            <div nz-col nzSpan=\"8\" nzOffset=\"4\" class=\"item\">\r\n                <label for=\"\">Start Time</label>\r\n                <div>{{ rosterData?.startTime }}</div>\r\n            </div>\r\n            <div nz-col nzSpan=\"8\" class=\"item\">\r\n                <label for=\"\">End Time</label>\r\n                <div>{{ rosterData?.endTime }}</div>\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n            <div nz-col nzSpan=\"12\" class=\"item\">\r\n                <label for=\"\">Client Code</label>\r\n                <div>{{ rosterData?.client }}</div>\r\n            </div>\r\n            <div nz-col nzSpan=\"12\" class=\"item\">\r\n                <label for=\"\">Carer Code</label>\r\n                <div>{{ rosterData?.carer }}</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div nz-row class=\"mrg-btm\">\r\n            <div nz-col nzSpan=\"8\" class=\"item\">\r\n                <label for=\"\">Service Type</label>\r\n                <div>{{ rosterData?.service }}</div>\r\n            </div>\r\n        </div>\r\n        <div nz-row>\r\n            <div nz-col nzSpan=\"8\" class=\"item\">\r\n                <label for=\"\">Notes</label>\r\n                <div>{{ rosterData?.notes }}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n    </div>\r\n</nz-modal>","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { UploadChangeParam } from 'ng-zorro-antd/upload';\r\n\r\nimport { UploadXHRArgs } from 'ng-zorro-antd/upload';\r\nimport { HttpClient, HttpEvent, HttpEventType, HttpRequest, HttpResponse } from '@angular/common/http';\r\n\r\nimport { forkJoin } from 'rxjs';\r\nimport { TimeSheetService, GlobalService, UploadService } from '@services/index';\r\n\r\n@Component({\r\n    styles: [`\r\n        :host ::ng-deep .upload-list-inline .ant-upload-list-item {\r\n            float: left;\r\n            width: 200px;\r\n            margin-right: 8px;\r\n        }\r\n        .logo-group{\r\n            float: left;\r\n        }\r\n        .logo-group i{            \r\n            font-size: 2rem;\r\n            margin-right: 10px;\r\n        }\r\n        ul{\r\n            list-style:none;\r\n            padding:0;\r\n        }\r\n        li > div{\r\n            width: 100%;\r\n            display: inline-block;\r\n            border-bottom: 1px solid #d9d0d0;\r\n            padding:8px 0;\r\n        }\r\n        .file-info{\r\n            float:left;\r\n            line-height: 15px;\r\n        }\r\n        h5{\r\n            font-weight: 100;\r\n            margin:0;\r\n        }\r\n        .file-info span{\r\n            font-size: 10px;\r\n        }\r\n        .file-operations{\r\n            float:right;\r\n        }\r\n        .file-operations i{\r\n            margin-left:10px;\r\n            cursor:pointer;\r\n        }\r\n        .file-operations i:hover{\r\n            color: blue;\r\n            transform: scale(1.2);\r\n        }\r\n        nz-spin{\r\n            text-align:center;\r\n            margin-top:1rem;\r\n        }\r\n    `],\r\n    templateUrl: './document.html'\r\n})\r\n\r\n\r\nexport class DocumentClient implements OnInit, OnDestroy {\r\n\r\n    file: any;\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.file = {\r\n            view: 'recipient'\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(){\r\n\r\n    }\r\n\r\n}","<app-upload-file [(ngModel)]=\"file\"></app-upload-file>\r\n","\r\nimport { takeUntil, switchMap, distinctUntilChanged, debounceTime } from 'rxjs/operators';\r\nimport { AfterViewInit, Component, OnDestroy, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { TimeSheetService, GlobalService } from '@services/index';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport * as moment from 'moment';\r\nimport { NzTableComponent } from 'ng-zorro-antd/table';\r\n\r\nimport startOfMonth from 'date-fns/startOfMonth';\r\nimport lastDayOfMonth from 'date-fns/lastDayOfMonth';\r\nimport format from 'date-fns/format';\r\n\r\nexport interface VirtualDataInterface {\r\n    index: number;\r\n    name: string;\r\n    age: number;\r\n    address: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'history-client',\r\n    templateUrl: './history.html',\r\n    styles: [\r\n        `\r\n        \r\n\r\n        @media (max-width: 1000px)  {        \r\n\r\n\r\n            .web-first{\r\n                display:none;\r\n            }\r\n            .mobile-first{\r\n                display:block;\r\n            }\r\n\r\n            .stackview {\r\n                display: inline-block;\r\n                width: 100%;          \r\n            }        \r\n            \r\n\r\n        }\r\n\r\n        @media (min-width:1000px) { \r\n            .web-first{\r\n                display:block;\r\n            }\r\n            .mobile-first{\r\n                display:none;\r\n            }\r\n\r\n        }\r\n\r\n        \r\n        table thead tr th{\r\n            background: linear-gradient(to right, rgb(29, 166, 234), rgb(26, 172, 236));\r\n            color: #fff;\r\n            font-size: 12px;\r\n            font-weight: normal;\r\n        }\r\n        td:nth-child(8),td:nth-child(9) {\r\n            background:#e8ffe4;\r\n        }\r\n        td:nth-child(10){\r\n            background:#cfffc6;\r\n        }\r\n        clr-checkbox {\r\n            margin:0;\r\n        }\r\n        clr-checkbox >>> label::before{\r\n            background:#fff !important;\r\n            border:1px solid #757575 !important;\r\n        }\r\n\r\n        clr-checkbox >>> label::after{\r\n            border-left: 2px solid #2b62ff !important;\r\n            border-bottom: 2px solid #2b62ff !important;\r\n        }\r\n\r\n        tbody tr:hover{\r\n            background:#f1f1f1;\r\n        }\r\n        .loading{\r\n            text-align:center;\r\n            margin-top:1rem;\r\n        }\r\n        .no-margin{\r\n            margin:0;\r\n        }\r\n        clr-checkbox-wrapper >>> label{\r\n            display: inherit !important;\r\n        }\r\n        table thead tr th{\r\n            font-size:11px;\r\n        }\r\n        `\r\n    ]\r\n})\r\n\r\nexport class HistoryClient implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n    @ViewChild('virtualTable', { static: false }) nzTableComponent: NzTableComponent;\r\n    private destroy$ = new Subject();\r\n\r\n    listOfData: VirtualDataInterface[] = [];\r\n\r\n    scrollToIndex(index: number): void {\r\n        this.nzTableComponent.cdkVirtualScrollViewport.scrollToIndex(index);\r\n    }\r\n\r\n    trackByIndex(_: number, data: VirtualDataInterface): number {\r\n        return data.index;\r\n    }\r\n\r\n    @Input() id;\r\n\r\n    dateFormat: string = 'MMM dd yyyy';\r\n\r\n    private accountNo: string;\r\n    private unsubscribe$ = new Subject()\r\n\r\n    dateStream = new Subject<any>();\r\n\r\n    loading: boolean;\r\n    timesheets: Array<any>;\r\n    sDate: any;\r\n    eDate: any;\r\n\r\n    dateRange: Array<any> = [];\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private globalS: GlobalService\r\n    ) {\r\n        this.dateStream.pipe(\r\n            debounceTime(500),\r\n            distinctUntilChanged(),\r\n            switchMap((x: any) => {\r\n                this.loading = true;\r\n                return this.getTimeSheet({\r\n                    AccountNo: this.accountNo,\r\n                    personType: 'Recipient',\r\n                    startDate: format(this.dateRange[0], 'yyyy/MM/dd'),\r\n                    endDate: format(this.dateRange[1], 'yyyy/MM/dd')\r\n                })\r\n            }),\r\n            takeUntil(this.unsubscribe$))\r\n            .subscribe(data => {\r\n                this.loading = false;\r\n                this.timesheets = data;\r\n            })\r\n\r\n    }\r\n\r\n    ngOnInit() {    \r\n        this.accountNo = this.id || this.globalS.decode().code;\r\n        this.dateRange[0] = startOfMonth(new Date());\r\n        this.dateRange[1] = lastDayOfMonth(new Date());\r\n\r\n        this.dateStream.next();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.nzTableComponent.cdkVirtualScrollViewport.scrolledIndexChange\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe((data: number) => {\r\n                //console.log('scroll index to', data);\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unsubscribe$.next();\r\n        this.unsubscribe$.complete();\r\n\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    getTimeSheet(data: Dto.GetTimesheet) {\r\n        this.timesheets = [];\r\n        return this.timeS.gettimesheets({\r\n            AccountNo: data.AccountNo,\r\n            personType: data.personType,\r\n            startDate: data.startDate,\r\n            endDate: data.endDate\r\n        })\r\n    }\r\n}\r\n","<div>\r\n    <div nz-row>\r\n        <nz-form-item>\r\n            <nz-form-control [nzSpan]=\"14\" nzErrorTip=\"The input is not valid E-mail!\">\r\n                <nz-range-picker [nzFormat]=\"dateFormat\" [(ngModel)]=\"dateRange\"\r\n                    (ngModelChange)=\"dateStream.next($event)\">\r\n                </nz-range-picker>\r\n            </nz-form-control>\r\n        </nz-form-item>\r\n    </div>\r\n    <div nz-row>\r\n        <nz-table #virtualTable nzVirtualScroll [nzSize]=\"'middle'\" [nzVirtualItemSize]=\"20\" [nzData]=\"timesheets\"\r\n            [nzLoading]=\"loading\" [nzVirtualForTrackBy]=\"trackByIndex\" [nzFrontPagination]=\"false\" [nzSize]=\"'middle'\"\r\n            [nzShowPagination]=\"false\" [nzScroll]=\"{ x: '1700px', y: '350px' }\">\r\n            <thead>\r\n                <tr>\r\n                    <th nzWidth=\"100px\" nzLeft=\"0px\">Shift No</th>\r\n                    <th nzWidth=\"120px\" nzLeft=\"100px\">Date</th>\r\n                    <th nzWidth=\"90px\">Start Time</th>\r\n                    <th nzWidth=\"60px\">Duration</th>\r\n                    <th nzWidth=\"110px\">Provider</th>\r\n                    <th nzWidth=\"280px\">Program</th>\r\n                    <th nzWidth=\"100px\">Activity</th>\r\n                    <th nzWidth=\"100px\">Bill Quantity</th>\r\n                    <th nzWidth=\"100px\">Bill Rate</th>\r\n                    <th nzWidth=\"100px\">Total Billing</th>\r\n                    <th nzWidth=\"100px\">App</th>\r\n                    <th nzWidth=\"100px\">Bill To</th>\r\n                    <th nzWidth=\"200px\" nzRight=\"0px\">Notes</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <ng-template nz-virtual-scroll let-data let-index=\"index\">\r\n                    <tr>\r\n                        <td nzLeft=\"0px\">{{ data.shiftbookNo }}</td>\r\n                        <td nzLeft=\"100px\">{{ data.activityDate | date: 'dd/MM/yyyy' }}</td>\r\n                        <td>{{ data.activity_Time.start_time | date: 'HH:mm' }}</td>\r\n                        <td>{{ data.activity_Time.calculated_Duration }}</td>\r\n                        <td>{{ data.carer_Code }}</td>\r\n                        <td>{{ data.program.title }}</td>\r\n                        <td>{{ data.activity.name }}</td>\r\n                        <td>{{ data.bill.quantity | number: '1.2-2' }}</td>\r\n                        <td>{{ data.bill.bill_Rate | currency: 'USD' }}</td>\r\n                        <td>{{ (data.bill.quantity * data.bill.bill_Rate) | currency: 'USD' }}</td>\r\n                        <td>{{ data.address }}</td>\r\n                        <td>{{ data.billedTo.accountNo }}</td>\r\n                        <td nzRight=\"0px\">{{ data.note }}</td>\r\n                    </tr>\r\n                </ng-template>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { GlobalService, SettingsService } from '@services/index';\r\n\r\n@Component({\r\n    selector: '',\r\n    templateUrl: './home.html',\r\n    styles: [\r\n        `\r\n    .logo {\r\n        height: 2rem;\r\n        background: url(../../../assets/logo/image2.png) no-repeat;\r\n        background-size: 64%;\r\n        margin: 7px 24px;\r\n        width: 10rem;\r\n    }\r\n    \r\n    nz-content {\r\n        margin: 0 16px;\r\n    }\r\n\r\n    nz-breadcrumb {\r\n        margin: 16px 0;\r\n    }\r\n\r\n    .inner-content {\r\n        padding: 12px;\r\n        background: #fff;\r\n        min-height: 360px;    \r\n    }\r\n\r\n    nz-footer {\r\n        text-align: center;\r\n    }\r\n\r\n    nz-layout{\r\n        height:100vh;\r\n    }\r\n\r\n\r\n\r\n    .nz-avatar-menu{\r\n        display: inline-block;\r\n        margin-right: 1rem;\r\n    }\r\n    nz-avatar{\r\n        cursor:pointer;\r\n        background-color:#87d068;\r\n    }\r\n    .dropdown{\r\n        position: absolute;\r\n        right: 7px;\r\n        width: 8rem;\r\n        background: #fff;\r\n        border: 1px solid #6161611a;\r\n        z-index: 10;\r\n    }\r\n    .dropdown ul{\r\n        list-style:none;\r\n        padding:0;\r\n        margin:0;\r\n    }\r\n    .dropdown ul li{\r\n        line-height:2.5rem;\r\n        cursor:pointer;\r\n        text-align:center;\r\n    }\r\n    .dropdown ul li i{\r\n        margin-right:10px;\r\n    }\r\n    .dropdown ul li:hover{\r\n        background: #f9f9f9;\r\n    }\r\n    .menu-button{\r\n        text-align:right;\r\n    }\r\n\r\n    nz-content {\r\n        background: #85B9D5;\r\n        margin: 6px;\r\n    }\r\n\r\n    nz-layout{\r\n        background: #85B9D5;\r\n        height:100vh;\r\n    }\r\n\r\n    ul.main-list{\r\n        background:#004165 !important;\r\n    }\r\n    nz-sider{\r\n        background:#004165;\r\n    }\r\n    .ant-menu-submenu-popup.ant-menu-dark .ant-menu-item-selected, .ant-menu.ant-menu-dark .ant-menu-item-selected{\r\n        background-color: #85B9D5;\r\n        color: #004165;\r\n    }\r\n    .ant-menu-submenu-popup.ant-menu-dark .ant-menu-item-selected, .ant-menu.ant-menu-dark .ant-menu-item-selected i{\r\n        color: #004165;\r\n    }\r\n    .ant-menu-dark, .ant-menu-dark .ant-menu-sub{\r\n        background:#004165;\r\n    }\r\n    nz-header {\r\n        padding: 0;\r\n    }\r\n        `\r\n    ]\r\n})\r\n\r\nexport class HomeClient implements OnInit {\r\n    isCollapsed = false;\r\n    isVisible: boolean = false;\r\n\r\n    _settings: SettingsService;\r\n    constructor(\r\n        private globalS: GlobalService,\r\n        private settingS: SettingsService\r\n    ) {\r\n        \r\n    }\r\n\r\n    ngOnInit(): void{\r\n        this._settings = this.settingS;\r\n    }\r\n    \r\n    logout() {\r\n        this.globalS.logout();\r\n    }\r\n\r\n    onClickOutside(event: Object) {\r\n        if (event && event['value'] === true) {\r\n            this.isVisible = false;\r\n        }\r\n    }\r\n}","<nz-layout>\r\n    <nz-sider \r\n        nzCollapsible\r\n        [(nzCollapsed)]=\"isCollapsed\"\r\n        [nzBreakpoint]=\"'lg'\"\r\n        [nzCollapsedWidth]=\"0\"\r\n        [nzZeroTrigger]=\"zeroTrigger\">\r\n        <div class=\"logo\"></div>\r\n        <ul nz-menu nzTheme=\"dark\" nzMode=\"inline\" class=\"main-list\"[nzInlineCollapsed]=\"isCollapsed\">\r\n            <li nz-menu-item routerLink=\"/client/profile\" routerLinkActive=\"ant-menu-item-selected\">\r\n                <i nz-icon nzType=\"user\"></i>\r\n                <span>Profile</span>\r\n            </li>\r\n            <li nz-menu-item routerLink=\"/client/notes\" routerLinkActive=\"ant-menu-item-selected\">\r\n                <i nz-icon nzType=\"read\"></i>\r\n                <span>Notes</span>\r\n            </li>\r\n            <li nz-menu-item routerLink=\"/client/package\" routerLinkActive=\"ant-menu-item-selected\">\r\n                <i nz-icon nzType=\"gift\"></i>\r\n                <span>Package</span>\r\n            </li>\r\n            <li *ngIf=\"_settings?.ALLOWBOOKING()\" nz-menu-item routerLink=\"/client/booking\" routerLinkActive=\"ant-menu-item-selected\">\r\n                <i nz-icon nzType=\"book\"></i>\r\n                <span>Booking</span>\r\n            </li>\r\n            <li nz-menu-item routerLink=\"/client/calendar\" routerLinkActive=\"ant-menu-item-selected\">\r\n                <i nz-icon nzType=\"calendar\"></i>\r\n                <span>Calendar</span>\r\n            </li>\r\n            <li nz-menu-item routerLink=\"/client/history\" routerLinkActive=\"ant-menu-item-selected\">\r\n                <i nz-icon nzType=\"history\"></i>\r\n                <span>History</span>\r\n            </li>\r\n            <li nz-menu-item routerLink=\"/client/preferences\" routerLinkActive=\"ant-menu-item-selected\">\r\n                <i nz-icon nzType=\"like\"></i>\r\n                <span>Preferences</span>\r\n            </li>\r\n            <li nz-menu-item routerLink=\"/client/manage-services\" routerLinkActive=\"ant-menu-item-selected\">\r\n                <i nz-icon nzType=\"security-scan\"></i>\r\n                <span>Manage Services</span>\r\n            </li>\r\n            <li nz-menu-item routerLink=\"/client/document\" routerLinkActive=\"ant-menu-item-selected\">\r\n                <i nz-icon nzType=\"file\"></i>\r\n                <span>Document</span>\r\n            </li>\r\n        </ul>\r\n    </nz-sider>\r\n    <nz-layout>\r\n        <nz-header>\r\n            <app-header-nav></app-header-nav>\r\n        </nz-header>\r\n        <nz-content>\r\n            <!-- <app-breadcrumbs></app-breadcrumbs> -->\r\n            <div class=\"inner-content\">\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n        </nz-content>\r\n        <!-- <nz-footer>Put footer here</nz-footer> -->\r\n    </nz-layout>\r\n</nz-layout>\r\n\r\n<ng-template #zeroTrigger>\r\n    <i nz-icon nzType=\"menu-fold\" nzTheme=\"outline\"></i>\r\n</ng-template>","export * from './home';\r\nexport * from './notes';\r\nexport * from './history';\r\nexport * from './booking';\r\nexport * from './document';\r\nexport * from './package';\r\nexport * from './preferences';\r\nexport * from './shift';\r\nexport * from './calendar';\r\nexport * from './shift';\r\nexport * from './profile'","import { Component, OnInit } from '@angular/core';\r\nimport { GlobalService, ClientService } from '@services/index';\r\nimport { takeUntil, switchMap, distinctUntilChanged, debounceTime } from 'rxjs/operators';\r\n\r\nimport { Subject, EMPTY } from 'rxjs';\r\nimport * as moment from 'moment';\r\n\r\nimport startOfMonth from 'date-fns/startOfMonth';\r\nimport lastDayOfMonth from 'date-fns/lastDayOfMonth';\r\n\r\n@Component({\r\n    templateUrl: './notes.html',\r\n    styles: [`\r\n    .form-group{\r\n        margin-top:20px;\r\n    }\r\n    .date{\r\n        font-size:14px;\r\n        font-weight:500;\r\n        padding-left:10px;\r\n        color: #4d99d0;\r\n    }\r\n    tbody{\r\n        font-size: 12px;\r\n    }\r\n    .even{\r\n        background: #e4f0ff;\r\n    }\r\n    .package-table th{\r\n        font-size:15px;\r\n        padding: 5px !important;\r\n    }\r\n\r\n    nz-empty{\r\n        margin-top:2rem;\r\n    }\r\n    tr td{\r\n        border-bottom: 1px solid #a5a5a5;\r\n    }\r\n    `]\r\n})\r\n\r\nexport class NotesClient implements OnInit {\r\n\r\n    dateFormat: string = 'MMM dd yyyy';\r\n\r\n    dateChangeEvent = new Subject<any>();\r\n    OPdateChangeEvent = new Subject<any>();\r\n\r\n    view = new Subject<number>();\r\n    dateStream = new Subject<any>();\r\n\r\n    viewNo: number = 1;\r\n\r\n    private token: any;\r\n    user: any = \"\";\r\n    accountNo: string;\r\n\r\n    loading: boolean = false;\r\n    tableData: Array<any>;\r\n\r\n    sDate: any;\r\n    eDate: any;\r\n\r\n    dateRange: Array<any> = [];\r\n\r\n    OPDateRange: Array<any> = []\r\n\r\n    constructor(\r\n        private globalS: GlobalService,\r\n        private clientS: ClientService\r\n    ) {\r\n\r\n        this.dateChangeEvent.pipe(\r\n            switchMap((x: Array<any>) => {\r\n                if (x.length < 2) {\r\n                    return EMPTY;\r\n                }\r\n                return this.getShiftNotes(x);\r\n            })\r\n        ).subscribe(date => {\r\n            this.loading = false;\r\n            this.tableData = date;\r\n        });\r\n\r\n        this.OPdateChangeEvent.pipe(\r\n            switchMap((x: Array<any>) => {\r\n                if (x.length < 2) {\r\n                    return EMPTY;\r\n                }\r\n                return this.getOPNotesWithDates(x, this.token.uniqueID);\r\n            })\r\n        ).subscribe(data => {\r\n            this.loading = false;\r\n\r\n            if (data)\r\n                this.tableData = data.list;\r\n        });\r\n\r\n        this.view.subscribe(view => {\r\n            this.viewNo = view;\r\n            this.tableData = [];\r\n\r\n            if (this.viewNo == 1) {\r\n                // this.getOPNotes(this.token.uniqueID);\r\n                this.OPdateChangeEvent.next(this.OPDateRange);\r\n            }\r\n                \r\n            if (this.viewNo == 2)\r\n                this.dateChangeEvent.next(this.dateRange);\r\n        });\r\n\r\n        // this.dateStream.pipe(\r\n        //     debounceTime(100),\r\n        //     switchMap((x: any) => {\r\n        //         this.tableData = []\r\n        //         this.loading = true;\r\n        //         return this.getShiftNotes();\r\n        //     }))\r\n        //     .subscribe(data => {\r\n        //         this.loading = false;\r\n        //         this.tableData = data;\r\n        //     })\r\n    }\r\n\r\n    ngOnInit() {\r\n        var token = this.globalS.decode();\r\n        this.accountNo = token.code;\r\n        this.token = token;        \r\n\r\n        this.dateRange[0] = startOfMonth(new Date());\r\n        this.dateRange[1] = lastDayOfMonth(new Date());\r\n\r\n        this.OPDateRange[0] = startOfMonth(new Date());\r\n        this.OPDateRange[1] = lastDayOfMonth(new Date());\r\n\r\n        this.view.next(1);\r\n    }\r\n\r\n    isEven(index: number) {\r\n        return index % 2 == 0;\r\n    }\r\n\r\n    getOPNotes(uniqueId: string) {\r\n        this.loading = true;\r\n\r\n        this.clientS.getopnotes(uniqueId).subscribe(data => {\r\n            if (data)\r\n                this.tableData = data.list;\r\n\r\n            this.loading = false;\r\n        });\r\n    }\r\n\r\n    getOPNotesWithDates(dates: Array<any> = null, uniqueId: any) {\r\n        this.loading = true;\r\n        return this.clientS.getopnoteswithdate({\r\n            client: uniqueId,\r\n            startDate: moment(dates[0]).format('YYYY/MM/DD'),\r\n            endDate: moment(dates[1]).format('YYYY/MM/DD')\r\n        });\r\n    }\r\n\r\n    getShiftNotes(dates: Array<any> = null) {\r\n        this.loading = true;\r\n        return this.clientS.getservicenotes({\r\n            client: this.accountNo,\r\n            startDate: moment(dates[0]).format('YYYY/MM/DD'),\r\n            endDate: moment(dates[1]).format('YYYY/MM/DD')\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    sortName: string | null = null;\r\n    sortValue: string | null = null;\r\n    searchAddress: string;\r\n    listOfName = [{ text: 'Joe', value: 'Joe' }, { text: 'Jim', value: 'Jim' }];\r\n    listOfAddress = [{ text: 'London', value: 'London' }, { text: 'Sidney', value: 'Sidney' }];\r\n    listOfSearchName: string[] = [];\r\n    listOfData: Array<{ name: string; age: number; address: string;[key: string]: string | number }> = [\r\n        {\r\n            name: 'John Brown',\r\n            age: 32,\r\n            address: 'New York No. 1 Lake Park'\r\n        },\r\n        {\r\n            name: 'Jim Green',\r\n            age: 42,\r\n            address: 'London No. 1 Lake Park'\r\n        },\r\n        {\r\n            name: 'Joe Black',\r\n            age: 32,\r\n            address: 'Sidney No. 1 Lake Park'\r\n        },\r\n        {\r\n            name: 'Jim Red',\r\n            age: 32,\r\n            address: 'London No. 2 Lake Park'\r\n        }\r\n    ];\r\n\r\n    listOfDisplayData: Array<{ name: string; age: number; address: string;[key: string]: string | number }> = [\r\n        ...this.listOfData\r\n    ];\r\n\r\n    sort(sort: { key: string; value: string }): void {\r\n        this.sortName = sort.key;\r\n        this.sortValue = sort.value;\r\n        this.search();\r\n    }\r\n\r\n    filter(listOfSearchName: string[], searchAddress: string): void {\r\n        this.listOfSearchName = listOfSearchName;\r\n        this.searchAddress = searchAddress;\r\n        this.search();\r\n    }\r\n\r\n    search(): void {\r\n        /** filter data **/\r\n        const filterFunc = (item: { name: string; age: number; address: string }) =>\r\n            (this.searchAddress ? item.address.indexOf(this.searchAddress) !== -1 : true) &&\r\n            (this.listOfSearchName.length ? this.listOfSearchName.some(name => item.name.indexOf(name) !== -1) : true);\r\n\r\n        const data = this.tableData.filter(item => filterFunc(item));\r\n\r\n        /** sort data **/\r\n        if (this.sortName && this.sortValue) {\r\n            this.tableData = data.sort((a, b) =>\r\n                this.sortValue === 'ascend'\r\n                    ? a[this.sortName!] > b[this.sortName!]\r\n                        ? 1\r\n                        : -1\r\n                    : b[this.sortName!] > a[this.sortName!]\r\n                        ? 1\r\n                        : -1\r\n            );\r\n        } else {\r\n            this.tableData = data;\r\n        }\r\n    }\r\n\r\n    gwapo() {\r\n        console.log('gwapo')\r\n    }\r\n}","<div class=\"col-md-12\">\r\n    <div class=\"tabs-vertical\">\r\n\r\n        <nz-tabset>\r\n\r\n            <nz-tab nzTitle=\"OP Notes\" (nzClick)=\"view.next(1)\">\r\n                <div nz-col nzSpan=\"24\">\r\n\r\n                    <nz-form-item>\r\n                        <nz-form-control [nzSpan]=\"14\" nzErrorTip=\"The input is not valid E-mail!\">\r\n                            <nz-range-picker [nzFormat]=\"dateFormat\" [(ngModel)]=\"OPDateRange\"\r\n                                (ngModelChange)=\"OPdateChangeEvent.next($event)\"></nz-range-picker>\r\n                        </nz-form-control>\r\n                    </nz-form-item>\r\n\r\n                    <nz-table #filterTable [nzData]=\"tableData\" nzSize=\"small\" [nzFrontPagination]=\"false\">\r\n                        <thead (nzSortChange)=\"sort($event)\" nzSingleSort>\r\n                            <tr>\r\n                                <th nzShowSort nzSortKey=\"detail\">Details</th>\r\n                                <th nzShowSort nzSortKey=\"detailDate\">Date</th>\r\n                                <th nzShowSort nzSortKey=\"creator\">Creator</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let data of tableData\">\r\n                                <td>{{ data.detail || '-' | uppercase }}</td>\r\n                                <td>{{ data.detailDate | date: 'dd/MM/y' }}</td>\r\n                                <td>{{ data.creator || '-' | uppercase }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </nz-table>\r\n                </div>\r\n            </nz-tab>\r\n\r\n\r\n            <nz-tab nzTitle=\"Shift Notes\" (nzClick)=\"view.next(2)\">\r\n                <div nz-col nzSpan=\"24\">\r\n\r\n                    <nz-form-item>\r\n                        <nz-form-control [nzSpan]=\"14\" nzErrorTip=\"The input is not valid E-mail!\">\r\n                            <nz-range-picker [nzFormat]=\"dateFormat\" [(ngModel)]=\"dateRange\"\r\n                                (ngModelChange)=\"dateChangeEvent.next($event)\"></nz-range-picker>\r\n                        </nz-form-control>\r\n                    </nz-form-item>\r\n\r\n                    <nz-table #rowSelectionTable [nzData]=\"tableData\" [nzLoading]=\"loading\" nzSize=\"small\"\r\n                        [nzFrontPagination]=\"false\" [nzShowPagination]=\"false\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th nzWidth=\"150px\">Date</th>\r\n                                <th nzWidth=\"150px\">Start Time</th>\r\n                                <th nzWidth=\"150px\">Service Type</th>\r\n                                <th>Notes</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <ng-container *ngFor=\"let data of rowSelectionTable.data; let i = index\">\r\n                                <tr [class.even]=\"isEven(i)\">\r\n                                    <td class=\"left\"><span class=\"date\">{{ data.key  }}</span></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                </tr>\r\n                                <tr *ngFor=\"let val of data.value\" [class.even]=\"isEven(i)\">\r\n                                    <td></td>\r\n                                    <td class=\"align-left\">{{ val.StartTime }}</td>\r\n                                    <td class=\"align-left\">{{ val.ServiceType }}</td>\r\n                                    <td class=\"align-left\">{{ val.Note || '-' }}</td>\r\n                                </tr>\r\n                            </ng-container>\r\n                        </tbody>\r\n                    </nz-table>\r\n                </div>\r\n            </nz-tab>\r\n        </nz-tabset>\r\n\r\n        <!-- <ul id=\"demoTabs\" class=\"nav\" role=\"tablist\">\r\n            <li role=\"presentation\" class=\"nav-item\">\r\n                <button (click)=\"view.next(1)\" id=\"tab1\" class=\"btn btn-link nav-link\" [class.active]=\"viewNo == 1\"\r\n                    aria-controls=\"panel1\" aria-selected=\"false\" type=\"button\">OP Notes</button>\r\n            </li>\r\n            <li role=\"presentation\" class=\"nav-item\">\r\n                <button (click)=\"view.next(2)\" id=\"tab2\" class=\"btn btn-link nav-link\" [class.active]=\"viewNo == 2\"\r\n                    aria-controls=\"panel2\" aria-selected=\"true\" type=\"button\">Shift Notes</button>\r\n            </li>\r\n        </ul> -->\r\n        <!-- \r\n        <section id=\"panel1\" role=\"tabpanel\" aria-labelledby=\"tab1\" [attr.aria-hidden]=\"!(viewNo == 1)\">\r\n            <div class=\"col-md-6\">\r\n                <table class=\"table table-compact table-noborder package-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th class=\"align-left\">Details</th>\r\n                            <th class=\"align-left\">Date</th>\r\n                            <th class=\"align-left\">Creator</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let op of tableData\">\r\n                            <td class=\"left\">{{ op.detail  }}</td>\r\n                            <td class=\"align-left\">{{ op.detailDate | date: 'dd/MM/y' }}</td>\r\n                            <td class=\"align-left\">{{ op.creator || '-' | uppercase  }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <intake-no-data [data]=\"tableData?.length\" [loading]=\"loading\"></intake-no-data>\r\n            </div>\r\n        </section>\r\n\r\n\r\n        <section id=\"panel2\" role=\"tabpanel\" aria-labelledby=\"tab2\" [attr.aria-hidden]=\"!(viewNo == 2)\">\r\n\r\n            <div class=\"col-md-2 col-xs-6 col-fl\">\r\n                <div class=\"form-group\">\r\n                    <label>Start Date *</label>\r\n                    <datepicker [(ngModel)]=\"sDate\" (ngModelChange)=\"dateStream.next($event)\"></datepicker>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-2 col-xs-6 col-fl\">\r\n                <div class=\"form-group\">\r\n                    <label>End Date *</label>\r\n                    <datepicker [(ngModel)]=\"eDate\" (ngModelChange)=\"dateStream.next($event)\"></datepicker>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-12\">\r\n                <table class=\"table table-compact table-noborder package-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width:5rem\" class=\"align-left\">Date</th>\r\n                            <th style=\"width:4rem\" class=\"align-left\">Start Time</th>\r\n                            <th style=\"width:6rem\" class=\"align-left\">Service Type</th>\r\n                            <th style=\"width:6rem\" class=\"align-left\">Notes</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-container *ngFor=\"let data of tableData let i = index\">\r\n                            <tr [class.even]=\"isEven(i)\">\r\n                                <td class=\"left\"><span class=\"date\">{{ data.key  }}</span></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr *ngFor=\"let val of data.value\" [class.even]=\"isEven(i)\">\r\n                                <td></td>\r\n                                <td class=\"align-left\">{{ val.StartTime }}</td>\r\n                                <td class=\"align-left\">{{ val.ServiceType }}</td>\r\n                                <td class=\"align-left\">{{ val.Note || '-' }}</td>\r\n                            </tr>\r\n                        </ng-container>\r\n                    </tbody>\r\n                </table>\r\n                <intake-no-data [data]=\"tableData?.length\" [loading]=\"loading\"></intake-no-data>\r\n            </div>\r\n        </section> -->\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { ClientService, GlobalService } from '@services/index';\r\nimport { MonthPeriodFilter } from '@pipes/pipes';\r\nimport { APP_BASE_HREF, Location, PlatformLocation } from '@angular/common';\r\n\r\nimport { Subscription, Subject, Observable } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { switchMap, distinctUntilChanged, debounceTime, mergeMap, map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'package-client',\r\n    styles: [`\r\n        nz-select, nz-date-picker {\r\n            width: 250px;\r\n        }\r\n        label{\r\n            display:block;\r\n            margin-bottom:3px;\r\n            font-weight:600;\r\n        }\r\n        .notice{\r\n            font-size: 11px;\r\n            padding: 5px;\r\n            text-align: justify;\r\n        }\r\n        .total{\r\n            background: #d2ffcc;\r\n        }\r\n        nz-descriptions{\r\n            width:17rem;\r\n        }\r\n        nz-descriptions >>> table > tbody > tr:first-child > td:first-child {\r\n            background: #adffb7;\r\n        }\r\n        nz-descriptions >>> table > tbody > tr:nth-child(4) > td:first-child {\r\n            background: #adffb7;\r\n        }\r\n        a.print{\r\n            float:right;\r\n        }\r\n    `],\r\n    templateUrl: './package.html',\r\n    providers: [MonthPeriodFilter]\r\n})\r\n\r\n\r\nexport class PackageClient implements OnInit, OnDestroy {\r\n\r\n    @Input() id: any;\r\n    @Input() MINUS_MONTH: number = 0;\r\n\r\n    private dateResult$: Observable<any>;\r\n    private programResult$: Observable<any>;\r\n\r\n    private dateStream = new Subject<string>();\r\n    private programStream = new Subject<string>();\r\n    private subscriptions$: Subscription[] = [];\r\n\r\n    openB: any;\r\n    closeB: any;\r\n    continB: any;\r\n\r\n    client: any;\r\n    user: any;\r\n\r\n    loading: boolean = false;\r\n    program: any;\r\n    programs: Array<string> = [];\r\n\r\n    date: any;\r\n    dataPackage: any;\r\n\r\n    selectedValue = null;\r\n    table: Array<any>;\r\n\r\n    URL: string = '';\r\n\r\n    constructor(\r\n        private clientS: ClientService,\r\n        private globalS: GlobalService,\r\n        private monthPeriodFilter: MonthPeriodFilter,\r\n        private platformLocation: PlatformLocation\r\n    ) {\r\n        \r\n\r\n        this.dateResult$ = this.dateStream.pipe(\r\n            debounceTime(500),\r\n            distinctUntilChanged(),\r\n            switchMap((date: any) => {\r\n                let data: Dto.GetPackage = {\r\n                    Code: this.client,\r\n                    PCode: this.program,\r\n                    Date: moment(this.date).format('YYYY/MM/DD')\r\n                }\r\n                this.URL = '';\r\n                this.dataPackage = data;\r\n                return this.getPackages(data);\r\n            }));\r\n\r\n        this.programResult$ = this.programStream.pipe(\r\n            debounceTime(500),\r\n            distinctUntilChanged(),\r\n            switchMap((program: any) => {\r\n                let data: Dto.GetPackage = {\r\n                    Code: this.client,\r\n                    PCode: this.program,\r\n                    Date: moment(this.date).format('YYYY/MM/DD')\r\n                }\r\n                this.URL = '';\r\n                this.dataPackage = data;\r\n                return this.getPackages(data);\r\n            }))\r\n\r\n        this.subscriptions$.push(this.dateResult$.pipe(\r\n            mergeMap(x => {\r\n                return this.clientS\r\n                    .getbalances(this.dataPackage).pipe(\r\n                        map(data => {\r\n                            let balances = data;\r\n                            x.balances = balances;\r\n                            return x;\r\n                        }))\r\n            }))\r\n            .subscribe(data => {\r\n\r\n                this.saveFundingInLocalStorage(data);\r\n\r\n                this.loading = false;\r\n                this.computeBalances(data);\r\n                this.table = data.list;\r\n\r\n                this.generateURL();\r\n            }));\r\n\r\n        this.subscriptions$.push(this.programResult$.pipe(\r\n            mergeMap(x => {\r\n                return this.clientS.getbalances(this.dataPackage).pipe(\r\n                    map(data => {\r\n                        let balances = data;\r\n                        x.balances = balances;\r\n                        return x;\r\n                    }))\r\n            }))\r\n            .subscribe(data => {\r\n\r\n                this.saveFundingInLocalStorage(data);\r\n\r\n                this.loading = false;\r\n                this.computeBalances(data);\r\n                this.table = data.list;\r\n                \r\n                this.generateURL();\r\n            }));\r\n    }\r\n\r\n    generateURL() {\r\n        var location = ((this.platformLocation as any).location);\r\n        if (location && location.pathname) {\r\n            this.URL = `${(this.platformLocation as any).location.origin}${location.pathname}StaticFiles/package.html`;\r\n        } else {\r\n            this.URL = `${(this.platformLocation as any).location.origin}/StaticFiles/package.html`;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.client = this.id || this.globalS.decode().code;\r\n\r\n        this.clientS.getprofile(this.client).subscribe(data => {\r\n            this.user = data;\r\n        })\r\n\r\n        this.clientS.getactiveprogram({ IsActive: true, Code: this.client })\r\n            .subscribe(data => {\r\n                this.loading = false;\r\n\r\n                this.programs = data.data\r\n                this.program = this.programs[0];\r\n                this.date = moment().subtract(this.MINUS_MONTH, 'months').format('YYYY-MM-DD')\r\n                this.dateStream.next();\r\n            })\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions$.forEach(x => {\r\n            x.unsubscribe();\r\n        });\r\n\r\n        this.programStream.next();\r\n        this.dateStream.next();\r\n\r\n        this.programStream.complete();\r\n        this.dateStream.complete();\r\n    }\r\n\r\n    saveFundingInLocalStorage(data: any) {\r\n        let packageObject = {\r\n            data: data,\r\n            recipient: `${this.user.title} ${this.user.firstName}  ${this.user.surnameOrg}`,\r\n            accountNo: `${this.user.accountNo}`,\r\n            period: this.monthPeriodFilter.transform(this.date),\r\n            openingBalance: this.openB,\r\n            closingBalance: this.closeB,\r\n            contingency: this.continB,\r\n            totalBalance: this.closeB + this.continB\r\n        }\r\n\r\n        this.globalS.packageStatement = JSON.stringify(packageObject);\r\n    }\r\n\r\n    programChanges(program: any) {\r\n        this.loading = false;\r\n        this.programStream.next(program);\r\n    }\r\n\r\n    dateChanges(date: any) {        \r\n        this.loading = true;\r\n        this.dateStream.next(date);\r\n    }\r\n\r\n    getPackages(data: Dto.GetPackage) {\r\n        return this.clientS.getpackages(data);\r\n    }\r\n\r\n    computeBalances(data: any): void {\r\n        if (data && data.list && (data.list).length == 0) {\r\n            this.openB = 0;\r\n            this.closeB = 0;\r\n            this.continB = 0;\r\n            return;\r\n        }\r\n        this.openB = (data.balances.list).length > 0 ? this.getOpeningBalance(data.balances.list) : 0;\r\n        this.closeB = (data.balances.list).length > 0 ? this.getClosingBalance(data.balances.list) : 0;\r\n        this.continB = (data.balances.list).length > 0 ? this.getContingencyBalance(data.balances.list) : 0;\r\n    }\r\n\r\n    getContingencyBalance(data: any) {\r\n        let sum = 0;\r\n        data.forEach(el => {\r\n            sum = sum + el.bankedContingency\r\n        });\r\n        return sum\r\n    }\r\n\r\n    getClosingBalance(date: any): any {\r\n        if (date.length == 2) {\r\n            let maxDate = date[0];\r\n            date.forEach(data => {\r\n                if (new Date(data.periodEnd) > new Date(maxDate.periodEnd))\r\n                    maxDate = data;\r\n            });\r\n            return maxDate.balance;\r\n        }\r\n    }\r\n\r\n    getOpeningBalance(date: any): any {\r\n        if (date.length == 2) {\r\n            let minDate = date[0];\r\n            date.forEach(data => {\r\n                if (new Date(data.periodEnd) < new Date(minDate.periodEnd))\r\n                    minDate = data;\r\n            });\r\n            return minDate.balance;\r\n        }\r\n    }\r\n}","<div nz-row [nzGutter]=\"{ xs: 8, sm: 16, md: 24, lg: 32, xl: 32, xxl: 32 }\">\r\n    <div nz-col nzSpan=\"5\">\r\n        <div class=\"mrg-btm\" nz-row>\r\n            <label for=\"\">Program</label>\r\n            <nz-select [nzDropdownMatchSelectWidth]=\"false\" nzAllowClear nzPlaceHolder=\"Select a Program\"\r\n                [(ngModel)]=\"program\" (ngModelChange)=\"programChanges($event)\">\r\n                <nz-option *ngFor=\"let prog of programs\" [nzLabel]=\"prog\" [nzValue]=\"prog\"></nz-option>\r\n            </nz-select>\r\n        </div>\r\n        <div class=\"mrg-btm\" nz-row>\r\n            <label for=\"\">Date</label>\r\n            <nz-month-picker [(ngModel)]=\"date\" nzPlaceHolder=\"Select month\" (ngModelChange)=\"dateChanges($event)\">\r\n            </nz-month-picker>\r\n        </div>\r\n        <div nz-row>\r\n            <p class=\"notice\">\r\n                <strong>Note</strong>: This statement includes an amount for government contribution and basic daily\r\n                fee that may not have been paid at the date of issue. Please refer to your invoice for any\r\n                outstanding amounts.\r\n            </p>\r\n        </div>\r\n        <div nz-row class=\"mrg-btm\">\r\n            <nz-descriptions nzBordered [nzSize]=\"'small'\" [nzColon]=\"false\"\r\n                [nzColumn]=\"{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }\">\r\n                <nz-descriptions-item nzTitle=\"Opening Balance\">{{ openB | currency: 'USD' || '--' }}\r\n                </nz-descriptions-item>\r\n                <nz-descriptions-item nzTitle=\"Closing Balance\">{{ closeB | currency: 'USD' || '--' }}\r\n                </nz-descriptions-item>\r\n                <nz-descriptions-item nzTitle=\"Contingency Balance\">{{ continB | currency: 'USD' || '--' }}\r\n                </nz-descriptions-item>\r\n                <nz-descriptions-item nzTitle=\"Total Available Balance\">{{ closeB + continB | currency: 'USD' || '--'}}\r\n                </nz-descriptions-item>\r\n            </nz-descriptions>\r\n        </div>\r\n        <div nz-row>\r\n            <div nz-row>\r\n                <label for=\"\">Recipient</label>\r\n                <p>{{ user?.title }} {{ user?.firstName }} {{ user?.surnameOrg }}</p>\r\n            </div>\r\n            <div nz-row>\r\n                <label for=\"\">Customer</label>\r\n                <p>{{ user?.accountNo || '-'}}</p>\r\n            </div>\r\n            <div nz-row>\r\n                <label for=\"\">Billing Client</label>\r\n                <p>{{ user?.accountNo || '-'}}</p>\r\n            </div>\r\n            <div nz-row>\r\n                <label for=\"\">Statement Period</label>\r\n                <p>{{ date | monthPeriodFilter }}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div nz-col nzSpan=\"18\" nzOffset=\"1\">\r\n        <div style=\"display: inline-block; width: 100%;\">\r\n            <a *ngIf=\"URL != '' \" class=\"print mrg-btm\" target=\"_blank\" [href]=\"URL\" nz-button nzType=\"primary\" [nzSize]=\"'default'\"><i\r\n                    nz-icon nzType=\"printer\"></i>Print</a>\r\n        </div>\r\n        <nz-table #basicTable [nzData]=\"table\" nzSize=\"small\" [nzBordered]=\"false\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Date</th>\r\n                    <th>Description</th>                    \r\n                    <th>Quantity</th>\r\n                    <th>Unit Price</th>\r\n                    <th>Amount</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <ng-container *ngFor=\"let tab of table\">\r\n                    <tr>\r\n                        <td class=\"left\" colspan=\"5\">\r\n                            <p class=\"package-header\">{{ tab?.name }}</p>\r\n                        </td>\r\n                    </tr>\r\n                    <tr class=\"table-content\" *ngFor=\"let samp of tab?.list\">\r\n                        <td class=\"align-left\">{{samp?.date}}</td>\r\n                        <td class=\"left\">{{samp?.billText | uppercase }}</td>                        \r\n                        <td class=\"align-right\">{{samp?.billQuant | number : '1.2-2' }}</td>\r\n                        <td class=\"align-right\">{{samp?.unitBillRate | currency: 'USD' }}</td>\r\n                        <td class=\"align-right\">{{samp?.serviceCharge | currency: 'USD' }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td class=\"total align-right\">Sub Total</td>\r\n                        <td class=\"total align-right\">{{ tab?.total | currency: 'USD' }}</td>\r\n                    </tr>\r\n                </ng-container>\r\n                <!-- <tr *ngFor=\"let data of basicTable.data\">\r\n                    <td>{{data.name}}</td>\r\n                    <td>{{data.age}}</td>\r\n                    <td>{{data.address}}</td>\r\n                    <td>\r\n                        <a>Action 一 {{data.name}}</a>\r\n                        <nz-divider nzType=\"vertical\"></nz-divider>\r\n                        <a>Delete</a>\r\n                    </td>\r\n                </tr> -->\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\nimport { TimeSheetService, GlobalService, StaffService, ClientService } from '@services/index';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { takeUntil, mergeMap, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport format from 'date-fns/format';\r\n\r\n@Component({\r\n    selector: 'preferences-client',\r\n    styles: [`\r\n        ul {\r\n            list-style:none;\r\n            margin:0;\r\n            padding:0;\r\n        }\r\n        ul.main-list > li{\r\n            padding:5px 8px;\r\n        }\r\n        ul.main-list > li:nth-child(even){\r\n            background: #f9f9f9;\r\n        }\r\n        h4{\r\n            color: #004165;\r\n        }\r\n        button{\r\n            margin-top:1rem;\r\n        }\r\n    `],\r\n    templateUrl: './preferences.html'\r\n})\r\n\r\n\r\nexport class PreferencesClient implements OnInit, OnDestroy {\r\n    @Input() id;\r\n\r\n    timesheets: Array<any>;\r\n\r\n    tabStream = new Subject<number>();\r\n    private unsubscribe = new Subject();\r\n\r\n    loading: boolean = false;\r\n\r\n    tabIndex: number;\r\n    user: any;\r\n\r\n    date = format(new Date(), 'yyyy/MM/dd');\r\n    lists: Array<any> = [];\r\n\r\n    constructor(\r\n        private clientS: ClientService,\r\n        private globalS: GlobalService\r\n    ) {\r\n        \r\n    }\r\n\r\n    ngOnInit() {\r\n        this.user = this.id || this.globalS.decode()['code'];\r\n\r\n        this.clientS.getcompetencies(this.user)\r\n            .pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n                this.lists = data;\r\n        })\r\n\r\n        this.listpreferences();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n\r\n    ifShow(data: any): boolean {\r\n        var len = data.competenciesList.filter(x => x.selected == true);\r\n        if (len.length > 0)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    listpreferences() {\r\n        this.clientS.getpreferences(this.globalS.decode().uniqueID).pipe(takeUntil(this.unsubscribe))\r\n            .subscribe(data => {\r\n                console.log(data);\r\n            })\r\n    }\r\n\r\n    getSelectedPreference() {\r\n        var tempArr: Array<string> = [];\r\n\r\n        this.lists.forEach(x => {\r\n            x.competenciesList.forEach(b => {\r\n                console.log(b)\r\n                if (b.selected) {\r\n                    tempArr.push(b.description);\r\n                }\r\n            });\r\n        });\r\n        return tempArr;\r\n    }\r\n\r\n    postpreference() {\r\n        this.clientS.postpreferences(this.globalS.decode().uniqueID, this.getSelectedPreference())\r\n            .subscribe(data => {\r\n                if (data) {\r\n                    this.globalS.sToast('Sucess', 'Your preferences has been changed');\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n}","<div nz-row nzGutter=\"32\">\r\n    <div nz-col nzSpan=\"10\">\r\n        <h2>Your Preferences</h2>\r\n        <ul class=\"main-list\">\r\n            <ng-container *ngFor=\"let list of lists\">\r\n                <li *ngIf=\"ifShow(list)\">\r\n                    <h4 for=\"\">{{ list.groupName }}</h4>\r\n                    <ul style=\"margin-left:2rem\">\r\n                        <ng-container *ngFor=\"let clist of list.competenciesList\">\r\n                            <li>\r\n                                <div class=\"list\" *ngIf=\"clist.selected\">\r\n                                    <label nz-checkbox [(ngModel)]=\"clist.selected\">{{ clist.description }}</label>\r\n                                </div>\r\n                            </li>\r\n                        </ng-container>\r\n                    </ul>\r\n                </li>\r\n            </ng-container>\r\n        </ul>\r\n        <button nz-button nzType=\"primary\" (click)=\"postpreference()\"><i nz-icon nzType=\"download\"></i>Save Preferences</button>\r\n    </div>\r\n\r\n    <div nz-col nzSpan=\"14\">\r\n        <h2>List of Preferences</h2>\r\n        <ul class=\"main-list\">\r\n            <li *ngFor=\"let list of lists\">\r\n                <div>\r\n                    <h4>{{ list.groupName}}</h4>\r\n                    <ul style=\"margin-left:2rem\">\r\n                        <li *ngFor=\"let competency of list.competenciesList\">\r\n                            <label nz-checkbox [(ngModel)]=\"competency.selected\">{{ competency.description }}</label>                            \r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\nimport { GlobalService, SettingsService } from '@services/index';\r\ndeclare var Dto: any;\r\n\r\n@Component({\r\n    styles: [`\r\n  .side-button{\r\n        position: fixed;\r\n        right: 15px;\r\n        background: #ff3737;\r\n        color: #fff;\r\n        width: 35px;\r\n        height: 36px;\r\n        cursor: pointer;\r\n        text-align: center;\r\n        z-index: 10;\r\n        top: 10rem;\r\n    }\r\n    .side-button:hover{\r\n        background:#ff3737db;\r\n    }\r\n    .side-button i{\r\n        font-size: 18px;\r\n        margin-top: 7px;\r\n    }\r\n    `],\r\n    templateUrl: './profile.html'\r\n})\r\n\r\n\r\nexport class ProfileClient implements OnInit, OnDestroy {\r\n    user: Dto.ProfileInterface;\r\n    token: any;\r\n\r\n    visible: boolean = false;\r\n    _settings: SettingsService;\r\n\r\n    personID: any;\r\n\r\n    constructor(\r\n        private globalS: GlobalService,\r\n        private settings: SettingsService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._settings = this.settings;\r\n        this.token = this.globalS.decode();\r\n        this.personID = this.token.code;\r\n        \r\n        this.user = {\r\n            name: this.token.code,\r\n            view: 'recipient',\r\n            id: this.token.uniqueID\r\n        }\r\n        \r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n\r\n    showNotices() {\r\n        this.visible = true;\r\n    }\r\n}","<div>\r\n    <app-profile-page [(ngModel)]=\"user\" name=\"fieldName\" ngDefaultControl></app-profile-page>\r\n\r\n    <div *ngIf=\"_settings?.ALLOWMARKETING()\" class=\"side-button\" nz-button nz-popover [nzPopoverContent]=\"contentTemplate\" nzPopoverPlacement=\"bottomRight\"\r\n        (click)=\"showNotices()\">\r\n        <i nz-icon nzType=\"notification\" nzTheme=\"outline\"></i>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #contentTemplate>\r\n    <div>\r\n        <span>Show all notifications!</span>\r\n    </div>\r\n</ng-template>\r\n\r\n<nz-drawer [nzClosable]=\"false\" [nzVisible]=\"visible\" nzPlacement=\"right\" nzTitle=\"Notices\" [nzWidth]=\"360\"\r\n    (nzOnClose)=\"visible=false\">\r\n    <div>\r\n        <app-media [personID]=\"personID\"></app-media>\r\n    </div>\r\n</nz-drawer>","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\nimport { TimeSheetService, GlobalService, StaffService, ClientService } from '@services/index';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { takeUntil, mergeMap, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\n\r\nimport format from 'date-fns/format';\r\nimport * as moment from 'moment';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'shift-client',\r\n    styles: [`\r\n        .dot {\r\n            height: 10px;\r\n            width: 10px;\r\n            border-radius: 50%;\r\n            display: inline-block;\r\n            float: left;\r\n            margin: 6px 7px 0 0;\r\n        }\r\n\r\n        .pending{\r\n            background: #737373;\r\n        }\r\n\r\n        .accepted{\r\n            background: #0079b8;\r\n        }\r\n\r\n        .completed{\r\n            background: #2f8400;\r\n        }\r\n\r\n        .approved{\r\n            background: #9b56bb;\r\n        }\r\n\r\n        .query{\r\n            background: #fdcf08;\r\n        }\r\n\r\n        .billed{\r\n            background: #004a70;\r\n        }\r\n\r\n        button.cancel-btn{\r\n            float: right;\r\n            margin-bottom: 10px;\r\n            width: 5rem;\r\n        }\r\n        h2.unalloc{\r\n            margin-bottom: 2rem;\r\n            color: red;\r\n        }\r\n\r\n        .form-group span{\r\n            font-size: 14px;\r\n            font-weight: 500;\r\n        }\r\n    `],\r\n    templateUrl: './shift.html'\r\n})\r\n\r\n\r\nexport class ShiftClient implements OnInit, OnDestroy {\r\n    dateFormat: string = 'dd/MM/yyyy';\r\n    @Input() id;\r\n\r\n    timesheets: Array<any>;\r\n\r\n    tabStream = new Subject<number>();\r\n    private unsubscribe = new Subject();\r\n\r\n    loading: boolean = false;\r\n\r\n    tabIndex: number;\r\n    user: any;\r\n\r\n    date = format(new Date(), 'yyyy/MM/dd');\r\n\r\n    bookingCancellationType: string = \"WithNotice\";\r\n\r\n    cancelBookingModal: boolean = false;\r\n    currentShift: any;\r\n    settings: any;\r\n    isConfirmLoading: boolean = false;\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private staffS: StaffService,\r\n        private clientS: ClientService,\r\n        private globalS: GlobalService\r\n    ) {\r\n        this.tabStream.pipe(\r\n            takeUntil(this.unsubscribe),\r\n            switchMap(data => {\r\n                this.tabIndex = data;\r\n\r\n                this.timesheets = []\r\n                this.loading = true;\r\n                switch (data) {\r\n                    case 0:\r\n                        return this.getShiftPending().pipe(takeUntil(this.unsubscribe));\r\n                    case 1:\r\n                        return this.getShiftAccepted().pipe(takeUntil(this.unsubscribe));\r\n                    case 2:\r\n                        return this.getShiftCompleted().pipe(takeUntil(this.unsubscribe));\r\n                    case 3:\r\n                        return this.getShiftApproved().pipe(takeUntil(this.unsubscribe));\r\n                    case 4:\r\n                        return this.getShiftQuery().pipe(takeUntil(this.unsubscribe));\r\n                    case 5:\r\n                        return this.getShiftBilled().pipe(takeUntil(this.unsubscribe));\r\n                }\r\n            })            \r\n        ).subscribe(data => {\r\n            this.loading = false;\r\n\r\n            if(data && data.list)\r\n                this.timesheets = data.list;\r\n            \r\n        \r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.user = this.id || this.globalS.decode()['code'];\r\n        this.tabStream.next(0);\r\n\r\n        this.timeS.getuname(this.user)\r\n            .pipe(\r\n                takeUntil(this.unsubscribe),\r\n                mergeMap(res => {\r\n                    return this.staffS.getsettings(res.uname)\r\n                })\r\n            ).subscribe(settings => {\r\n                this.settings = settings;\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n\r\n    handleCancel() {\r\n        this.cancelBookingModal = false;\r\n    }\r\n\r\n    nzSelectedIndexChange(index: number) {\r\n        this.tabStream.next(index);\r\n    }\r\n\r\n    getShiftPending(): Observable<any> {\r\n        return this.timeS.getshiftbooked({\r\n            RecipientCode: this.user,\r\n            ShiftDate: this.date,\r\n            Pending: true\r\n        });\r\n    }\r\n\r\n    getShiftAccepted(): Observable<any> {\r\n        return this.timeS.getshiftbooked({\r\n            RecipientCode: this.user,\r\n            ShiftDate: this.date,\r\n            Pending: false\r\n        });\r\n    }\r\n\r\n    getShiftCompleted(): Observable<any> {\r\n        return this.timeS.getshiftspecific({\r\n            RecipientCode: this.user,\r\n            ShiftDate: this.date,\r\n            Approved: 0\r\n        });\r\n    }\r\n\r\n    getShiftApproved(): Observable<any> {\r\n        return this.timeS.getshiftspecific({\r\n            RecipientCode: this.user,\r\n            ShiftDate: this.date,\r\n            Approved: 2\r\n        });\r\n    }\r\n\r\n    getShiftQuery(): Observable<any> {\r\n        return this.timeS.getshiftspecific({\r\n            RecipientCode: this.user,\r\n            ShiftDate: this.date,\r\n            Approved: 1\r\n        });\r\n    }\r\n\r\n    getShiftBilled(): Observable<any> {\r\n        return this.timeS.getshiftspecific({\r\n            RecipientCode: this.user,\r\n            ShiftDate: this.date,\r\n            Approved: 3\r\n        });\r\n    }\r\n\r\n    setShift(data: any, index: number) {\r\n        this.currentShift = data[index];\r\n        console.log(this.currentShift);\r\n        console.log(index);\r\n        if (this.tabIndex === 0) {\r\n            //this.cancelBookingAlertOpen = true;\r\n            this.cancelBookingModal = true;\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    trackByIndex(_: number, data: any): number {\r\n        return data.index;\r\n    }\r\n\r\n    cancelBooking() {\r\n        \r\n\r\n        var { date_Value, shiftbookNo, } = this.currentShift;\r\n        var rosterDate = moment(date_Value).format('YYYY/MM/DD');\r\n        var currentDate = moment(new Date()).format('YYYY/MM/DD');\r\n        var bookTime: string = moment(this.currentShift.activity_Time.start_time).format(\"HH:MM\");\r\n\r\n        var dayDiff = Date.parse(rosterDate) - Date.parse(currentDate);\r\n        dayDiff = dayDiff / (1000 * 60 * 60 * 24);\r\n\r\n        if (dayDiff <= this.settings.minimumCancellationLeadTime) {\r\n            this.globalS.eToast(\"Error\", `Booking can not be cancelled ${this.settings.minimumCancellationLeadTime} day(s) prior from today's`);\r\n            return;\r\n        }\r\n       \r\n        this.isConfirmLoading = true;\r\n\r\n        let booking = {\r\n            RecordNo: shiftbookNo,\r\n            ServiceType: this.bookingCancellationType,\r\n            RosterDate: rosterDate,\r\n            RosterTime: bookTime,\r\n            Username: this.id,\r\n            TraccsUser: this.globalS.decode().user\r\n        }\r\n\r\n        // this.tabStream.next(this.tabActive);\r\n        // this.cancelBookingAlertOpen = false;\r\n\r\n        // this.clientS.postcancelbooking(booking)\r\n        //     .subscribe(data => {\r\n        //         if (data) {\r\n        //             this.globalS.sToast('Success', 'Booking Cancelled');\r\n        //             this.tabStream.next(this.tabIndex);\r\n        //         }\r\n        //         this.cancelBookingModal = false;\r\n        //     }, (err: HttpErrorResponse) => {\r\n        //         this.globalS.eToast('Error', 'An error occurred')\r\n        //     }, () => {\r\n        //         this.isConfirmLoading = false;\r\n        //     });\r\n    }\r\n\r\n    approveShift(index: any){\r\n        if(this.timesheets[index] && this.timesheets[index].shiftbookNo){\r\n            const bookingNo = this.timesheets[index].shiftbookNo;\r\n\r\n            this.timeS.updateshiftquery(bookingNo).subscribe(data => {\r\n                if(data){\r\n                    this.globalS.sToast('Success', 'Booking transferred to shift');\r\n                    this.tabStream.next(this.tabIndex);\r\n                }\r\n            });\r\n        }        \r\n    }\r\n\r\n    queryShift(index: any){\r\n        if(this.timesheets[index] && this.timesheets[index].shiftbookNo){\r\n            const bookingNo = this.timesheets[index].shiftbookNo;\r\n\r\n            this.timeS.updateshiftquery(bookingNo).subscribe(data => {\r\n                if(data){\r\n                    this.globalS.sToast('Success', 'Booking transferred to query');\r\n                    this.tabStream.next(this.tabIndex);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","<div>\r\n    <nz-tabset (nzSelectedIndexChange)=\"nzSelectedIndexChange($event)\">\r\n        <nz-tab [nzTitle]=\"pending\">\r\n            <ng-template #pending> <span class=\"dot pending\"></span> Pending</ng-template>\r\n            <div *ngIf=\"!loading\">\r\n                \r\n                <nz-table #virtualTable nzVirtualScroll [nzSize]=\"'middle'\" [nzVirtualItemSize]=\"20\" [nzData]=\"timesheets\"\r\n                    [nzLoading]=\"loading\" [nzVirtualForTrackBy]=\"trackByIndex\" [nzFrontPagination]=\"false\" [nzSize]=\"'middle'\"\r\n                    [nzShowPagination]=\"false\" [nzScroll]=\"{ x: '1700px', y: '350px' }\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th nzWidth=\"100px\" nzLeft=\"0px\">Shift No</th>\r\n                            <th nzWidth=\"110px\" nzLeft=\"100px\">Date</th>\r\n                            <th nzWidth=\"90px\">Start Time</th>\r\n                            <th nzWidth=\"60px\">Duration</th>\r\n                            <th nzWidth=\"110px\">Provider</th>\r\n                            <th nzWidth=\"200px\">Program</th>\r\n                            <th nzWidth=\"100px\">Activity</th>\r\n                            <th nzWidth=\"100px\">Bill Quantity</th>\r\n                            <th nzWidth=\"100px\">Bill Rate</th>\r\n                            <th nzWidth=\"100px\">Bill To</th>\r\n                            <th nzWidth=\"200px\" nzRight=\"50px\">Notes</th>\r\n                            <th nzWidth=\"50px\" nzRight=\"0px\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-template nz-virtual-scroll let-data let-index=\"index\">\r\n                            <tr>\r\n                                <td nzLeft=\"0px\">{{ data.shiftbookNo }}</td>\r\n                                <td nzLeft=\"110px\">{{ data.activityDate | date: 'dd/MM/yyyy' }}</td>\r\n                                <td nzWidth=\"90px\">{{ data.activity_Time.start_time | date: 'HH:mm' }}</td>\r\n                                <td nzWidth=\"60px\">{{ data.activity_Time.calculated_Duration }}</td>\r\n                                <td nzWidth=\"110px\">{{ data.carer_Code }}</td>\r\n                                <td nzWidth=\"200px\">{{ data.program.title }}</td>\r\n                                <td nzWidth=\"100px\">{{ data.activity.name }}</td>\r\n                                <td nzWidth=\"100px\">{{ data.bill.quantity | number: '1.2-2' }}</td>\r\n                                <td nzWidth=\"100px\">{{ data.bill.bill_Rate | currency: 'USD' }}</td>\r\n                                <td nzWidth=\"100px\">{{ data.billedTo.accountNo }}</td>\r\n                                <td nzWidth=\"200px\" nzRight=\"50px\">{{ data.note }}</td>\r\n                                <td nzWidth=\"50px\" nzRight=\"0px\">\r\n                                    <button nz-button nzType=\"danger\" class=\"cancel-btn\" (click)=\"setShift(timesheets,index)\" nzDanger=\"true\">Cancel</button>\r\n                                </td>\r\n                            </tr>\r\n                        </ng-template>\r\n                    </tbody>\r\n                </nz-table>                \r\n            </div>\r\n        </nz-tab>\r\n        <nz-tab [nzTitle]=\"accepted\">\r\n            <ng-template #accepted> <span class=\"dot accepted\"></span> Accepted</ng-template>\r\n            <div *ngIf=\"!loading\">\r\n                \r\n                <nz-table #virtualTable nzVirtualScroll [nzSize]=\"'middle'\" [nzVirtualItemSize]=\"20\" [nzData]=\"timesheets\"\r\n                    [nzLoading]=\"loading\" [nzVirtualForTrackBy]=\"trackByIndex\" [nzFrontPagination]=\"false\" [nzSize]=\"'middle'\"\r\n                    [nzShowPagination]=\"false\" [nzScroll]=\"{ x: '1700px', y: '350px' }\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th nzWidth=\"100px\" nzLeft=\"0px\">Shift/Booking #</th>\r\n                            <th nzWidth=\"120px\" nzLeft=\"100px\">Date</th>\r\n                            <th nzWidth=\"90px\">Start Time</th>\r\n                            <th nzWidth=\"60px\">Duration</th>\r\n                            <th nzWidth=\"110px\">Provider</th>\r\n                            <th nzWidth=\"280px\">Program</th>\r\n                            <th nzWidth=\"100px\">Activity</th>\r\n                            <th nzWidth=\"100px\">Bill Quantity</th>\r\n                            <th nzWidth=\"100px\">Bill Rate</th>\r\n                            <th nzWidth=\"100px\">Bill To</th>\r\n                            <th nzWidth=\"200px\" nzRight=\"0px\">Notes</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-template nz-virtual-scroll let-data let-index=\"index\">\r\n                            <tr>\r\n                                <td nzLeft=\"0px\">{{ data.shiftbookNo }}</td>\r\n                                <td nzLeft=\"100px\">{{ data.activityDate | date: 'dd/MM/yyyy' }}</td>\r\n                                <td>{{ data.activity_Time.start_time | date: 'HH:mm' }}</td>\r\n                                <td>{{ data.activity_Time.calculated_Duration }}</td>\r\n                                <td>{{ data.carer_Code }}</td>\r\n                                <td>{{ data.program.title }}</td>\r\n                                <td>{{ data.activity.name }}</td>\r\n                                <td>{{ data.bill.quantity | number: '1.2-2' }}</td>\r\n                                <td>{{ data.bill.bill_Rate | currency: 'USD' }}</td>\r\n                                <td>{{ data.billedTo.accountNo }}</td>\r\n                                <td nzRight=\"0px\">{{ data.note }}</td>\r\n                            </tr>\r\n                        </ng-template>\r\n                    </tbody>\r\n                </nz-table>\r\n            </div>\r\n        </nz-tab>\r\n        <nz-tab [nzTitle]=\"completed\">\r\n            <ng-template #completed> <span class=\"dot completed\"></span> Completed</ng-template>\r\n            <div *ngIf=\"!loading\">\r\n                \r\n\r\n                <nz-table #virtualTable nzVirtualScroll [nzSize]=\"'middle'\" [nzVirtualItemSize]=\"20\" [nzData]=\"timesheets\"\r\n                    [nzLoading]=\"loading\" [nzVirtualForTrackBy]=\"trackByIndex\" [nzFrontPagination]=\"false\" [nzSize]=\"'middle'\"\r\n                    [nzShowPagination]=\"false\" [nzScroll]=\"{ x: '1700px', y: '350px' }\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th nzWidth=\"100px\" nzLeft=\"0px\">Shift/Booking #</th>\r\n                            <th nzWidth=\"120px\" nzLeft=\"100px\">Date</th>\r\n                            <th nzWidth=\"90px\">Start Time</th>\r\n                            <th nzWidth=\"60px\">Duration</th>\r\n                            <th nzWidth=\"110px\">Provider</th>\r\n                            <th nzWidth=\"280px\">Program</th>\r\n                            <th nzWidth=\"100px\">Activity</th>\r\n                            <th nzWidth=\"100px\">Bill Quantity</th>\r\n                            <th nzWidth=\"100px\">Bill Rate</th>\r\n                            <th nzWidth=\"100px\">Bill To</th>\r\n                            <th nzWidth=\"200px\" nzRight=\"50px\">Notes</th>\r\n                            <th nzWidth=\"50px\" nzRight=\"0px\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-template nz-virtual-scroll let-data let-index=\"index\">\r\n                            <tr>\r\n                                <td nzLeft=\"0px\">{{ data.shiftbookNo }}</td>\r\n                                <td nzLeft=\"100px\">{{ data.activityDate | date: 'dd/MM/yyyy' }}</td>\r\n                                <td>{{ data.activity_Time.start_time | date: 'HH:mm' }}</td>\r\n                                <td>{{ data.activity_Time.calculated_Duration }}</td>\r\n                                <td>{{ data.carer_Code }}</td>\r\n                                <td>{{ data.program.title }}</td>\r\n                                <td>{{ data.activity.name }}</td>\r\n                                <td>{{ data.bill.quantity | number: '1.2-2' }}</td>\r\n                                <td>{{ data.bill.bill_Rate | currency: 'USD' }}</td>\r\n                                <td>{{ data.billedTo.accountNo }}</td>\r\n                                <td nzWidth=\"200px\" nzRight=\"50px\">{{ data.note }}</td>\r\n                                <td nzWidth=\"50px\" nzRight=\"0px\">\r\n                                    <button nz-button nzType=\"primary\" \r\n                                        nz-popconfirm\r\n                                        nzPopconfirmTitle=\"Are you sure approve this roster?\"\r\n                                        nzPopconfirmPlacement=\"bottom\"\r\n                                        (nzOnConfirm)=\"approveShift(index)\"\r\n                                        class=\"cancel-btn\" >Approve</button>\r\n                                    <button nz-button \r\n                                    nz-popconfirm\r\n                                    nzPopconfirmTitle=\"Are you sure query this roster?\"\r\n                                    nzPopconfirmPlacement=\"bottom\"\r\n                                    (nzOnConfirm)=\"queryShift(index)\"\r\n                                    class=\"cancel-btn\" class=\"cancel-btn\" (click)=\"setShift(timesheets,index)\">Query</button>\r\n                                </td>\r\n                            </tr>\r\n                        </ng-template>\r\n                    </tbody>\r\n                </nz-table>\r\n            </div>\r\n        </nz-tab>\r\n        <nz-tab [nzTitle]=\"approved\">\r\n            <ng-template #approved> <span class=\"dot approved\"></span> Approved</ng-template>\r\n            <div *ngIf=\"!loading\">\r\n                \r\n\r\n                <nz-table #virtualTable nzVirtualScroll [nzSize]=\"'middle'\" [nzVirtualItemSize]=\"20\" [nzData]=\"timesheets\"\r\n                    [nzLoading]=\"loading\" [nzVirtualForTrackBy]=\"trackByIndex\" [nzFrontPagination]=\"false\" [nzSize]=\"'middle'\"\r\n                    [nzShowPagination]=\"false\" [nzScroll]=\"{ x: '1700px', y: '350px' }\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th nzWidth=\"100px\" nzLeft=\"0px\">Shift/Booking No</th>\r\n                            <th nzWidth=\"120px\" nzLeft=\"100px\">Date</th>\r\n                            <th nzWidth=\"90px\">Start Time</th>\r\n                            <th nzWidth=\"60px\">Duration</th>\r\n                            <th nzWidth=\"110px\">Provider</th>\r\n                            <th nzWidth=\"280px\">Program</th>\r\n                            <th nzWidth=\"100px\">Activity</th>\r\n                            <th nzWidth=\"100px\">Bill Quantity</th>\r\n                            <th nzWidth=\"100px\">Bill Rate</th>\r\n                            <th nzWidth=\"100px\">Bill To</th>\r\n                            <th nzWidth=\"200px\" nzRight=\"0px\">Notes</th>\r\n                            <th>Approval</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-template nz-virtual-scroll let-data let-index=\"index\">\r\n                            <tr>\r\n                                <td nzLeft=\"0px\">{{ data.shiftbookNo }}</td>\r\n                                <td nzLeft=\"100px\">{{ data.activityDate | date: 'dd/MM/yyyy' }}</td>\r\n                                <td>{{ data.activity_Time.start_time | date: 'HH:mm' }}</td>\r\n                                <td>{{ data.activity_Time.calculated_Duration }}</td>\r\n                                <td>{{ data.carer_Code }}</td>\r\n                                <td>{{ data.program.title }}</td>\r\n                                <td>{{ data.activity.name }}</td>\r\n                                <td>{{ data.bill.quantity | number: '1.2-2' }}</td>\r\n                                <td>{{ data.bill.bill_Rate | currency: 'USD' }}</td>\r\n                                <td>{{ data.billedTo.accountNo }}</td>\r\n                                <td nzRight=\"0px\">{{ data.note }}</td>\r\n                                <td>\r\n                                    <button class=\"cancel-btn\" (click)=\"setShift(timesheets,index)\">Cancel</button>\r\n                                </td>\r\n                            </tr>\r\n                        </ng-template>\r\n                    </tbody>\r\n                </nz-table>\r\n            </div>\r\n        </nz-tab>\r\n        <nz-tab [nzTitle]=\"query\">\r\n            <ng-template #query> <span class=\"dot query\"></span> Query</ng-template>\r\n            <div *ngIf=\"!loading\">\r\n                \r\n                <nz-table #virtualTable nzVirtualScroll [nzSize]=\"'middle'\" [nzVirtualItemSize]=\"20\" [nzData]=\"timesheets\"\r\n                    [nzLoading]=\"loading\" [nzVirtualForTrackBy]=\"trackByIndex\" [nzFrontPagination]=\"false\" [nzSize]=\"'middle'\"\r\n                    [nzShowPagination]=\"false\" [nzScroll]=\"{ x: '1700px', y: '350px' }\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th nzWidth=\"100px\" nzLeft=\"0px\">Shift/Booking No</th>\r\n                            <th nzWidth=\"120px\" nzLeft=\"100px\">Date</th>\r\n                            <th nzWidth=\"90px\">Start Time</th>\r\n                            <th nzWidth=\"60px\">Duration</th>\r\n                            <th nzWidth=\"110px\">Provider</th>\r\n                            <th nzWidth=\"280px\">Program</th>\r\n                            <th nzWidth=\"100px\">Activity</th>\r\n                            <th nzWidth=\"100px\">Bill Quantity</th>\r\n                            <th nzWidth=\"100px\">Bill Rate</th>\r\n                            <th nzWidth=\"100px\">Bill To</th>\r\n                            <th nzWidth=\"200px\" nzRight=\"0px\">Notes</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-template nz-virtual-scroll let-data let-index=\"index\">\r\n                            <tr>\r\n                                <td nzLeft=\"0px\">{{ data.shiftbookNo }}</td>\r\n                                <td nzLeft=\"100px\">{{ data.activityDate | date: 'dd/MM/yyyy' }}</td>\r\n                                <td>{{ data.activity_Time.start_time | date: 'HH:mm' }}</td>\r\n                                <td>{{ data.activity_Time.calculated_Duration }}</td>\r\n                                <td>{{ data.carer_Code }}</td>\r\n                                <td>{{ data.program.title }}</td>\r\n                                <td>{{ data.activity.name }}</td>\r\n                                <td>{{ data.bill.quantity | number: '1.2-2' }}</td>\r\n                                <td>{{ data.bill.bill_Rate | currency: 'USD' }}</td>\r\n                                <td>{{ data.billedTo.accountNo }}</td>\r\n                                <td nzWidth=\"200px\" nzRight=\"0px\">{{ data.note }}</td>\r\n                            </tr>\r\n                        </ng-template>\r\n                    </tbody>\r\n                </nz-table>\r\n\r\n            </div>\r\n        </nz-tab>\r\n        <nz-tab [nzTitle]=\"billed\">\r\n            <ng-template #billed> <span class=\"dot billed\"></span> Billed</ng-template>\r\n            <div *ngIf=\"!loading\">\r\n                \r\n                \r\n                <nz-table #virtualTable nzVirtualScroll [nzSize]=\"'middle'\" [nzVirtualItemSize]=\"20\" [nzData]=\"timesheets\"\r\n                    [nzLoading]=\"loading\" [nzVirtualForTrackBy]=\"trackByIndex\" [nzFrontPagination]=\"false\" [nzSize]=\"'middle'\"\r\n                    [nzShowPagination]=\"false\" [nzScroll]=\"{ x: '1700px', y: '350px' }\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th nzWidth=\"100px\" nzLeft=\"0px\">Shift/Booking No</th>\r\n                            <th nzWidth=\"120px\" nzLeft=\"100px\">Date</th>\r\n                            <th nzWidth=\"90px\">Start Time</th>\r\n                            <th nzWidth=\"60px\">Duration</th>\r\n                            <th nzWidth=\"110px\">Provider</th>\r\n                            <th nzWidth=\"280px\">Program</th>\r\n                            <th nzWidth=\"100px\">Activity</th>\r\n                            <th nzWidth=\"100px\">Bill Quantity</th>\r\n                            <th nzWidth=\"100px\">Bill Rate</th>\r\n                            <th nzWidth=\"100px\">Bill To</th>\r\n                            <th nzWidth=\"200px\" nzRight=\"0px\">Notes</th>\r\n                            <th>Approval</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-template nz-virtual-scroll let-data let-index=\"index\">\r\n                            <tr>\r\n                                <td nzLeft=\"0px\">{{ data.shiftbookNo }}</td>\r\n                                <td nzLeft=\"100px\">{{ data.activityDate | date: 'dd/MM/yyyy' }}</td>\r\n                                <td>{{ data.activity_Time.start_time | date: 'HH:mm' }}</td>\r\n                                <td>{{ data.activity_Time.calculated_Duration }}</td>\r\n                                <td>{{ data.carer_Code }}</td>\r\n                                <td>{{ data.program.title }}</td>\r\n                                <td>{{ data.activity.name }}</td>\r\n                                <td>{{ data.bill.quantity | number: '1.2-2' }}</td>\r\n                                <td>{{ data.bill.bill_Rate | currency: 'USD' }}</td>\r\n                                <td>{{ (data.bill.quantity * data.bill.bill_Rate) | currency: 'USD' }}</td>\r\n                                <td>{{ data.address }}</td>\r\n                                <td>{{ data.billedTo.accountNo }}</td>\r\n                                <td nzRight=\"0px\">{{ data.note }}</td>\r\n                            </tr>\r\n                        </ng-template>\r\n                    </tbody>\r\n                </nz-table>\r\n\r\n            </div>\r\n        </nz-tab>\r\n    </nz-tabset>\r\n    <nz-spin *ngIf=\"loading\" nzSimple></nz-spin>\r\n</div>\r\n\r\n\r\n\r\n<nz-modal [(nzVisible)]=\"cancelBookingModal\" nzTitle=\"Booking Cancellation\" (nzOnCancel)=\"handleCancel()\" >\r\n      <div>\r\n          <div class=\"form-group cancel-wrapper-data\">\r\n                <h2 class=\"unalloc\">UNALLOCATED BOOKING</h2>\r\n                <div nz-row>\r\n                    <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                        <label for=\"\" class=\"nth\">Date: </label>\r\n                        <span class=\"nth\">{{ currentShift?.date_Value }}</span>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                        <label for=\"\" class=\"nth\">Service Type: </label>\r\n                        <span class=\"nth\">{{ currentShift?.activity.name }}</span>\r\n                    </div>\r\n                </div>\r\n                <div nz-row>\r\n                    <div nz-col nzSpan=\"12\"  class=\"form-group\">\r\n                        <label for=\"\" class=\"nth\">Time: </label>\r\n                        <span class=\"nth\">{{ currentShift?.activity_Time.time_Value }}</span>\r\n                    </div>\r\n                    <div nz-col nzSpan=\"12\" class=\"form-group\">\r\n                        <label for=\"\" class=\"nth\">Duration: </label>\r\n                        <span class=\"nth\">{{ currentShift?.activity_Time.calculated_Duration }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n      </div>\r\n\r\n    <div *nzModalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Exit</button>\r\n        <button nz-button nzType=\"primary\" (click)=\"cancelBooking()\" [nzLoading]=\"isConfirmLoading\">Cancel Booking</button>\r\n    </div>\r\n    </nz-modal>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { LoginService, GlobalService } from '@services/index';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './extra.html'\r\n})\r\nexport class ExtraComponent implements OnInit {\r\n\r\n    columnDefs = [\r\n        {field: 'make' },\r\n        {field: 'model' },\r\n        {field: 'price'}\r\n    ];\r\n\r\n    rowData = [\r\n        { make: 'Toyota', model: 'Celica', price: 35000 },\r\n        { make: 'Ford', model: 'Mondeo', price: 32000 },\r\n        { make: 'Porsche', model: 'Boxter', price: 72000 }\r\n    ];\r\n\r\n    \r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private loginS: LoginService,\r\n        private globalS: GlobalService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n   \r\n\r\n}\r\n","<ag-grid-angular style=\"width: 500px; height: 150px;\" class=\"ag-theme-balham\" [rowData]=\"rowData\"\r\n    [columnDefs]=\"columnDefs\">\r\n</ag-grid-angular>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { LoginService, GlobalService } from '@services/index';\r\nimport { SettingsService } from '@services/settings.service';\r\n\r\nimport {\r\n  Router\r\n} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  loading: boolean = false;\r\n  unauthorized: boolean = false;\r\n  unauthorizedStr: string;\r\n\r\n  submitForm(): void {\r\n    for (const i in this.loginForm.controls) {\r\n      this.loginForm.controls[i].markAsDirty();\r\n      this.loginForm.controls[i].updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private loginS: LoginService,\r\n    private globalS: GlobalService,\r\n    private settingS: SettingsService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.fb.group({\r\n      userName: [null, [Validators.required]],\r\n      password: [null, [Validators.required]],\r\n      remember: [true]\r\n    });\r\n  }\r\n\r\n  login() {\r\n    if (!this.loginForm.valid) return;\r\n    this.loading = true;\r\n    let user: Dto.ApplicationUser = {\r\n      Username: this.loginForm.get('userName').value,\r\n      Password: this.loginForm.get('password').value\r\n    }\r\n   \r\n    this.loginS.login(user)\r\n      .subscribe(data => {\r\n\r\n        this.globalS.token = data.access_token;       \r\n        this.settingS.getSettings(user.Username);\r\n        \r\n        if (this.globalS.redirectURL) {\r\n          this.globalS.ISTAFF_BYPASS = 'true';\r\n          this.router.navigateByUrl(this.globalS.redirectURL);\r\n          return;\r\n        }\r\n\r\n        \r\n\r\n        setTimeout(() => {\r\n          this.globalS.viewRender(this.globalS.token);\r\n        }, 200);\r\n\r\n        this.reset();\r\n\r\n      }, (error: HttpErrorResponse) => {\r\n        this.unauthorized = true;\r\n        if (error.status == 401) this.unauthorizedStr = 'Invalid user name or password';\r\n        if (error.status == 400) this.unauthorizedStr = error.error.message;\r\n        this.reset();\r\n        throw (error);\r\n      });\r\n  }\r\n\r\n  reset() {\r\n    this.loading = false;\r\n    this.loginForm.reset();\r\n    setTimeout(() => {\r\n      this.unauthorized = false;\r\n    }, 2000);\r\n  }\r\n\r\n}\r\n","<div class=\"background\">\r\n  <div class=\"container\">\r\n    <label for=\"\">\r\n      <h2>Welcome to TRACCS PORTAL</h2>\r\n      <h5>Use your ID to sign in</h5>\r\n    </label>\r\n    <form nz-form [formGroup]=\"loginForm\" class=\"login-form\" (ngSubmit)=\"login()\">\r\n      <nz-form-item>\r\n        <nz-form-control nzErrorTip=\"Please input your username!\">\r\n          <nz-input-group nzPrefixIcon=\"user\">\r\n            <input type=\"text\" nz-input formControlName=\"userName\" placeholder=\"Username\" />\r\n          </nz-input-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <nz-form-control nzErrorTip=\"Please input your Password!\">\r\n          <nz-input-group nzPrefixIcon=\"lock\">\r\n            <input type=\"password\" nz-input formControlName=\"password\" placeholder=\"Password\" />\r\n          </nz-input-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <nz-form-control>\r\n          <button [nzLoading]=\"loading\" nz-button class=\"login-form-button\" [nzType]=\"'primary'\">Log in</button>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\n@Component({\r\n    styles: [`\r\n\r\n    `],\r\n    templateUrl: './calendar.html'\r\n})\r\n\r\n\r\nexport class CalendarProvider implements OnInit, OnDestroy {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n}","<app-calendar></app-calendar>","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\n@Component({\r\n    styles: [`\r\n\r\n    `],\r\n    templateUrl: './document.html'\r\n})\r\n\r\n\r\nexport class DocumentProvider implements OnInit, OnDestroy {\r\n    file: any;\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.file = {\r\n            view: 'staff'\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n}","<app-upload-file [(ngModel)]=\"file\" name=\"fieldName\" ngDefaultControl></app-upload-file>","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild, Input } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { takeUntil, switchMap, distinctUntilChanged, debounceTime } from 'rxjs/operators';\r\nimport { TimeSheetService, GlobalService } from '@services/index';\r\nimport { NzTableComponent } from 'ng-zorro-antd/table';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport startOfMonth from 'date-fns/startOfMonth';\r\nimport lastDayOfMonth from 'date-fns/lastDayOfMonth';\r\nimport format from 'date-fns/format';\r\n\r\nexport interface VirtualDataInterface {\r\n    index: number;\r\n    name: string;\r\n    age: number;\r\n    address: string;\r\n}\r\n\r\n@Component({\r\n    styles: [`        \r\n        .unapprove{\r\n            background:#ffe1e1;\r\n        }\r\n        .approve{\r\n            background:#d5ffd0;\r\n        }\r\n        nz-badge{\r\n            float:left;\r\n            margin-top: 2px;\r\n        }\r\n    `],\r\n    templateUrl: './history.html'\r\n})\r\n\r\n\r\nexport class HistoryProvider implements OnInit, OnDestroy {\r\n\r\n    @ViewChild('virtualTable', { static: false }) nzTableComponent: NzTableComponent;\r\n    private destroy$ = new Subject();\r\n\r\n    listOfData: VirtualDataInterface[] = [];\r\n    \r\n\r\n    scrollToIndex(index: number): void {\r\n        this.nzTableComponent.cdkVirtualScrollViewport.scrollToIndex(index);\r\n    }\r\n\r\n    trackByIndex(_: number, data: VirtualDataInterface): number {\r\n        return data.index;\r\n    }\r\n\r\n    dateFormat: string = 'dd/MM/yyyy';\r\n\r\n\r\n\r\n    @Input() id;\r\n    private accountNo: string;\r\n    private unsubscribe$ = new Subject();\r\n\r\n    dateStream = new Subject<any>();\r\n    dateRange: Array<any> = [];\r\n    timesheets: Array<any> = [];\r\n    loading: boolean = false;\r\n\r\n    constructor(\r\n        private globalS: GlobalService,\r\n        private timeS: TimeSheetService\r\n    ) {\r\n        this.dateStream.pipe(\r\n            debounceTime(500),\r\n            distinctUntilChanged(),\r\n            switchMap((x: any) => \r\n            {\r\n                this.loading = true;\r\n                return this.getTimeSheet({\r\n                    AccountNo: this.accountNo,\r\n                    personType: 'Staff',\r\n                    startDate: format(this.dateRange[0], 'yyyy/MM/dd'),\r\n                    endDate: format(this.dateRange[1], 'yyyy/MM/dd')\r\n                })\r\n            }), takeUntil(this.unsubscribe$))\r\n            .subscribe(data => {\r\n                this.loading = false;\r\n                this.timesheets = data;\r\n            })\r\n    }\r\n\r\n    ngOnInit() {\r\n        \r\n        this.accountNo = this.id || this.globalS.decode().code;\r\n        this.dateRange[0] = startOfMonth(new Date());\r\n        this.dateRange[1] = lastDayOfMonth(new Date());\r\n\r\n        this.dateStream.next();\r\n\r\n        const data = [];\r\n\r\n        for (let i = 0; i < 20000; i++) {\r\n            data.push({\r\n                index: i,\r\n                name: `Edward King`,\r\n                age: 32,\r\n                address: `London`\r\n            });\r\n        }\r\n        this.listOfData = data;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.nzTableComponent.cdkVirtualScrollViewport.scrolledIndexChange\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe((data: number) => {\r\n                console.log('scroll index to', data);\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    getTimeSheet(data: Dto.GetTimesheet): Observable<any> {\r\n        return this.timeS.gettimesheets({\r\n            AccountNo: data.AccountNo,\r\n            personType: data.personType,\r\n            startDate: data.startDate,\r\n            endDate: data.endDate\r\n        });\r\n    }\r\n\r\n    isApproved(data: any): string {\r\n        return data ? '#87d068' : '#f50';\r\n    }\r\n}","<div>\r\n    <div nz-row>\r\n        <nz-form-item>\r\n            <nz-form-control [nzSpan]=\"14\" nzErrorTip=\"The input is not valid E-mail!\">\r\n                <nz-range-picker [nzFormat]=\"dateFormat\" [(ngModel)]=\"dateRange\"\r\n                    (ngModelChange)=\"dateStream.next($event)\">\r\n                </nz-range-picker>\r\n            </nz-form-control>\r\n        </nz-form-item>\r\n    </div>\r\n    <div nz-row>\r\n        <nz-table #virtualTable nzVirtualScroll [nzVirtualItemSize]=\"5\" [nzData]=\"timesheets\" [nzLoading]=\"loading\"\r\n            [nzVirtualForTrackBy]=\"trackByIndex\" [nzFrontPagination]=\"false\" [nzShowPagination]=\"false\" nzSize=\"small\" \r\n            [nzScroll]=\"{ x: '1730px', y: '450px' }\">\r\n            <thead>\r\n                <tr>\r\n                    <th nzWidth=\"100px\" nzLeft=\"0px\">Shift/Booking #</th>\r\n                    <th nzWidth=\"90px\" nzLeft=\"100px\">Date</th>\r\n                    <th nzWidth=\"80px\">Start Time</th>\r\n                    <th nzWidth=\"80px\">End Time</th>\r\n                    <th nzWidth=\"70px\">Duration</th>\r\n                    <th nzWidth=\"130px\">Recipient or Location</th>\r\n                    <th nzWidth=\"130px\">Activity</th>\r\n                    <th nzWidth=\"100px\">Pay Type</th>\r\n                    <th nzWidth=\"100px\">Pay Quantity</th>\r\n                    <th nzWidth=\"100px\">App</th>\r\n                    <th nzWidth=\"150px\" nzRight=\"0px\">Notes</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <ng-template nz-virtual-scroll let-data let-index=\"index\">\r\n                    <tr>\r\n                        <td nzLeft=\"0px\" [class.unapprove]=\"!data.approved\" [class.approve]=\"data.approved\"><nz-badge [nzColor]=\"isApproved(data.approved)\"></nz-badge>{{ data.shiftbookNo }}</td>\r\n                        <td nzLeft=\"100px\">{{ data.activityDate | date: 'dd/MM/yyyy' }}</td>\r\n                        <td nzWidth=\"80px\">{{ data.activity_Time.start_time | date: 'HH:mm' }}</td>\r\n                        <td nzWidth=\"80px\">{{ data.activity_Time.end_Time | date: 'HH:mm' }}</td>\r\n                        <td nzWidth=\"70px\">{{ data.activity_Time.calculated_Duration }}</td>\r\n                        <td nzWidth=\"130px\">{{ data.recipientLocation }}</td>\r\n                        <td nzWidth=\"130px\">{{ data.activity.name }}</td>\r\n                        <td>{{ data.payType.paytype }}</td>\r\n                        <td>{{ data.pay.quantity | number: '1.2-2' }}</td>\r\n                        <td>{{ data.address }}</td>\r\n                        <td nzRight=\"0px\">\r\n                            <a>{{ data.note }}</a>\r\n                        </td>\r\n                    </tr>\r\n                </ng-template>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: '',\r\n    templateUrl: './home.html',\r\n    styles: [\r\n        `\r\n    .logo {\r\n        height: 2rem;\r\n        background: url(../../../assets/logo/image2.png) no-repeat;\r\n        background-size: 64%;\r\n        margin: 7px 24px;\r\n        width: 10rem;\r\n    }\r\n\r\n    nz-header {\r\n        background: #fff;\r\n        padding: 0;\r\n    }\r\n\r\n    nz-content {\r\n        margin: 0 16px;\r\n    }\r\n\r\n    nz-breadcrumb {\r\n        margin: 16px 0;\r\n    }\r\n    \r\n    nz-footer {\r\n        text-align: center;\r\n    }\r\n\r\n    nz-layout{\r\n        height:100vh;\r\n    }\r\n\r\n     .inner-content {\r\n        padding: 24px;\r\n        background: #fff;\r\n        min-height: 360px;\r\n    }\r\n\r\n    nz-content {\r\n        background: #85B9D5;\r\n        margin: 6px;\r\n    }\r\n\r\n    nz-layout{\r\n        background: #85B9D5;\r\n        height:100vh;\r\n    }\r\n\r\n    ul.main-list{\r\n        background:#004165 !important;\r\n    }\r\n    nz-sider{\r\n        background:#004165;\r\n    }\r\n    .ant-menu-submenu-popup.ant-menu-dark .ant-menu-item-selected, .ant-menu.ant-menu-dark .ant-menu-item-selected{\r\n        background-color: #85B9D5;\r\n        color: #004165;\r\n    }\r\n    .ant-menu-submenu-popup.ant-menu-dark .ant-menu-item-selected, .ant-menu.ant-menu-dark .ant-menu-item-selected i{\r\n        color: #004165;\r\n    }\r\n    .ant-menu-dark, .ant-menu-dark .ant-menu-sub{\r\n        background:#004165;\r\n    }\r\n        `\r\n    ]\r\n})\r\n\r\nexport class HomeProvider {\r\n\r\n    isCollapsed = false;\r\n}","<nz-layout>\r\n    <nz-sider nzCollapsible [(nzCollapsed)]=\"isCollapsed\" nzWidth=\"200px\">\r\n        <div class=\"logo\"></div>\r\n        <ul nz-menu nzTheme=\"dark\" nzMode=\"inline\" [nzInlineCollapsed]=\"isCollapsed\">\r\n            <!-- <li nz-submenu nzTitle=\"User\" nzIcon=\"user\">\r\n                <ul>\r\n                    <li nz-menu-item>Tom</li>\r\n                    <li nz-menu-item>Bill</li>\r\n                    <li nz-menu-item>Alex</li>\r\n                </ul>\r\n            </li>\r\n            <li nz-submenu nzTitle=\"Team\" nzIcon=\"team\">\r\n                <ul>\r\n                    <li nz-menu-item>Team 1</li>\r\n                    <li nz-menu-item>Team 2</li>\r\n                </ul>\r\n            </li> -->\r\n            <li nz-menu-item routerLink=\"/provider/profile\" routerLinkActive=\"ant-menu-item-selected\">\r\n                <i nz-icon nzType=\"user\"></i>\r\n                <span>Profile</span>\r\n            </li>\r\n            <li nz-menu-item routerLink=\"/provider/package\" routerLinkActive=\"ant-menu-item-selected\">\r\n                <i nz-icon nzType=\"calendar\"></i>\r\n                <span>Timesheet</span>\r\n            </li>\r\n            <li nz-menu-item routerLink=\"/provider/calendar\" routerLinkActive=\"ant-menu-item-selected\">\r\n                <i nz-icon nzType=\"calendar\"></i>\r\n                <span>Calendar</span>\r\n            </li>\r\n            <li nz-menu-item routerLink=\"/provider/history\" routerLinkActive=\"ant-menu-item-selected\">\r\n                <i nz-icon nzType=\"history\"></i>\r\n                <span>History</span>\r\n            </li>\r\n            <li nz-menu-item routerLink=\"/provider/leave\" routerLinkActive=\"ant-menu-item-selected\">\r\n                <i nz-icon nzType=\"like\"></i>\r\n                <span>Leave Application</span>\r\n            </li>\r\n            <li nz-menu-item routerLink=\"/provider/document\" routerLinkActive=\"ant-menu-item-selected\">\r\n                <i nz-icon nzType=\"file\"></i>\r\n                <span>Document</span>\r\n            </li>\r\n        </ul>\r\n    </nz-sider>\r\n    <nz-layout>\r\n        <nz-header><app-header-nav></app-header-nav></nz-header>\r\n        <nz-content>\r\n            <!-- <app-breadcrumbs></app-breadcrumbs> -->\r\n            <div class=\"inner-content\">\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n        </nz-content>\r\n        <!-- <nz-footer>Put footer here</nz-footer> -->\r\n    </nz-layout>\r\n</nz-layout>","export * from './home';\r\nexport * from './calendar';\r\nexport * from './document';\r\nexport * from './history';\r\nexport * from './leave';\r\nexport * from './package';\r\nexport * from './profile';","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { FormBuilder, FormControl, FormGroup, Validators, FormArray, ValidatorFn, AbstractControl } from '@angular/forms';\r\n\r\nimport format from 'date-fns/format'\r\nimport differenceInCalendarDays from 'date-fns/differenceInCalendarDays'\r\n\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { GlobalService, StaffService, leaveTypes } from '@services/index';\r\n\r\n@Component({\r\n    styles: [`\r\n        nz-select {\r\n            margin-right: 8px;\r\n            width: 100%;\r\n        }\r\n    `],\r\n    templateUrl: './leave.html'\r\n})\r\n\r\n\r\nexport class LeaveProvider implements OnInit, OnDestroy {\r\n    dateFormat: string = 'dd/MM/yyyy';\r\n    selectedValue: string;\r\n\r\n    notes: string;\r\n\r\n    leaveForm: FormGroup;\r\n\r\n    leaveTypes: Array<string> = leaveTypes\r\n\r\n    loading: boolean = false;\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private message: NzMessageService,\r\n        private globalS: GlobalService,\r\n        private staffS: StaffService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.leaveForm = this.fb.group({\r\n            dates: [[], [Validators.required]],\r\n            leaveTypes: [null, [Validators.required]],\r\n            notes: [null, [Validators.required]]\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n\r\n    submitForm() {\r\n\r\n        for (const i in this.leaveForm.controls) {\r\n            this.leaveForm.controls[i].markAsDirty();\r\n            this.leaveForm.controls[i].updateValueAndValidity();\r\n        }\r\n\r\n        if (!this.leaveForm.valid) {\r\n            this.message.error('Form is invalid!');\r\n            return;\r\n        }\r\n\r\n        const dayDiff = differenceInCalendarDays(this.leaveForm.get('dates').value[1], this.leaveForm.get('dates').value[0]);\r\n\r\n        const durationStr = dayDiff < 1 ?\r\n            {\r\n                day: '1 day',\r\n                date: `${format(this.leaveForm.get('dates').value[1], 'yyyy-MM-dd')}`\r\n            } :\r\n            {\r\n                day: `${dayDiff + 1} days `,\r\n                date: `${format(this.leaveForm.get('dates').value[0], 'MMM dd,yyyy')} - ${format(this.leaveForm.get('dates').value[1], 'MMM dd,yyyy')}`\r\n            };\r\n\r\n        let leave: Dto.LeaveEntry = {\r\n            StaffCode: this.globalS.decode().uniqueID,\r\n            StartDate: format(this.leaveForm.get('dates').value[0], 'yyyy-MM-dd'),\r\n            EndDate: format(this.leaveForm.get('dates').value[1], 'yyyy-MM-dd'),\r\n            Message: {\r\n                Subject: `Leave Application: ${this.globalS.decode().code}`,\r\n                Content: `${durationStr.day} on dates ${durationStr.date}`,\r\n                LeaveType: `${this.leaveForm.get('leaveTypes').value}`,\r\n                Notes: `${this.leaveForm.get('notes').value}`\r\n            },\r\n            CoordinatorEmail: {\r\n                AccountName: this.globalS.decode().code,\r\n                IsRecipient: false\r\n            }\r\n        }\r\n        this.loading = true;\r\n        this.staffS.postleave(leave)\r\n            .subscribe(leave => {\r\n                this.globalS.sToast('Success', 'Leave filed!');\r\n                this.leaveForm.reset();\r\n            }, (err) => {\r\n                this.globalS.eToast('Error', 'Email Server is not setup')\r\n            }, () => {\r\n                this.loading = false;\r\n            });\r\n    }\r\n\r\n    validateDate() {\r\n        Promise.resolve().then(() => {\r\n            // if (isEqual(this.leaveForm.get('dates').value[0], this.leaveForm.get('dates').value[1])) {\r\n            //     this.leaveForm.controls.dates.setErrors({ 'incorrect': true })\r\n            // }\r\n        });\r\n    }\r\n}","<form nz-form nz-col nzSpan=\"10\" [formGroup]=\"leaveForm\" (ngSubmit)=\"submitForm()\">\r\n\r\n    <nz-form-item>\r\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzRequired nzFor=\"email\">Date Range</nz-form-label>\r\n        <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\" nzErrorTip=\"Date range is invalid!\">\r\n            <nz-range-picker [nzFormat]=\"dateFormat\" formControlName=\"dates\" (ngModelChange)=\"validateDate()\">\r\n            </nz-range-picker>\r\n        </nz-form-control>\r\n    </nz-form-item>\r\n\r\n    <nz-form-item>\r\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzRequired nzFor=\"email\">Leave Types</nz-form-label>\r\n        <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\" nzErrorTip=\"Leave Type is required!\">\r\n            <nz-select formControlName=\"leaveTypes\" nzAllowClear nzPlaceHolder=\"\">\r\n                <nz-option *ngFor=\"let leave of leaveTypes\" [nzValue]=\"leave\" [nzLabel]=\"leave\"></nz-option>\r\n            </nz-select>\r\n        </nz-form-control>\r\n    </nz-form-item>\r\n\r\n    <nz-form-item>\r\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzRequired nzFor=\"email\">Notes</nz-form-label>\r\n        <nz-form-control [nzSpan]=\"14\" nzErrorTip=\"Note is required!\">\r\n            <textarea formControlName=\"notes\" rows=\"4\" nz-input></textarea>\r\n        </nz-form-control>\r\n    </nz-form-item>\r\n\r\n\r\n\r\n    <nz-form-item nz-row class=\"register-area\">\r\n        <nz-form-control [nzSpan]=\"14\" [nzOffset]=\"6\">\r\n            <button nz-button nzType=\"primary\" *ngIf=\"!loading\">Apply Leave</button>\r\n            <button nz-button nzType=\"primary\" *ngIf=\"loading\" nzLoading><i nz-icon\r\n                    nzType=\"poweroff\"></i>Loading</button>\r\n        </nz-form-control>\r\n    </nz-form-item>\r\n\r\n</form>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { takeUntil, switchMap, delay } from 'rxjs/operators';\r\nimport { Subject, Subscription, Observable, forkJoin } from 'rxjs';\r\n\r\nimport format from 'date-fns/format';\r\nimport isValid from 'date-fns/isValid';\r\nimport parseISO from 'date-fns/parseISO';\r\nimport parse from 'date-fns/parse';\r\nimport startOfMonth from 'date-fns/startOfMonth';\r\nimport endOfMonth from 'date-fns/endOfMonth';\r\nimport startOfWeek from 'date-fns/startOfWeek';\r\nimport endOfWeek from 'date-fns/endOfWeek';\r\n\r\nimport { GlobalService, StaffService, TimeSheetService } from '@services/index';\r\n\r\ninterface ItemData {\r\n    name: string;\r\n    age: number;\r\n    address: string;\r\n}\r\n\r\ninterface TimeSheetData {\r\n    shiftbookNo: any;\r\n    activityDate: any;\r\n    activityTime: any;\r\n    approved: any;\r\n    start: any;\r\n    end: any;\r\n    duration: any;\r\n    claimStart: any;\r\n    claimEnd: any;\r\n    km: any;\r\n    startKM: any;\r\n    endKM: any;\r\n    recipient: any;\r\n    activity: any;\r\n    program: any;\r\n    ptype: any;\r\n    pquant: any;\r\n    rosterType: any;\r\n    submitted: any;\r\n    note: any;\r\n    billedTo: any;\r\n    status: number;\r\n\r\n}\r\n\r\n@Component({\r\n    styles: [`\r\n        b{\r\n            color:#1890ff;\r\n        }\r\n        p{\r\n            margin:0;\r\n        }\r\n        button.submit{\r\n            background-color: #5bcc82;\r\n            border-color: #5cda88;\r\n        }\r\n        .submit:hover{\r\n            background:#5bcc82d1;\r\n        }\r\n        a:hover{\r\n            text-decoration: underline;\r\n        }\r\n        button{\r\n            margin-left: 5px;\r\n        }\r\n        .btns button{\r\n            font-size:12px;\r\n        }\r\n        app-action{\r\n            float: right;\r\n        }\r\n        td:nth-child(4){\r\n            background:#c3ffb9;\r\n        }\r\n        td:nth-child(5){\r\n            background:#ffb9b9;\r\n        }\r\n        .tclaim{\r\n            font-size: 12px;\r\n            background: #fdff82;\r\n            padding: 2px 5px;\r\n            border-radius: 8px;\r\n            max-width: 7rem;\r\n            display: inline-block;\r\n            text-align:center;\r\n        }\r\n    `],\r\n    templateUrl: './package.html'\r\n})\r\n\r\n\r\nexport class PackageProvider implements OnInit, OnDestroy {\r\n    private unsubscribe$ = new Subject<void>();\r\n\r\n    private obsArray: Array<any> = []\r\n\r\n    payPeriod: any;\r\n    token: any;\r\n    settings: any;\r\n\r\n    inTimesheets: Array<any>;\r\n\r\n    loading: boolean = false;\r\n    listOfData: any[] = [];\r\n    indexPage: number = 0;\r\n\r\n    totalTime: any;\r\n    totalHoursMinutes: any;\r\n\r\n    constructor(\r\n        private globalS: GlobalService,\r\n        private staffS: StaffService,\r\n        private timeS: TimeSheetService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.token = this.globalS.decode();\r\n        this.populate();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unsubscribe$.next();\r\n        this.unsubscribe$.complete();\r\n    }\r\n\r\n    populate() {\r\n        this.staffS.getpayperiod().pipe(takeUntil(this.unsubscribe$)).subscribe(data => {\r\n            this.payPeriod = {\r\n                payperiod: format(parseISO(data.payPeriodEndDate), 'dd MMM yyyy'),\r\n                sDate: format(parseISO(data.start_Date), 'dd MMM yyyy'),\r\n                eDate: format(parseISO(data.end_Date), 'dd MMM yyyy')\r\n            }\r\n        });\r\n\r\n        this.getTimesheetandStatus();\r\n\r\n        this.staffS.getsettings(this.token.nameid).pipe(takeUntil(this.unsubscribe$)).subscribe(data => {\r\n            this.settings = data;\r\n        });\r\n    }\r\n\r\n    getTimesheetandStatus() {\r\n        this.loading = true;\r\n        this.timeS.gettimesheets({\r\n            AccountNo: this.token.code,\r\n            personType: 'Staff',\r\n            startDate: '',\r\n            endDate: ''\r\n        }).pipe(\r\n            delay(200),\r\n            takeUntil(this.unsubscribe$),\r\n            switchMap((data: any) => {\r\n               \r\n                this.listOfData = data.map(x => {\r\n                    return {\r\n                        shiftbookNo: x.shiftbookNo,\r\n                        activityDate: x.activityDate,\r\n                        activityTime: x.activity_Time,\r\n                        approved: x.approved,\r\n                        start: x.activity_Time.start_time,\r\n                        end: x.activity_Time.end_Time,\r\n                        duration: x.activity_Time.calculated_Duration,\r\n                        claimStart: x.claimed_Start,\r\n                        claimEnd: x.claimed_End,\r\n                        km: x.km,\r\n                        startKM: x.start_KM,\r\n                        endKM: x.end_KM,\r\n                        recipient: x.client_Code,\r\n                        activity: x.activity.name,\r\n                        program: x.program.title,\r\n                        ptype: x.payType.paytype,\r\n                        pquant: x.pay.quantity,\r\n                        rosterType: x.roster_Type,\r\n                        submitted: x.submitted,\r\n                        note: x.note,\r\n                        billedTo: x.billedTo.accountNo,\r\n                        status: 0\r\n                    }\r\n                });\r\n                this.calculateTotalApprovedShifts(this.listOfData);\r\n\r\n                this.loading = false;\r\n\r\n                var shiftsList = [];\r\n\r\n                this.listOfData.forEach(x => {\r\n                    shiftsList.push(x.shiftbookNo)\r\n                })\r\n\r\n                return this.timeS.getjobstatus(shiftsList);\r\n\r\n            })).subscribe(data => {\r\n                // console.log(data);\r\n\r\n                this.listOfData.forEach(x => {\r\n                    data.forEach(b => {\r\n                        if (x.shiftbookNo == b.jobNo && !b.isCompleted) {\r\n                            x.status = 1;\r\n                        }\r\n                        if (x.shiftbookNo == b.jobNo && b.isCompleted) {\r\n                            x.status = 2;\r\n                        }\r\n                    });\r\n                })\r\n                return data;\r\n            });\r\n    }\r\n\r\n\r\n    calculateTotalApprovedShifts(timesheets: Array<any>) {\r\n        const approved = timesheets.filter(data => data.approved);\r\n\r\n        var sum = 0;\r\n        approved.forEach(e => {\r\n            const hours = parseInt(format(parse(e.duration, 'HH:mm', new Date()), 'HH')) * 60;\r\n            const minutes = parseInt(format(parse(e.duration, 'HH:mm', new Date()), 'mm'));\r\n            sum = sum + hours + minutes;\r\n        })\r\n\r\n        this.totalTime = sum / 60;\r\n        this.totalHoursMinutes = Math.floor(sum / 60) + ' hrs — ' + sum % 60 + 'min';\r\n    }\r\n\r\n\r\n    nzPageIndexChange(page: number) {\r\n        this.indexPage = (page - 1 )* 10;\r\n    }\r\n\r\n    submitBtnClick(index: number) {\r\n        const { shiftbookNo, claimStart, claimEnd, activityTime, submitted } = this.listOfData[index];\r\n        let data = this.listOfData[index];\r\n\r\n        if (!submitted) {\r\n            let variation: Dto.ClaimVariation = {\r\n                RecordNo: shiftbookNo,\r\n                ClaimedBy: this.token.nameid,\r\n                ClaimedDate: format(new Date(), 'yyyy-MM-dd HH:mm:ss'),\r\n                ClaimedStart: this.parseTimeToDate(activityTime.start_time),\r\n                ClaimedEnd: this.parseTimeToDate(activityTime.end_Time)\r\n            }\r\n\r\n            this.staffS.postclaimvariation(variation).subscribe(res => {\r\n                if (res) {\r\n                    data.claimStart = this.parseTimeToDate(activityTime.start_time);\r\n                    data.claimEnd = this.parseTimeToDate(activityTime.end_Time);\r\n                    this.globalS.sToast(\"Schedule Submitted\", \"Success\");\r\n                    this.populate();\r\n                }\r\n            });\r\n        } else {\r\n            let variation: Dto.ClaimVariation = {\r\n                RecordNo: shiftbookNo,\r\n                ClaimedBy: null,\r\n                ClaimedDate: '1753-01-01 12:00:00',\r\n                ClaimedStart: '1753-01-01 12:00:00',\r\n                ClaimedEnd: '1753-01-01 12:00:00'\r\n            }\r\n\r\n            this.staffS.postclaimvariation(variation).subscribe(res => {\r\n                if (res) {\r\n                    data.claimStart = '1800-01-01 00:00:00';\r\n                    data.claimEnd = '1800-01-01 00:00:00';\r\n                    this.globalS.sToast(\"Schedule Unsubmitted\", \"Success\");\r\n                    this.populate();\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    submitAllBtnClick(submit: boolean) {\r\n\r\n        const list = this.listOfData.filter(time => {\r\n            const timeStart = format(parseISO(time.claimStart), \"HH:mm\");\r\n            const timeEnd = format(parseISO(time.claimEnd), \"HH:mm\");\r\n\r\n            if (!submit && timeStart !== '00:00' && timeEnd != '00:00')\r\n                return time;\r\n            \r\n            if (submit && timeStart == '00:00' && timeEnd == '00:00')\r\n                return time;\r\n        });\r\n\r\n        this.obsArray = [];\r\n        \r\n        list.forEach(data => {\r\n            \r\n            if (submit) {\r\n                let variation: Dto.ClaimVariation = {\r\n                    RecordNo: data.shiftbookNo,\r\n                    ClaimedBy: this.token.nameid,\r\n                    ClaimedDate: format(new Date(), 'yyyy-MM-dd HH:mm:ss'),\r\n                    ClaimedStart: this.parseTimeToDate(data.activityTime.start_time),\r\n                    ClaimedEnd: this.parseTimeToDate(data.activityTime.end_Time)\r\n                }\r\n                \r\n                this.obsArray.push(this.staffS.postclaimvariation(variation));\r\n\r\n                // this.staffS.postclaimvariation(variation).subscribe(res => {\r\n                //     if (res) {\r\n                //         data.claimStart = this.parseTimeToDate(data.activityTime.start_time);\r\n                //         data.claimEnd = this.parseTimeToDate(data.activityTime.end_Time);\r\n                //     }\r\n                // });\r\n            } \r\n\r\n            if (!submit) {\r\n                let variation: Dto.ClaimVariation = {\r\n                    RecordNo: data.shiftbookNo,\r\n                    ClaimedBy: null,\r\n                    ClaimedDate: '1753-01-01 12:00:00',\r\n                    ClaimedStart: '1753-01-01 12:00:00',\r\n                    ClaimedEnd: '1753-01-01 12:00:00'\r\n                }\r\n\r\n                this.obsArray.push(this.staffS.postclaimvariation(variation));\r\n\r\n                // this.staffS.postclaimvariation(variation).subscribe(res => {\r\n                //     if (res) {\r\n                //         data.claimStart = '1800-01-01 00:00:00';\r\n                //         data.claimEnd = '1800-01-01 00:00:00';\r\n                //     }\r\n                // });\r\n            }\r\n        })\r\n        console.log(this.obsArray)\r\n        forkJoin(this.obsArray).subscribe(data => {\r\n            this.globalS.sToast(\"All queries processed!\", \"Success\");\r\n            this.populate();\r\n        })\r\n    }\r\n\r\n    parseTimeToDate(time: string): string {\r\n        return format(parseISO(time), '1753-01-01 HH:mm:ss');\r\n    }\r\n}","<div>\r\n    <div nz-row>\r\n        <nz-descriptions nzTitle=\"\">\r\n            <nz-descriptions-item nzTitle=\"Pay Period\"><b>{{payPeriod?.payperiod}}</b></nz-descriptions-item>\r\n            <nz-descriptions-item nzTitle=\"Date Duration\"><b>{{ payPeriod?.sDate }} — {{ payPeriod?.eDate }}</b>\r\n            </nz-descriptions-item>\r\n            <nz-descriptions-item nzTitle=\"Total Time\"><b>{{ totalTime | number : '1.2-2' }} ({{ totalHoursMinutes }})</b></nz-descriptions-item>\r\n        </nz-descriptions>\r\n    </div>\r\n    <div nz-row style=\"margin-top:1rem\">\r\n        <nz-table #fixedTable nzSize=\"small\" [nzLoading]=\"loading\" [nzData]=\"listOfData\" [nzScroll]=\"{ x: '1800px', y: '350px' }\" (nzPageIndexChange)=\"nzPageIndexChange($event)\">\r\n            <thead>\r\n                <tr>\r\n                    <th nzWidth=\"50px\" nzLeft=\"0px\">#</th>\r\n                    <th nzWidth=\"100px\" nzLeft=\"35px\">Shift No</th>\r\n                    <th nzWidth=\"100px\" nzLeft=\"100px\">Date</th>\r\n                    <th nzWidth=\"100px\">Start Time</th>\r\n                    <th nzWidth=\"100px\">End Time</th>\r\n                    <th nzWidth=\"100px\">Duration</th>\r\n                    <th nzWidth=\"100px\">Claimed Start</th>\r\n                    <th nzWidth=\"100px\">Claimed End</th>\r\n                    <th nzWidth=\"200px\">Recipient OR Location</th>\r\n                    <th nzWidth=\"300px\">Activity</th>\r\n                    <th nzWidth=\"300px\">Notes</th>\r\n                    <th nzWidth=\"150px\" nzRight=\"0px\">\r\n                        <button class=\"submit\" nz-button nzType=\"primary\" [nzSize]=\"'small'\" nz-popconfirm\r\n                                nzPopconfirmTitle=\"This would submit all shifts?\" nzOkText=\"Yes\" nzCancelText=\"Cancel\"\r\n                                (nzOnConfirm)=\"submitAllBtnClick(true)\" nz-tooltip nzTooltipTitle=\"Submit All\"><i nz-icon nzType=\"check\" nzTheme=\"outline\" ></i> </button>\r\n\r\n                        <button nz-button nzType=\"danger\" [nzSize]=\"'small'\" nz-popconfirm\r\n                            nzPopconfirmTitle=\"This would unsubmit all shifts?\" nzOkText=\"Yes\" nzCancelText=\"Cancel\"\r\n                            (nzOnConfirm)=\"submitAllBtnClick(false)\" nz-tooltip nzTooltipTitle=\"Unsubmit All\"><i nz-icon nzType=\"close\" nzTheme=\"outline\"></i> </button>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of fixedTable.data;let i = index\">\r\n                    <td nzLeft=\"0px\">{{ i + indexPage + 1 }}</td>\r\n                    <td nzLeft=\"35px\">{{ data.shiftbookNo }}</td>\r\n                    <td nzLeft=\"100px\">{{ data.activityDate | date:'dd/MM/yyyy' }}</td>\r\n                    <td>{{ data.start | date: 'HH:mm' }}</td>\r\n                    <td>{{ data.end | date: 'HH:mm' }}</td>\r\n                    <td>{{ data.duration }}</td>\r\n                    <td>{{ data.claimStart | date: 'HH:mm' }}</td>\r\n                    <td>{{ data.claimEnd | date: 'HH:mm' }}</td>\r\n                    <td>{{ data.recipient }}</td>\r\n                    <td>{{ data.activity }}</td>\r\n                    <td>{{ data.note }}</td>\r\n                    <td nzRight=\"0px\">\r\n                        <div class=\"btns\">\r\n                            \r\n                            <ng-container *ngIf=\"data.rosterType == 9\">\r\n                                <div class=\"tclaim\">\r\n                                    <span><b>Travel Claim</b></span>\r\n                                    <div>\r\n                                        <span class=\"badge badge-1\"><i nz-icon nzType=\"car\" nzTheme=\"outline\"></i> {{ data.km }} KM</span>\r\n                                        <p>{{data.startKM }} → {{data.endKM}}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-container>\r\n                            \r\n                            <ng-container *ngIf=\"data.rosterType == 5\">\r\n                                <span class=\"badge travel-time\">Travel Time</span>\r\n                            </ng-container>\r\n\r\n                            <ng-container *ngIf=\"!(data.rosterType == 5 || data.rosterType == 9)\">\r\n                                <button *ngIf=\"!data.submitted\" class=\"submit\" nz-button nzType=\"primary\" [nzSize]=\"'small'\" nz-popconfirm\r\n                                    nzPopconfirmTitle=\"Are you sure to submit this shift?\" nzOkText=\"Yes\" nzCancelText=\"Cancel\"\r\n                                    (nzOnConfirm)=\"submitBtnClick(i)\">Submit</button>\r\n                                \r\n                                <button *ngIf=\"data.submitted\" nz-button nzType=\"danger\" [nzSize]=\"'small'\" nz-popconfirm\r\n                                    nzPopconfirmTitle=\"Are you sure to unsubmit this shift?\" nzOkText=\"Yes\" nzCancelText=\"Cancel\"\r\n                                    (nzOnConfirm)=\"submitBtnClick(i)\">Unsubmit</button>\r\n                            </ng-container>\r\n                                \r\n                            <!-- <button nz-button class=\"options\" nzType=\"primary\" [nzSize]=\"'small'\"><i nz-icon nzType=\"setting\" nzTheme=\"outline\"></i></button> -->\r\n                            <app-action [data]=\"data\" [settings]=\"settings\"></app-action>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\nimport { GlobalService, } from '@services/index';\r\ndeclare var Dto: any;\r\n\r\n@Component({\r\n    styles: [`\r\n\r\n    `],\r\n    templateUrl: './profile.html'\r\n})\r\n\r\n\r\nexport class ProfileProvider implements OnInit, OnDestroy {\r\n    user: Dto.ProfileInterface;\r\n    constructor(\r\n        private globalS: GlobalService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = this.globalS.decode();\r\n        this.user = {\r\n            name: token.code,\r\n            view: 'staff'\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n}","<div>\r\n     <app-profile-page [(ngModel)]=\"user\" name=\"fieldName\" ngDefaultControl></app-profile-page>\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from \"moment\";\r\nimport format  from 'date-fns/format';\r\n\r\n@Pipe({ name: 'dmz' })\r\nexport class DayManagerPopulate implements PipeTransform {\r\n    transform(value: any, dayPop: any) {\r\n        let total: number = 0;\r\n        let filtered: Array<any> = [];\r\n\r\n        filtered = value.filter(x => x.date == format(new Date(dayPop), 'yyyy/MM/dd'));\r\n        filtered.forEach(x => {\r\n            if (x.ShiftType && (x.ShiftType).toUpperCase() !== 'UNAVAILABLE') {\r\n                total = (total + x.Duration * 5);\r\n            }\r\n        });\r\n        total = total / 60;\r\n\r\n        if (filtered.length == 0)\r\n            filtered.push({ isNone: true });\r\n        else\r\n            filtered.push({ isLast: true, total: total });\r\n\r\n        return filtered;\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'removefirstlast' })\r\nexport class RemoveFirstLast implements PipeTransform {\r\n    transform(value: string): string {\r\n        let temp = value;\r\n        if (value.slice(0, 1) == \"<\" && value.slice(-1) == \">\")\r\n            temp = temp.slice(1, -1);\r\n\r\n        return temp;\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'momentTimePackage' })\r\nexport class MomentTimePackage implements PipeTransform {\r\n    transform(value: string): string {\r\n        const time = moment(value).format('HH:mm');\r\n        return time === \"00:00\" ? \"12:00\" : time;\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'splitArr' })\r\nexport class SplitArrayPipe implements PipeTransform {\r\n    transform(value: any, arg1: any, arg2: any) {\r\n        return value.slice(arg1, arg2);\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'filter' })\r\nexport class FilterPipe implements PipeTransform {\r\n    transform(value: any, filter: any): any {\r\n        if (filter && Array.isArray(value)) {\r\n            return value.filter(item => {\r\n                return (new RegExp(filter, 'gi').test(item.accountNo) == true);\r\n            });\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'keys' })\r\nexport class KeyFilter implements PipeTransform {\r\n    transform(value: any): any {\r\n        let keyArr = [];\r\n        for (let key in value) {\r\n            keyArr.push({ key: key, value: value[key] });\r\n        }\r\n        return keyArr;\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'keyValue' })\r\nexport class KeyValueFilter implements PipeTransform {\r\n    transform(value: any): any {\r\n        if (!value) return;\r\n        return Object.keys(value[0]);\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'fileNameFilter' })\r\nexport class FileNameFilter implements PipeTransform {\r\n    transform(value: any): any {\r\n        return value.split('.')[0];\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'fileSizeFilter' })\r\nexport class FileSizeFilter implements PipeTransform {\r\n    transform(value: any): any {\r\n        if (12000 < value) {\r\n            return (value / Math.pow(1024, 2)).toFixed(2) + ' MB'\r\n        }\r\n        return value + ' BYTES'\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'monthPeriodFilter' })\r\nexport class MonthPeriodFilter implements PipeTransform {\r\n    transform(value: any): any {\r\n        const startOfMonth = moment(value).startOf('month').format('MMMM DD');\r\n        const endOfMonth = moment(value).endOf('month').format('-DD YYYY');\r\n        return startOfMonth + ' ' + endOfMonth;\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core'\r\nimport { Router, CanDeactivate } from '@angular/router'\r\nimport { GlobalService } from './global.service';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface GenericComponent {\r\n    canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CanDeactivateGuard implements CanDeactivate<GenericComponent> {\r\n\r\n    constructor(\r\n        private globalS: GlobalService,\r\n        private router: Router\r\n    ) {\r\n\r\n    }\r\n\r\n    canDeactivate(component: GenericComponent) {\r\n        return component.canDeactivate ? component.canDeactivate() : true;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { GlobalService } from '@services/global.service';\r\n\r\nimport {\r\n    CanActivate,\r\n    Router,\r\n    CanActivateChild,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot\r\n} from '@angular/router';\r\n\r\n@Injectable()\r\nexport class RouteGuard implements CanActivate, CanActivateChild{\r\n\r\n    constructor(\r\n        private globalS: GlobalService,\r\n        private router: Router\r\n    ){\r\n\r\n    }\r\n \r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean{  \r\n        console.log(this.globalS.redirectURL)\r\n\r\n        if (!this.globalS.isExpired()) {\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['']);\r\n\r\n        this.detectStaffDirectAccess(state.url);\r\n        return false;\r\n    }\r\n\r\n    isStaffDirectAccess(url: string): boolean {\r\n        console.log(url)\r\n        const urlLen = url.split('?');\r\n\r\n        if (urlLen.length > 1 && new URLSearchParams(urlLen[1]).has('securityByPass') &&\r\n            new URLSearchParams(urlLen[1]).get('securityByPass')) {\r\n            return true;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n    \r\n    detectStaffDirectAccess(url: string) {\r\n        const urlLen = url.split('?');\r\n\r\n        if (urlLen.length > 1 && new URLSearchParams(urlLen[1]).has('securityByPass') &&\r\n            new URLSearchParams(urlLen[1]).get('securityByPass')) {            \r\n            this.globalS.redirectURL = url;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):boolean {     \r\n        if(!this.globalS.isExpired()){\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['']);\r\n\r\n        this.detectStaffDirectAccess(state.url);\r\n\r\n        return false;\r\n    }\r\n}","import { Injectable, Injector, ErrorHandler } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable ,  throwError } from 'rxjs';\r\nimport { map,retry, takeUntil, catchError, delay } from 'rxjs/operators';\r\n\r\nimport { GlobalService } from './global.service';\r\n\r\nconst headers = new HttpHeaders().set('Content-Type','application/json')\r\n            \r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService implements ErrorHandler{\r\n    constructor(\r\n        private http: HttpClient,\r\n        private GlobalS: GlobalService,\r\n        private injector: Injector\r\n    ) { \r\n        \r\n    }\r\n\r\n    getImage(url: string, params: any = null): Observable<any> {\r\n        var _params = this.GlobalS.serialize(params);\r\n        return this.http.get(url, { params: _params })\r\n            .pipe(\r\n                catchError(err => this.handleError(err))\r\n            )\r\n    }\r\n\r\n    post(url: string, data: any, _headers: HttpHeaders = null): Observable<any>{\r\n        return this.http.post(url, data, { headers: _headers || headers })\r\n                        .pipe(\r\n                            catchError(err => this.handleError(err))\r\n                        )\r\n    }\r\n\r\n    uploadFile(url: string, data: FormData): Observable<any>{\r\n\r\n        return this.http.post(url, data, { reportProgress: true })        \r\n                        .pipe(\r\n                            catchError(err => this.handleError(err))\r\n                        )\r\n    }\r\n\r\n    get(url: string, params: any = null): Observable<any>{\r\n        var _params = this.GlobalS.serialize(params);\r\n        return this.http.get(url, { params: _params })\r\n                    .pipe(\r\n                        catchError(err => this.handleError(err))\r\n                    )\r\n    }\r\n\r\n    put(url: string, data: any = null): Observable<any>{\r\n        return this.http.put(url, data, { headers })\r\n                        .pipe(\r\n                            catchError(err => this.handleError(err))\r\n                        )\r\n    }\r\n\r\n    delete(url:string, params: any = null): Observable<any>{\r\n        var _params = this.GlobalS.serialize(params);\r\n        return this.http.delete(url, { params: _params })\r\n                    .pipe(\r\n                        catchError(err => this.handleError(err))\r\n                    )\r\n    }\r\n\r\n    handleError(error: Error | HttpErrorResponse) {       \r\n        // if (error.message === \"No JWT present or has expired\") {\r\n        //     this.global.TokenExpired = 'true';\r\n        //     this.global.logout();\r\n        //     return Observable.empty();\r\n        // }\r\n        this.GlobalS.eToast('Error', 'An error occured');\r\n        return throwError(error);\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\nconst url: string = \"api/cache\"\r\n\r\n@Injectable()\r\nexport class CacheService {\r\n    constructor(\r\n        public http: HttpClient,\r\n        public auth: AuthService\r\n    ){ }\r\n\r\n    getusers(): Observable<any>{\r\n        return this.auth.get(`${url}`);\r\n    }\r\n\r\n    deleteuser(id: string): Observable<any>{\r\n        return this.auth.get(`${url}/remove/${id}`);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { URL } from '@constants/constant';\r\n\r\nconst client: string = `api/client`;\r\nconst global: string = `api/global`\r\n\r\ndeclare var Dto: any;\r\n@Injectable()\r\nexport class ClientService {\r\n    constructor(\r\n        private auth: AuthService\r\n    ) { }\r\n\r\n    getagencydefinedgroup(accountNo: string): Observable<any>{\r\n        return this.auth.get(`${client}/agencydefinedgroup/${accountNo}`);\r\n    }\r\n\r\n    postprofile(data: any): Observable<any> {\r\n        return this.auth.post(`${client}/profile`, data);\r\n    }\r\n\r\n    isAccountNoUnique(name: string): Observable<any> {\r\n        return this.auth.get(`${client}/is-accountno-unique/${name}`);\r\n    }\r\n\r\n    postcancelbooking(data: any): Observable<any> {\r\n        return this.auth.post(`${client}/cancel-booking`, data);\r\n    }\r\n\r\n    getservicenotes(data: any): Observable<any> {\r\n        return this.auth.get(`${client}/servicenotes`, data);\r\n    }\r\n\r\n    postemailcoordinator(data: any): Observable<any> {\r\n        return this.auth.post(`${client}/email-coordinator`, data);\r\n    }\r\n\r\n    postpreferences(id: string, preferences: Array<string>): Observable<any> {\r\n        return this.auth.post(`${client}/preferences/${id}`, preferences);\r\n    }\r\n\r\n    getpreferences(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/preferences/${id}`);\r\n    }\r\n\r\n    getusergroup(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/usergroups/${id}`);\r\n    }\r\n\r\n    getprofile(code: string): Observable<any> {\r\n        return this.auth.get(`${client}/profile`, { code: code })\r\n    }\r\n\r\n    getaddress(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/address`, { id: id })\r\n    }\r\n\r\n    getusualaddress(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/address/usual/${id}`)\r\n    }\r\n\r\n    gettopaddress(idList: Array<string>): Observable<any> {\r\n        return this.auth.get(`${client}/address/top`, { idList: idList });\r\n    }\r\n\r\n    getprimaryaddressnyname(name: string): Observable<any> {\r\n        return this.auth.get(`${client}/address/primary/name/${name}`)\r\n    }\r\n\r\n    getprimaryaddress(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/address/primary/${id}`)\r\n    }\r\n\r\n    getcontacts(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/contact`, { id: id })\r\n    }\r\n\r\n    getservicesapproved(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/services/approved/${id}`);\r\n    }\r\n\r\n    getcaseprogressnote(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/note/caseprogress/${id}`);\r\n    }\r\n\r\n    getopnote(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/note/opnote/${id}`);\r\n    }\r\n\r\n    getrostermaster(worker: Dto.WorkerInput): Observable<any> {\r\n        return this.auth.get(`${client}/roster/master`, worker);\r\n    }\r\n\r\n    getrosterworker(worker: Dto.WorkerInput): Observable<any> {\r\n        return this.auth.get(`${client}/roster/worker`, worker);\r\n    }\r\n\r\n    getcurrentcareplan(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/careplan/current/${id}`);\r\n    }\r\n\r\n    getprogramsapproved(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/programs/approved/${id}`);\r\n    }\r\n\r\n    getrelativecontacts(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/contact/relative/${id}`);\r\n    }\r\n\r\n    getalerts(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/alerts/${id}`);\r\n    }\r\n\r\n    getservicetasklist(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/servicetasklist/${id}`);\r\n    }\r\n\r\n    getcontacttype(): Observable<any> {\r\n        return this.auth.get(`${client}/contact/type`)\r\n    }\r\n\r\n    getaddresstype(): Observable<any> {\r\n        return this.auth.get(`${client}/address/type`)\r\n    }\r\n\r\n    getmanagers(): Observable<any> {\r\n        return this.auth.get(`${global}/managers`)\r\n    }\r\n\r\n    getsuburb(suburb: Dto.SuburbIn): Observable<any> {\r\n        return this.auth.get(`${global}/suburb`, suburb)\r\n    }\r\n\r\n    getactiveprogram(program: Dto.ProgramActive): Observable<any> {\r\n        return this.auth.get(`${client}/program/active`, program)\r\n    }\r\n\r\n    getpackages(getpackage: Dto.GetPackage): Observable<any> {\r\n        return this.auth.get(`${client}/package`, getpackage)\r\n    }\r\n\r\n    getbalances(getpackage: Dto.GetPackage): Observable<any> {\r\n        return this.auth.get(`${client}/balances`, getpackage);\r\n    }\r\n\r\n    getapprovedservices(service: Dto.ApproveService): Observable<any> {\r\n        return this.auth.get(`${client}/approvedservices`, service);\r\n    }\r\n\r\n    getqualifiedstaff(staff: Dto.QualifiedStaff): Observable<any> {\r\n        return this.auth.get(`${client}/qualifiedstaff`, staff);\r\n    }\r\n\r\n    getcompetencies(uname: string): Observable<any> {\r\n        return this.auth.get(`${client}/competencies/${uname}`);\r\n    }\r\n\r\n    //tabs ----------------------------------------------------------------------------------------------\r\n\r\n    getopnotes(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/opnotes/${id}`)\r\n    }\r\n\r\n    getopnoteswithdate(data: any): Observable<any> {\r\n        return this.auth.get(`${client}/opnotes-dates`, data);\r\n    }\r\n\r\n    updateopnotes(data: any, recordNo: string): Observable<any> {\r\n        return this.auth.put(`${client}/opnotes/${recordNo}`, data)\r\n    }\r\n\r\n    postopnotes(data: any, personId: string): Observable<any> {\r\n        return this.auth.post(`${client}/opnotes/${personId}`, data)\r\n    }\r\n\r\n    deleteopnotes(id: number): Observable<any> {\r\n        return this.auth.delete(`${client}/opnotes/${id}`)\r\n    }\r\n\r\n    getincidents(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/incidents/${id}`)\r\n    }\r\n\r\n    getloans(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/loans/${id}`);\r\n    }\r\n\r\n    updateloans() {\r\n\r\n    }\r\n\r\n    deleteloans(id: number): Observable<any> {\r\n        return this.auth.delete(`${client}/loans/${id}`)\r\n    }\r\n\r\n    getpermroster(name: string): Observable<any> {\r\n        return this.auth.get(`${client}/permroster/${name}`);\r\n    }\r\n\r\n    gethistory(name: string): Observable<any> {\r\n        return this.auth.get(`${client}/history/${name}`);\r\n    }\r\n\r\n    getcasenotes(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/casenotes/${id}`);\r\n    }\r\n\r\n    updatecasenotes(data: any, id: number): Observable<any> {\r\n        return this.auth.put(`${client}/casenotes/${id}`, data)\r\n    }\r\n\r\n    postcasenotes(data: any, personId: string): Observable<any> {\r\n        return this.auth.post(`${client}/casenotes/${personId}`, data)\r\n    }\r\n\r\n    deletecasenotes(id: number): Observable<any> {\r\n        return this.auth.delete(`${client}/casenotes/${id}`)\r\n    }\r\n\r\n    getreminders(id: string): Observable<any> {\r\n        return this.auth.get(`${client}/reminders/${id}`);\r\n    }\r\n\r\n    // getcontactskin(id: string): Observable<any>{\r\n    //     return this.auth.get(`${client}/contacts/kin/${id}`);\r\n    // }\r\n\r\n    //tabs end  ----------------------------------------------------------------------------------------------\r\n\r\n    addbooking(book: Dto.AddBooking): Observable<any> {\r\n        return this.auth.post(`${client}/booking`, book);\r\n    }\r\n\r\n    addcontact(contact: Array<Dto.PhoneFaxOther>): Observable<any> {\r\n        return this.auth.post(`${client}/user/contact`, contact);\r\n    }\r\n\r\n    addaddress(address: Array<Dto.NamesAndAddresses>): Observable<any> {\r\n        return this.auth.post(`${client}/user/address`, address);\r\n    }\r\n\r\n    updateusername(user: Dto.Recipients): Observable<any> {\r\n        return this.auth.put(`${client}/user/name`, user)\r\n    }\r\n\r\n    updateuseraddress(address: Array<Dto.NamesAndAddresses>): Observable<any> {\r\n        return this.auth.put(`${client}/user/address`, address)\r\n    }\r\n\r\n    updateusercontact(contact: Array<Dto.PhoneFaxOther>): Observable<any> {\r\n        return this.auth.put(`${client}/user/contact`, contact)\r\n    }\r\n\r\n    deletecontact(contact: Dto.PhoneFaxOther): Observable<any> {\r\n        return this.auth.delete(`${client}/user/contact`, contact);\r\n    }\r\n\r\n    deleteaddress(address: Dto.NamesAndAddresses): Observable<any> {\r\n        return this.auth.delete(`${client}/user/address`, address);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { AuthService } from './auth.service';\r\n\r\nimport { Observable } from 'rxjs';\r\nconst email: string = \"api/email\"\r\n@Injectable()\r\nexport class EmailService {\r\n\r\n    constructor(\r\n        private auth: AuthService\r\n    ){  }\r\n\r\n    sendMail(message: Dto.EmailMessage = null): Observable<any>{\r\n        return this.auth.post(`${email}/email`, message);\r\n    }\r\n\r\n    \r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\nconst exec: string = \"api/executable\"\r\n\r\n@Injectable()\r\nexport class ExecutableService {\r\n    constructor(\r\n        public http: HttpClient,\r\n        public auth: AuthService\r\n    ){ }\r\n\r\n \r\n    updateexecutable(user: any): Observable<any>{\r\n        return this.auth.put(`${exec}/select-user`, user);\r\n    }\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport * as moment from 'moment';\r\n\r\nimport { NzNotificationService } from 'ng-zorro-antd/notification';\r\n\r\nconst helper = new JwtHelperService();\r\n\r\nimport { FormGroup} from '@angular/forms';\r\n\r\nimport format from 'date-fns/format';\r\nimport isValid from 'date-fns/isValid'\r\nimport getHours from 'date-fns/getHours'\r\nimport getMinutes from 'date-fns/getMinutes'\r\n\r\nexport const roles = {\r\n    provider: 'SERVICE PROVIDER',\r\n    client: 'PORTAL CLIENT',\r\n    admin: 'ADMIN USER',\r\n    portal: 'PORTAL CLIENT MULTI',\r\n    manager: 'CLIENT MANAGER'\r\n}\r\n\r\nexport const view = {\r\n    staff: 'staff',\r\n    recipient: 'recipient',\r\n    admin: 'admin'\r\n}\r\n\r\nexport const ROSTER_TYPE = {\r\n    2: \"ONEONONE\",\r\n    3: \"BROKERED SERVICE\",\r\n    4: \"LEAVE ABSENCE\",\r\n    5: \"TRAVEL TIME\",\r\n    6: \"ADMIN ACTIVITY\",\r\n    7: \"ADMISSION SERVICE\",\r\n    8: \"SLEEPOVER\",\r\n    9: \"\",\r\n    10: \"TRANSPORT\",\r\n    11: \"CENTRE BASED ACTIVITY\",\r\n    12: \"GROUP ACTIVITY\",\r\n    13: \"UNAVAILABILITY\",\r\n    14: \"ITEM\"\r\n}\r\nexport const fundingDropDowns = {\r\n    type: ['CACP', 'EACH', 'EACHD', 'DS', 'OTHER'],\r\n    status: ['REFERRAL', 'WAITING LIST', 'ACTIVE', 'ON HOLD', 'INACTIVE'],\r\n    expireUsing: ['CHARGE RATE', 'PAY UNIT RATE', 'ACTIVITY AVG COST'],\r\n    homeCare: ['MM', 'ARIA'],\r\n    packageTerm: ['ONGOING WITH PERIODICAL REVIEW', 'TERMINATING'],\r\n    costType: ['HOURS', 'DOLLARS', 'SERVICES'],\r\n    perUnit: ['PER', 'TOTAL'],\r\n    period: ['DAY', 'WEEK', 'FORTNIGHT', '4 WEEKS', 'MONTH', '6 WEEKS', 'QUARTER', '6 MONTHS', 'YEAR'],\r\n    length: ['WEEK', 'FORTNIGHT', '4 WEEKS', 'MONTH', '6 WEEKS', 'QUARTER', '6 MONTHS', 'YEAR', 'ONGOING', 'OTHER'],\r\n    alerts: ['HOURS', 'DOLLARS', 'SERVICES'],\r\n    cycle: ['CYCLE 1', 'CYCLE 2', 'CYCLE 3', 'CYCLE 4', 'CYCLE 5', 'CYCLE 6', 'CYCLE 7', 'CYCLE 8', 'CYCLE 9', 'CYCLE 10']\r\n}\r\n\r\nexport const states = ['AUSTRALIAN CAPITAL TERRITORY', 'NEW SOUTH WALES', 'NORTHERN TERRITORY', 'QUEENSLAND', 'SOUTH AUSTRALIA', 'TASMANIA', 'VICTORIA', 'WESTERN AUSTRALIA']\r\nexport const cycles = ['1st Monday - CYCLE 1', '1st Tuesday - CYCLE 1', '1st Wednesday - CYCLE 1', '1st Thursday - CYCLE 1', '1st Friday - CYCLE 1']\r\nexport const billunit = ['HOUR', 'SERVICE']\r\nexport const period = ['DAY', 'WEEKLY', 'FNIGHTLY', 'MONTH', 'QUARTER', 'HALF YEAR', 'YEAR']\r\nexport const status = ['WAIT LIST', 'ON HOLD', 'ACTIVE', 'INACTIVE']\r\nexport const achievementIndex = ['(1) NOT ACHIEVED', '(2) PARTIALLY ACHIEVED', '(3) MOSTLY ACHIEVED', '(4) FULLY ACHIEVED', '(5) ONGOING', '(6) FUNDING NOT APPROVED']\r\nexport const caldStatuses = ['CALD BACKGROUND', 'NOT CALD BACKGROUND']\r\nexport const titles = [\"Mr\", \"Ms\", \"Mrs\", \"Dr\"]\r\nexport const types = ['', 'BROKERAGE ORGANISATION', 'STAFF', 'SUNDRY BROKERAGE SUPPLIER', 'VOLUNTEER']\r\nexport const gender = ['', 'MALE', 'FEMALE', 'NOT STATED']\r\nexport const months = moment.months()\r\nexport const recurringInt = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']\r\nexport const recurringStr = ['Day/s', 'Week/s', 'Month/s', 'Year/s']\r\nexport const days = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'];\r\n\r\nexport const incidentTypes: Array<string> = [\"BEHAVIOURAL\", \"CONDUCT\", \"HEALTHINSURER\", \"MEDICAL\", \"PUNCTUALITY / ATTENDANCE\", \"SERIOUS INCIDENT\", \"OTHER\"]\r\nexport const leaveTypes: string[] = [\"OTHER LEAVE\", \"REC LEAVE\", \"SICK LEAVE\"];\r\nexport const incidentSeverity: string[] = [\"LOW\", \"MEDIUM\", \"HIGH\"];\r\nexport const statuses: Array<string> = ['', 'CASUAL', 'CONTRACT', 'FULL TIME CONTRACT', 'FULL TIME PERMANENT', 'PART TIME CONTRACT', 'PART TIME PERMANENT'];\r\nexport const contactGroups: Array<string> = ['1-NEXT OF KIN', '2-CARER', '3-MEDICAL', '4-ALLIED HEALTH', '5-HEALTH INSURANCE', '6-POWER OF ATTORNEY', '7-LEGAL OTHER', '8-OTHER'];\r\n\r\n@Injectable()\r\nexport class GlobalService {\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private toastr: ToastrService,\r\n        private notification: NzNotificationService\r\n    ) {\r\n\r\n    }\r\n\r\n    static filterDate(date: any) {\r\n        return date != null ? moment(date).format() : null\r\n    }\r\n\r\n    sample() {\r\n        return 'gwapo';\r\n    }\r\n\r\n    viewRender(token: string) {\r\n\r\n        if (this.isVarNull(token))\r\n            return false;\r\n\r\n        let _temp = this.decode(token);\r\n\r\n        let data: Dto.Jwt = {\r\n            aud: _temp.aud,\r\n            code: _temp.code,\r\n            exp: _temp.exp,\r\n            iss: _temp.iss,\r\n            jti: _temp.jti,\r\n            nbf: _temp.nbf,\r\n            role: _temp.role,\r\n            user: _temp.user\r\n        }\r\n\r\n        if (data.role === roles.provider)\r\n            this.router.navigate(['provider']);\r\n        if (data.role === roles.admin)\r\n            this.router.navigate(['admin']);\r\n        if (data.role === roles.client || data.role === roles.manager)\r\n            this.router.navigate(['client']);\r\n        if (data.role === roles.portal)\r\n            this.router.navigate(['portal']);\r\n    }\r\n\r\n    get settings(): string {\r\n        return JSON.parse(localStorage.getItem('settings'));\r\n    }\r\n\r\n    set settings(data: string) {\r\n        localStorage.setItem('settings', JSON.stringify(data));\r\n    }\r\n\r\n    get redirectURL(): string {\r\n        return localStorage.getItem('redirectURL');\r\n    }\r\n\r\n    set redirectURL(data: string) {\r\n        localStorage.setItem('redirectURL', data);\r\n    }\r\n\r\n    get ISTAFF_BYPASS(): string {\r\n        return localStorage.getItem('isStaffByPass');\r\n    }\r\n\r\n    set ISTAFF_BYPASS(data: string) {\r\n        localStorage.setItem('isStaffByPass', data);\r\n    }\r\n\r\n    get member(): string {\r\n        return localStorage.getItem('member');\r\n    }\r\n\r\n    set member(data: string) {\r\n        localStorage.setItem('member', data);\r\n    }\r\n\r\n    get packageStatement(): string {\r\n        return localStorage.getItem('package_statement');\r\n    }\r\n\r\n    set packageStatement(data: string) {\r\n        localStorage.setItem('package_statement', data);\r\n    }\r\n\r\n    get token(): string {\r\n        return localStorage.getItem('access_token');\r\n    }\r\n\r\n    set token(data: string) {\r\n        localStorage.setItem('access_token', data);\r\n    }\r\n\r\n    get userProfile() {\r\n        return JSON.parse(localStorage.getItem('profile'));\r\n    }\r\n\r\n    set userProfile(data: any) {\r\n        localStorage.setItem('profile', JSON.stringify(data));\r\n    }\r\n\r\n    get userSettings() {\r\n        return JSON.parse(localStorage.getItem('settings'));\r\n    }\r\n\r\n    set userSettings(data: any) {\r\n        localStorage.setItem('settings', JSON.stringify(data));\r\n    }\r\n\r\n    isRecipients999() {\r\n        return this.userSettings.Recipients === 999;\r\n    }\r\n\r\n    isVarNull(data: any) {\r\n        return data == null || data == \"\";\r\n    }\r\n\r\n    isRole(): string {\r\n        if (!this.isVarNull(this.token)) {\r\n            let _temp = this.decode(this.token);\r\n            return _temp.role;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    decode(token: string = this.token) {\r\n        return helper.decodeToken(token);\r\n    }\r\n\r\n    clearTokens(): void {\r\n        localStorage.clear();\r\n    }\r\n\r\n    year(): Array<string> {\r\n        const year = [];\r\n        const currentYear = moment().year();\r\n        for (let count = currentYear - 110; count <= currentYear; count++)\r\n            year.push(count.toString());\r\n\r\n        return year;\r\n    }\r\n\r\n    isExpired() {\r\n        return helper.isTokenExpired(this.token);\r\n    }\r\n\r\n    filterYear(date: string) {\r\n        return new DatePipe('en-US').transform(date, 'yyyy');\r\n    }\r\n\r\n    filterMonth(date: string): string {\r\n        var monthStr = new DatePipe('en-US').transform(date, 'MM');\r\n        return months[parseInt(monthStr) - 1];\r\n    }\r\n\r\n    filterDay(date: string) {\r\n        return new DatePipe('en-US').transform(date, 'dd');\r\n    }\r\n\r\n    serialize(obj: any): any {\r\n\r\n        if (obj == null)\r\n            return {};\r\n\r\n        let params = new HttpParams();\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                var element = obj[key];\r\n                params = params.set(key, element);\r\n            }\r\n        }\r\n        return params;\r\n    }\r\n\r\n    isLeapYear(year): boolean {\r\n        return ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);\r\n    }\r\n\r\n    findIndex(searchStr: string, arrAny: Array<any>, key: string): number {\r\n        for (var a = 0, len = arrAny.length; a < len; a++) {\r\n            if (arrAny[a][key] === searchStr) {\r\n                return a;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    IsRTF2TextRequired(escaped: string) {\r\n        return (((escaped.match(/\\\\/g) || []).length > 5 && (escaped.match(/{/g) || []).length > 0 && (escaped.match(/}/g) || []).length > 0));  \r\n    }\r\n\r\n    searchOf(data: string, arrString: Array<string>, def: string): string {\r\n        var ifFound = {\r\n            state: false,\r\n            index: -1\r\n        };\r\n        if (data == null)\r\n            return '';\r\n\r\n        var temp = data.toLowerCase();\r\n        for (var a = 0; a < arrString.length; a++) {\r\n            if (arrString[a].toLowerCase().indexOf(temp) > -1) {\r\n                ifFound.state = true;\r\n                ifFound.index = a;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!ifFound.state)\r\n            return def || '';\r\n\r\n        return arrString[ifFound.index];\r\n    }\r\n\r\n    getMinutes(time: string): number {\r\n        var momentTime = moment(time, 'HH:mm');\r\n        return momentTime.hours() * 60 + momentTime.minutes();\r\n    }\r\n\r\n    twentynine(): Array<string> {\r\n        return days.filter(x => {\r\n            if (parseInt(x) < 30)\r\n                return x;\r\n        })\r\n    }\r\n\r\n    thirty() {\r\n        return days.filter(x => {\r\n            if (parseInt(x) < 31)\r\n                return x;\r\n        })\r\n    }\r\n\r\n    twentyeight() {\r\n        return days.filter(x => {\r\n            if (parseInt(x) < 29)\r\n                return x;\r\n        })\r\n    }\r\n\r\n    hasNoEmpty(data: any) {\r\n        for (var prop in data) {\r\n            if (!data[prop] || data[prop] == null || data[prop] == \"\")\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    logout() {\r\n        this.clearTokens();\r\n        this.router.navigate(['']);\r\n    }\r\n\r\n    sToast(title: string = 'Success', details: string) {\r\n        this.notification.success(title, details);\r\n        //this.toastr.success(details, title);\r\n    }\r\n\r\n    wToast(title: string, details: string) {\r\n        this.notification.warning(title, details);\r\n        //this.toastr.warning(title, details);\r\n    }\r\n\r\n    iToast(title: string, details: string) {\r\n        this.notification.info(title, details);\r\n        //this.toastr.info(title, details);\r\n    }\r\n\r\n    eToast(title: string, details: string) {\r\n        this.notification.error(title, details);\r\n        //this.toastr.error(details, title);\r\n    }\r\n\r\n    isEmpty(value: any) {\r\n        return (value == null || value.length === 0);\r\n    }\r\n\r\n    isCurrentRoute(router: any, currRoute: string) {\r\n        const urlSplit = router.url.split('/');\r\n        return urlSplit[urlSplit.length - 1] === currRoute;\r\n    }\r\n\r\n    acceptOnlyNumeric(data: KeyboardEvent) {\r\n        if (!(data.key.length == 1 && /^[0-9 ]+$/.test(data.key))) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    acceptOnlyLetters(data: KeyboardEvent) {\r\n        if ((/^[a-zA-Z\\s]*$/.test(data.key))) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getDateOnly(date: string) {\r\n        const newDate = format(Date.parse(date),'dd/MM/yyyy');\r\n        return newDate;\r\n    }\r\n\r\n    VALIDATE_AND_FIX_DATETIMEZONE_ANOMALY(date: string | Date): Date | null {\r\n        if (!date) return null;\r\n        var cleanDate = new Date(date);\r\n\r\n        if (isValid(cleanDate)) {\r\n            // FIXING the Date anomaly by giving the time static values\r\n            return new Date(cleanDate.getFullYear(), cleanDate.getMonth(), cleanDate.getDate(), 12, 0, 0, 0);\r\n        }\r\n        // returns current date\r\n        return null;\r\n    }\r\n\r\n    rt2filter(data: string): string {\r\n        let strFilter = \"\";\r\n\r\n        if (data && data.split('\\\\fs').length > 1) {\r\n            let arrStr = data.split('\\\\fs');\r\n            arrStr.pop();\r\n            strFilter = arrStr.join();\r\n        }\r\n\r\n        return strFilter || data;\r\n    }\r\n\r\n    solveTime(time: any, interval: any, isAdd: boolean) {\r\n        const _time = moment(time, ['HH:mm'])\r\n        const _interval = moment(interval, ['HH:mm'])\r\n\r\n        var newTime;\r\n\r\n        if (isAdd) {\r\n            newTime = moment(_time).add(_interval.hour(), 'h').add(_interval.minute(), 'm');\r\n        } else {\r\n            newTime = moment(_time).subtract(_interval.hour(), 'h').subtract(_interval.minute(), 'm');\r\n        }\r\n        return moment(newTime).format('HH:mm');\r\n    }\r\n\r\n    isVarious(data: Array<any>) {\r\n        return data && data.length > 1 ? 'VARIOUS' : data[0].program;\r\n    }\r\n\r\n    getEarliestTime(dates: Array<any>) {\r\n        if (dates.length == 0) return null;\r\n        var earliestDate = dates.reduce((pre, curr) => {\r\n            return Date.parse(pre) > Date.parse(curr) ? curr : pre;\r\n        })\r\n        return earliestDate;\r\n    }\r\n\r\n    randomString(): string {\r\n        return `_${Math.random().toString(36).substr(2, 9)}`;\r\n    }\r\n\r\n    computeTime(_start: any, _end: any): Dto.DateTimeVariables {\r\n\r\n        const minutesInAnHour = 60;\r\n\r\n        const start = moment(_start, ['HH:mm']);\r\n        const end = moment(_end, ['HH:mm']);\r\n        const invalid = 'Invalid Time'\r\n\r\n        if (start.hour() > end.hour()) return { durationStr: invalid }\r\n        if (start.hour() === end.hour() && start.minute() >= end.minute()) return { durationStr: invalid }\r\n\r\n        var starttime = start.hour() * minutesInAnHour + start.minutes();\r\n        var endtime = end.hour() * minutesInAnHour + end.minutes();\r\n\r\n        var diffTime = endtime - starttime;\r\n        const diffHour = Math.floor(diffTime / minutesInAnHour);\r\n        const diffMinutes = diffTime % minutesInAnHour;\r\n\r\n        return {\r\n            durationStr: diffHour + ' hr ' + diffMinutes + ' min',\r\n            duration: (diffTime / minutesInAnHour) * 12,\r\n            durationInHours: (diffTime / minutesInAnHour),\r\n            quants: (diffTime / minutesInAnHour).toFixed(2),\r\n            blockNo: starttime / 5\r\n        }\r\n    }\r\n\r\n    computeTimeDATE_FNS(_start: any, _end: any): Dto.DateTimeVariables {\r\n        \r\n        const minutesInAnHour = 60;\r\n        const invalid = 'Invalid Time'\r\n\r\n        if (getHours(_start) > getHours(_end)) return { durationStr: invalid }\r\n        if (getHours(_start) === getHours(_end) && getMinutes(_start) >= getMinutes(_end)) return { durationStr: invalid }\r\n\r\n        var starttime = getHours(_start) * minutesInAnHour + getMinutes(_start);\r\n        var endtime = getHours(_end) * minutesInAnHour + getMinutes(_end);\r\n\r\n        var diffTime = endtime - starttime;\r\n        const diffHour = Math.floor(diffTime / minutesInAnHour);\r\n        const diffMinutes = diffTime % minutesInAnHour;\r\n\r\n        return {\r\n            durationStr: diffHour + ' hr ' + diffMinutes + ' min',\r\n            duration: (diffTime / minutesInAnHour) * 12,\r\n            durationInHours: (diffTime / minutesInAnHour),\r\n            quants: (diffTime / minutesInAnHour).toFixed(2),\r\n            blockNo: starttime / 5\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    IsFormValid(inputForm: FormGroup): boolean {\r\n        for (const i in inputForm.controls) {\r\n            inputForm.controls[i].markAsDirty();\r\n            inputForm.controls[i].updateValueAndValidity();\r\n        }\r\n\r\n        if (!inputForm.valid)\r\n            return false;\r\n        return true;\r\n    }\r\n\r\n    filterFontLiterals(data: any): string {\r\n        if (!data) return '';\r\n\r\n        if (data.split('\\\\').length > 1) {\r\n            return data.split(/\\n/)[1].split('\\\\fs17')[1]\r\n        }\r\n        else\r\n            return data;\r\n    }\r\n\r\n    filterDate(date: any): string {\r\n        return moment(date).format('DD/MM/YYYY')\r\n    }\r\n\r\n    dateInput(date: any): string {\r\n        if (!date) return null;\r\n        return moment(date).format();\r\n    }\r\n\r\n    filterTime(date: any): string {\r\n        return moment(date).format('HH:mm')\r\n    }\r\n\r\n    getStartEndCurrentMonth(): any {\r\n        let date = {\r\n            start: moment().startOf('month'),\r\n            end: moment().endOf('month')\r\n        }\r\n        return date;\r\n    }\r\n\r\n\r\n}","export * from './auth.service'\r\nexport * from './auth.candeactivateguard'\r\nexport * from './login.service'\r\nexport * from './global.service'\r\nexport * from './client.service'\r\nexport * from './staff.service'\r\nexport * from './report.service'\r\nexport * from './auth.guard'\r\nexport * from './login.guard'\r\nexport * from './timesheet.service'\r\nexport * from './email.service'\r\nexport * from './upload.service'\r\nexport * from './list.service'\r\nexport * from './member.service'\r\nexport * from './executable.service'\r\nexport * from './landing.service'\r\nexport * from './job.service'\r\nexport * from './cache.service'\r\nexport * from './script.service'\r\nexport * from './share.service'\r\nexport * from './settings.service'","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\nconst job: string = \"api/job\"\r\n\r\n@Injectable()\r\nexport class JobService {\r\n    constructor(\r\n        public http: HttpClient,\r\n        public auth: AuthService\r\n    ){ }\r\n\r\n    poststartjob(data: any): Observable<any>{\r\n        return this.auth.post(`${job}/start-job`, data);\r\n    }\r\n\r\n    postendjob(data: any): Observable<any>{\r\n        return this.auth.post(`${job}/end-job`, data);\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\nconst landing: string = \"api/landing\"\r\n\r\n@Injectable()\r\nexport class LandingService {\r\n    constructor(\r\n        public http: HttpClient,\r\n        public auth: AuthService\r\n    ){ }\r\n\r\n    // Add/ChangeUsers    \r\n    GetUserRecord(name: string):Observable<any>{\r\n        return this.auth.get(`${landing}/GetUserRecord/${name}`)\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\nconst list: string = \"api/list\"\r\n\r\n@Injectable()\r\nexport class ListService {\r\n    constructor(\r\n        public http: HttpClient,\r\n        public auth: AuthService\r\n    ) { }\r\n    \r\n    getserviceactivityall(data: any) {\r\n        return this.auth.get(`${list}/activities/all/`, data);\r\n    }\r\n\r\n    getchargetype(data: any): Observable<any>{\r\n        return this.auth.get(`${list}/quote/chargeType`, data);\r\n    }\r\n\r\n    getglobaltemplate(): Observable<any>{\r\n        return this.auth.get(`${list}/template/list`);\r\n    }\r\n\r\n    getprogramcontingency(personID: string): Observable<any>{\r\n        return this.auth.get(`${list}/program/contingency/list/${personID}`);\r\n    }\r\n\r\n    getfundingpackagepurposelist(): Observable<any>{\r\n        return this.auth.get(`${list}/funding/package-purpose/list`);\r\n    }\r\n\r\n    getfundingprioritylist(): Observable<any>{\r\n        return this.auth.get(`${list}/funding/priority/list`);\r\n    }\r\n\r\n    getfundingpackagelist(personID: string): Observable<any>{\r\n        return this.auth.get(`${list}/funding/packages/list/${personID}`);\r\n    }\r\n\r\n    getlistkintype(contactGroup: string): Observable<any>{\r\n        return this.auth.get(`${list}/kin-type/${contactGroup}`);\r\n    }\r\n\r\n    getrostertypelist(): Observable<any>{\r\n        return this.auth.get(`${list}/roster-type`);\r\n    }\r\n\r\n    getrecipientsearch(data: any): Observable<any>{\r\n        return this.auth.get(`${list}/recipient-search`, data);\r\n    }    \r\n    \r\n    getreportcriterialist(listType: any): Observable<any>{\r\n        return this.auth.get(`${list}/GetReportCriteriaList`, listType);\r\n    }\r\n\r\n    getcstdaoutlets(): Observable<any>{\r\n        return this.auth.get(`${list}/cstdaoutlets`);\r\n    }\r\n\r\n    getimlocation(): Observable<any>{\r\n        return this.auth.get(`${list}/imlocation`);\r\n    }\r\n\r\n    getpaycode(data: any): Observable<any>{\r\n        return this.auth.get(`${list}/paycode`, data);\r\n    }\r\n\r\n    getprograms(data: any): Observable<any>{\r\n        return this.auth.get(`${list}/programs`, data);\r\n    }\r\n\r\n    getactivities():Observable<any>{\r\n        return this.auth.get(`${list}/activities`);\r\n    }\r\n\r\n    getleaveactivitycodes(data: any): Observable<any>{\r\n        return this.auth.get(`${list}/leave-activity-codes`, data)\r\n    }\r\n\r\n    getadmitprograms(personID: string): Observable<any>{\r\n        return this.auth.get(`${list}/admit-program/${personID}`)\r\n    }\r\n\r\n    getcasenotecategory(index: number): Observable<any>{\r\n        return this.auth.get(`${list}/case-note-category/${index}`)\r\n    }\r\n\r\n    getadmitservices(program: string): Observable<any>{\r\n        return this.auth.get(`${list}/admit-services/${program}`)\r\n    }\r\n\r\n    getchargeamount(title: string): Observable<any>{\r\n        return this.auth.get(`${list}/charge-amount/${title}`)\r\n    }\r\n\r\n    postitem(data:any):Observable<any>{\r\n        return this.auth.post(`${list}/item`, data)\r\n    }\r\n    \r\n    postreinstate(data:any):Observable<any>{\r\n        return this.auth.post(`${list}/reinstate`, data)\r\n    }\r\n\r\n    postnotproceed(data:any):Observable<any>{\r\n        return this.auth.post(`${list}/not-proceed`, data)\r\n    }\r\n\r\n    postadministration(data: any): Observable<any>{\r\n        return this.auth.post(`${list}/administration`, data)\r\n    }\r\n\r\n    postwaitlist(data: any):Observable<any>{\r\n        return this.auth.post(`${list}/waitlist`, data)\r\n    }\r\n\r\n    postdischarge(data: any): Observable<any>{\r\n        return this.auth.post(`${list}/discharge`, data)\r\n    }\r\n\r\n    postdeath(data: Dto.CallDeceaseProcedure): Observable<any>{\r\n        return this.auth.post(`${list}/death`, data)\r\n    }\r\n\r\n    postadmission(data: any): Observable<any>{\r\n        return this.auth.post(`${list}/admission`, data)\r\n    }\r\n\r\n    postcheckclonepackage(data: any): Observable<any>{\r\n        return this.auth.post(`${list}/clonepackage`, data)\r\n    }\r\n\r\n    postassessment(data: any): Observable<any>{\r\n        return this.auth.post(`${list}/assessment`, data)\r\n    }\r\n\r\n    postreferralin(data: any): Observable<any>{\r\n        return this.auth.post(`${list}/referral-in`, data)\r\n    }\r\n\r\n    postreferralout(data: Dto.CallReferralOutProcedure): Observable<any>{\r\n        return this.auth.post(`${list}/referral-out`, data);\r\n    }\r\n\r\n    postclientpackage(data: any): Observable<any>{\r\n        return this.auth.post(`${list}/set-client-package`, data)\r\n    }\r\n\r\n    postclonepackage(data: any): Observable<any>{\r\n        return this.auth.post(`${list}/clone-package`, data)\r\n    }\r\n\r\n    getpackagetemplate(type: string): Observable<any>{\r\n        return this.auth.get(`${list}/package-template/${type}`)\r\n    }\r\n\r\n    postnote(data: any): Observable<any>{\r\n        return this.auth.post(`${list}/create-note`, data)\r\n    }\r\n\r\n    postroster(data: any): Observable<any>{\r\n        return this.auth.post(`${list}/create-roster`, data)\r\n    }\r\n\r\n    getstaffofbranch(data: any): Observable<any>{\r\n        return this.auth.post(`${list}/get-staff-branch`, data)\r\n    }\r\n\r\n    getwizardreminderto():Observable<any>{        \r\n        return this.auth.get(`${list}/wizard-reminder-to`)\r\n    }\r\n\r\n    getstatusofwizard(personId: string): Observable<any>{\r\n        return this.auth.get(`${list}/status-of-wizards/${personId}`)\r\n    }\r\n    \r\n    getwizardreferralsource(dataset: string = ''): Observable<any>{        \r\n        return this.auth.get(`${list}/wizards-referral-source/${dataset}`)\r\n    }\r\n\r\n    getwizardnote(whatnote: string): Observable<any>{\r\n        return this.auth.get(`${list}/wizards-note/${whatnote}`)\r\n    }\r\n\r\n    getwizardreferralcode(): Observable<any>{\r\n        return this.auth.get(`${list}/wizards-referral-code`)\r\n    }\r\n\r\n    getwizardreferraltypes(service: any): Observable<any>{\r\n        return this.auth.get(`${list}/wizards-referral-type`, service)\r\n    }\r\n\r\n    getwizardprograms(personID: string): Observable<any>{\r\n        return this.auth.get(`${list}/wizards-programs/${personID}`)\r\n    }\r\n\r\n    deletelist(data: any): Observable<any>{\r\n        return this.auth.delete(`${list}/delete-sql`, data)\r\n    }\r\n\r\n    insertlist(data: any): Observable<any>{\r\n        return this.auth.post(`${list}/insert-sql`, data)\r\n    }\r\n\r\n    postSql(data: any): Observable<any>{\r\n        return this.auth.post(`${list}/insertSql`, data)\r\n    }\r\n\r\n    deleteSql(data: any): Observable<any>{\r\n        return this.auth.post(`${list}/deleteSql`, data)\r\n    }\r\n\r\n    updateSql(data: any):Observable<any>{\r\n        return this.auth.put(`${list}/updateSql`, data)\r\n    }\r\n\r\n    updatelist(data: any): Observable<any>{\r\n        return this.auth.put(`${list}/update-sql`, data)\r\n    }\r\n\r\n    getlist(sqlString: string): Observable<any>{\r\n        return this.auth.post(`${list}/get-list`, { Sql: sqlString})\r\n    }\r\n\r\n    getcoordinators(): Observable<any>{\r\n        return this.auth.get(`${list}/coordinators`)\r\n    }\r\n\r\n    getactiveprograms(): Observable<any>{\r\n        return this.auth.get(`${list}/active-programs`)\r\n    }\r\n\r\n    getleavebalances(personID: string): Observable<any>{\r\n        return this.auth.get(`${list}/leave-balances/${personID}`)\r\n    }\r\n\r\n    getreasonunavailability(): Observable<any>{\r\n        return this.auth.get(`${list}/reason-unavailability`)\r\n    }\r\n\r\n    getleaveprograms(): Observable<any>{\r\n        return this.auth.get(`${list}/leave/programs`)\r\n    }\r\n\r\n    getstaffcategory(): Observable<any>{\r\n        return this.auth.get(`${list}/staff-category`)\r\n    }\r\n    \r\n    getstaffdiscipline(): Observable<any>{\r\n        return this.auth.get(`${list}/staff-discipline`)\r\n    }\r\n\r\n    getstaffcaredomain(): Observable<any>{\r\n        return this.auth.get(`${list}/staff-caredomain`)\r\n    }\r\n\r\n    getresources(): Observable<any>{\r\n        return this.auth.get(`${list}/resources`)\r\n    }\r\n    getawards(): Observable<any>{\r\n        return this.auth.get(`${list}/intake/awards/list`)\r\n    }\r\n\r\n    getcareplan(): Observable<any>{\r\n        return this.auth.get(`${list}/intake/careplan/list`)\r\n    }\r\n\r\n    getcaredomain(): Observable<any>{\r\n        return this.auth.get(`${list}/intake/caredomain/list`)\r\n    }\r\n\r\n    getdiscipline(): Observable<any>{\r\n        return this.auth.get(`${list}/intake/discipline/list`)\r\n    }\r\n    \r\n    gettemplatelist():Observable<any>{\r\n        return this.auth.get(`${list}/intake/template/list`)\r\n    }\r\n    \r\n    getintakerecipientall(): Observable<any>{\r\n        return this.auth.get(`${list}/intake/recipients/all`)\r\n    }\r\n    getpensionall(): Observable<any>{\r\n        return this.auth.get(`${list}/pension/all`)\r\n    }\r\n\r\n    getpension(personID: string): Observable<any>{\r\n        return this.auth.get(`${list}/pension/${personID}`)\r\n    }   \r\n\r\n    getlistrecipientreminders(): Observable<any>{\r\n        return this.auth.get(`${list}/recipient/reminders`)\r\n    }   \r\n\r\n    getcompetenciesall(): Observable<any>{\r\n        return this.auth.get(`${list}/competencies/all`)\r\n    }\r\n\r\n    getintakeprogram(personID: string): Observable<any>{\r\n        return this.auth.get(`${list}/intake/services/programs/${personID}`)\r\n    }\r\n\r\n    getintakeactivity(personID: string, program: string, date: string): Observable<any>{\r\n        return this.auth.get(`${list}/intake/activity/${personID}/${program}/${date}`)\r\n    }\r\n\r\n    getintakestaff(personID: string): Observable<any>{\r\n        return this.auth.get(`${list}/intake/staff/${personID}`)\r\n    }\r\n\r\n    GetTraccsStaffCodes(): Observable<any>{\r\n        return this.auth.get(`${list}/Users/TraccsStaffCodes`)\r\n    }\r\n\r\n    GetTraccsClientCodes(): Observable<any>{\r\n        return this.auth.get(`${list}/Users/TraccsClientCodes`)\r\n    }\r\n\r\n    getintakecompetencies(personID: string): Observable<any>{\r\n        return this.auth.get(`${list}/intake/competencies/${personID}`)\r\n    }\r\n\r\n    getintakegoals(personID: string): Observable<any>{\r\n        return this.auth.get(`${list}/intake/goals/${personID}`)\r\n    }\r\n\r\n    getintakebranches(personID: string): Observable<any>{\r\n        return this.auth.get(`${list}/intake/branches/${personID}`)\r\n    }\r\n\r\n    getpensionstatus():Observable<any>{\r\n        return this.auth.get(`${list}/insurance/pension-status`)\r\n    }\r\n\r\n    getcardstatus(): Observable<any>{\r\n        return this.auth.get(`${list}/insurance/card-status`)\r\n    }\r\n\r\n    getloanitems(): Observable<any>{\r\n        return this.auth.get(`${list}/loan/items`)\r\n    }\r\n\r\n    getloanprograms(): Observable<any>{\r\n        return this.auth.get(`${list}/loan/programs`)\r\n    }\r\n\r\n    getlistbranches(): Observable<any>{\r\n        return this.auth.get(`${list}/branches`)\r\n    }\r\n\r\n    getliststaffgroup(): Observable<any>{\r\n        return this.auth.get(`${list}/staffgroup`)\r\n    }\r\n\r\n    getliststaffadmin(): Observable<any>{\r\n        return this.auth.get(`${list}/staffadmin`)\r\n    }\r\n\r\n    getliststaffteam(): Observable<any>{\r\n        return this.auth.get(`${list}/staffteam`)\r\n    }\r\n\r\n    getlistcasemanagers(): Observable<any>{\r\n        return this.auth.get(`${list}/casemanagers`)\r\n    }\r\n\r\n    getlistreminders(): Observable<any>{\r\n        return this.auth.get(`${list}/reminders`)\r\n    }    \r\n\r\n    getlistquotes(data: any): Observable<any>{\r\n        return this.auth.get(`${list}/quotes`, data)\r\n    }\r\n\r\n    postloan(data: any, personID: string): Observable<any>{\r\n        return this.auth.post(`${list}/loan/${personID}`, data)\r\n    }\r\n\r\n    getlistindigstatus(): Observable<any>{\r\n        return this.auth.get(`${list}/indigenous`)\r\n    }\r\n\r\n    getlistdisabilities(): Observable<any>{\r\n        return this.auth.get(`${list}/disabilities`)\r\n    }\r\n\r\n    getlisthr(): Observable<any>{\r\n        return this.auth.get(`${list}/hrgroups`)\r\n    }\r\n\r\n    getlistop(): Observable<any>{\r\n        return this.auth.get(`${list}/opgroups`)\r\n    }\r\n\r\n    getlistpositions(): Observable<any>{\r\n        return this.auth.get(`${list}/positions`)\r\n    }\r\n\r\n    getlistuserdefined1(): Observable<any>{\r\n        return this.auth.get(`${list}/staff/userdefined-1`)\r\n    }\r\n\r\n    getlistuserdefined2(): Observable<any>{\r\n        return this.auth.get(`${list}/staff/userdefined-2`)\r\n    }\r\n\r\n    getserviceregion(): Observable<any>{        \r\n        return this.auth.get(`${list}/serviceregion`)\r\n    }\r\n\r\n    getconsents(personId: string):Observable<any>{\r\n        return this.auth.get(`${list}/consent/${personId}`)\r\n    }\r\n\r\n    getusergroup(personID: string):Observable<any>{\r\n        return this.auth.get(`${list}/group/usergroup/${personID}`)\r\n    }\r\n\r\n    getrecipientpreference(personID: string):Observable<any>{\r\n        return this.auth.get(`${list}/group/recipient-preference/${personID}`)\r\n    }\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate, CanActivateChild } from '@angular/router'\r\n\r\nimport { GlobalService } from './global.service';\r\n\r\n@Injectable()\r\nexport class LoginGuard implements CanActivate, CanActivateChild{\r\n\r\n    constructor(\r\n        private globalS: GlobalService,\r\n        private router: Router\r\n    ){\r\n\r\n    }\r\n \r\n    canActivate(): boolean{           \r\n        if(this.globalS.isEmpty(this.globalS.token) || this.globalS.isExpired()){\r\n            this.globalS.clearTokens();\r\n            return true;\r\n        }\r\n        this.globalS.viewRender(this.globalS.token);\r\n        return false;\r\n    }\r\n\r\n    canActivateChild():boolean {     \r\n        if(!this.globalS.isExpired()){\r\n            return true;\r\n        }\r\n        this.router.navigate(['']);\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\nimport { URL } from '@constants/constant';\r\n\r\nconst login: string = `api/login`;\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n    constructor(\r\n        public http: HttpClient,\r\n        public auth: AuthService\r\n    ) { }\r\n\r\n    testservice() {\r\n        return this.http.get(`${login}/test-service`)\r\n    }\r\n\r\n    login(data: any) {\r\n        return this.auth.post(`${login}`, data);\r\n    }\r\n\r\n    logout(uid: string) {\r\n        return this.auth.post(`${login}/logout`, JSON.stringify(uid));\r\n    }\r\n\r\n    serialize(obj: any) {\r\n        let params: URLSearchParams = new URLSearchParams();\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                var element = obj[key];\r\n                params.set(key, element);\r\n            }\r\n        }\r\n        return params;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthService } from './auth.service';\r\nimport { HttpParams } from '@angular/common/http';\r\n\r\n\r\nconst members: string = \"api/members\";\r\n\r\n@Injectable()\r\nexport class MemberService {\r\n    constructor(\r\n        private auth: AuthService\r\n    ){ }\r\n\r\n    getmembers(data: any){\r\n        return this.auth.get(`${members}/members`, data);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst report = 'api/report';\r\n@Injectable()\r\nexport class ReportService {\r\n    constructor(\r\n        private auth: AuthService\r\n    ){}\r\n\r\n    getreferrallist(): Observable<any>{\r\n        return this.auth.get(`${report}/referrallist`);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\ninterface Scripts {\r\n  name: string;\r\n  src: string;\r\n}\r\nexport const ScriptStore: Scripts[] = [\r\n  { name: 'pdfMake', src: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.62/pdfmake.min.js' },\r\n  { name: 'vfsFonts', src: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.62/vfs_fonts.js' }\r\n];\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScriptService {\r\n\r\n  private scripts: any = {};\r\n\r\n  constructor() {\r\n    ScriptStore.forEach((script: any) => {\r\n      this.scripts[script.name] = {\r\n        loaded: false,\r\n        src: script.src\r\n      };\r\n    });\r\n  }\r\n\r\n  load(...scripts: string[]) {\r\n    const promises: any[] = [];\r\n    scripts.forEach((script) => promises.push(this.loadScript(script)));\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  loadScript(name: string) {\r\n    return new Promise((resolve, reject) => {\r\n      // resolve if already loaded\r\n      if (this.scripts[name].loaded) {\r\n        resolve({ script: name, loaded: true, status: 'Already Loaded' });\r\n      } else {\r\n        // load script\r\n        const script = document.createElement('script');\r\n        script.type = 'text/javascript';\r\n        script.src = this.scripts[name].src;\r\n        script.onload = () => {\r\n          this.scripts[name].loaded = true;\r\n          console.log(`${name} Loaded.`);\r\n          resolve({ script: name, loaded: true, status: 'Loaded' });\r\n        };\r\n        script.onerror = (error: any) => resolve({ script: name, loaded: false, status: 'Loaded' });\r\n        document.getElementsByTagName('head')[0].appendChild(script);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { TimeSheetService } from '@services/timesheet.service';\r\nimport { GlobalService } from '@services/global.service';\r\n\r\n@Injectable()\r\nexport class SettingsService {\r\n\r\n    constructor(\r\n        private timeS: TimeSheetService,\r\n        private globalS: GlobalService\r\n    ) { \r\n\r\n    }\r\n\r\n    getSettings(name: any) {\r\n        this.timeS.getusersettings(name).subscribe(data => {\r\n            this.globalS.settings = data;\r\n            console.log(data);\r\n        });\r\n    }\r\n    \r\n    VERIFY_OUTPUT(value: string): boolean {\r\n        if (!value) return false;\r\n\r\n        let _value = value.toLowerCase();\r\n        if (_value == 'true') return true;\r\n        return false;\r\n    }\r\n    \r\n    //allowBooking\r\n    ALLOWBOOKING(): boolean {\r\n        let settings: any = this.globalS.settings;\r\n        if (!settings) return false;\r\n\r\n        return this.VERIFY_OUTPUT(settings.allowBooking);\r\n    }\r\n\r\n    ALLOWCASENOTE(): boolean {\r\n        let settings: any = this.globalS.settings;\r\n        if (!settings) return false;\r\n\r\n        return this.VERIFY_OUTPUT(settings.allowCaseNote);\r\n    }\r\n    \r\n    CANCHOOSEPROVIDER(): boolean{\r\n        let settings: any = this.globalS.settings;\r\n        if (!settings) return false;\r\n\r\n        return this.VERIFY_OUTPUT(settings.canChooseProvider);\r\n    }\r\n\r\n    CANSEEPROVIDERGENDER(): boolean {\r\n        let settings: any = this.globalS.settings;\r\n        if (!settings) return false;\r\n\r\n        return this.VERIFY_OUTPUT(settings.canSeeProviderGender);\r\n    }\r\n\r\n    //canSeeProviderPhoto\r\n    CANSEEPROVIDERPHOTO(): boolean{\r\n        let settings: any = this.globalS.settings;\r\n        if (!settings) return false;\r\n\r\n        return this.VERIFY_OUTPUT(settings.canSeeProviderPhoto);\r\n    }\r\n\r\n    //canSeeProviderAge\r\n    CANSEEPROVIDERAGE(): boolean {\r\n        let settings: any = this.globalS.settings;\r\n        if (!settings) return false;\r\n\r\n        return this.VERIFY_OUTPUT(settings.canSeeProviderAge);\r\n    }\r\n\r\n    //canSeeProviderReviews\r\n    CANESEEPROVIDERREVIEWS(): boolean {\r\n        let settings: any = this.globalS.settings;\r\n        if (!settings) return false;\r\n\r\n        return this.VERIFY_OUTPUT(settings.canSeeProviderReviews);\r\n    }\r\n\r\n    \r\n    \r\n    ALLOWMARKETING(): boolean {\r\n        let settings: any = this.globalS.settings;\r\n        if (!settings) return false;\r\n\r\n        return this.VERIFY_OUTPUT(settings.allowsMarketing);\r\n    }\r\n\r\n    BOOKINGLEADTIME(): number{\r\n        let settings: any = this.globalS.settings;\r\n        if (!settings) return 0;\r\n\r\n        return settings.bookingLeadTime ? parseInt(settings.bookingLeadTime) + 1 : 1;\r\n    }\r\n\r\n    \r\n}","import { BehaviorSubject, Subject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ShareService {\r\n    private emitChangeSource = new Subject<any>();\r\n    private emitOnSearchList = new BehaviorSubject(false);\r\n    private emitRouteChangeSource = new Subject<any>();\r\n\r\n    private pickedObject: any;\r\n\r\n    changeEmitted$ = this.emitChangeSource.asObservable();\r\n    emitRouteChangeSource$ = this.emitRouteChangeSource.asObservable();\r\n    emitOnSearchList$ = this.emitOnSearchList.asObservable();\r\n\r\n    emitChange(change: any) {\r\n        this.pickedObject = change;\r\n        this.emitChangeSource.next(change);\r\n    }\r\n\r\n    getPicked() {\r\n        return this.pickedObject;\r\n    }\r\n\r\n    emitOnSearchListNext(change: any) {\r\n        this.emitOnSearchList.next(change);\r\n    }\r\n\r\n    emitRouteChange(index: number, changeRoute: boolean = false) {\r\n        const route = {\r\n            index: index,\r\n            changeRoute: changeRoute\r\n        }\r\n        this.emitRouteChangeSource.next(route);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthService } from './auth.service';\r\nimport { HttpParams } from '@angular/common/http';\r\n\r\n\r\nconst staff: string = \"api/staff\"\r\nconst timesheet: string = \"api/timesheet\"\r\nconst global: string = \"api/global\"\r\n\r\ndeclare var Dto: any;\r\n@Injectable()\r\nexport class StaffService {\r\n    constructor(\r\n        private auth: AuthService\r\n    ) { }\r\n\r\n    getimages(data: any): Observable<any> {\r\n        return this.auth.getImage(`${staff}/images`, data);\r\n    }\r\n\r\n    postincidentapplication(data: any): Observable<any> {\r\n        return this.auth.post(`${staff}/incident-application`, data);\r\n    }\r\n\r\n    isAccountNoUnique(name: string): Observable<any> {\r\n        return this.auth.get(`${staff}/is-accountno-unique/${name}`);\r\n    }\r\n\r\n    getstaffrecordview(uname: string): Observable<any> {\r\n        return this.auth.get(`${staff}/staffrecordview/${uname}`);\r\n    }\r\n\r\n    updatedisabilitystatus(data: any): Observable<any> {\r\n        return this.auth.put(`${staff}/disabilitystatus`, data)\r\n    }\r\n\r\n    getprofile(code: string): Observable<any> {\r\n        return this.auth.get(`${staff}/profile/${code}`);\r\n    }\r\n\r\n    poststaffprofile(data: any) {\r\n        return this.auth.post(`${staff}/profile`, data);\r\n    }\r\n\r\n    getaddress(code: string): Observable<any> {\r\n        return this.auth.get(`${staff}/address/${code}`);\r\n    }\r\n\r\n    getcontacts(code: string): Observable<any> {\r\n        return this.auth.get(`${staff}/contact/${code}`);\r\n    }\r\n\r\n    getpayperiod(): Observable<any> {\r\n        return this.auth.get(`${staff}/payperiod`);\r\n    }\r\n\r\n    getsettings(name: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/user/settings/${name}`);\r\n    }\r\n\r\n    getroster(roster: Dto.Roster) {\r\n        return this.auth.get(`${timesheet}/roster`, roster);\r\n    }\r\n\r\n    getmobilefuturelimit(name: string) {\r\n        return this.auth.get(`${staff}/mobilefuturelimit/${name}`);\r\n    }\r\n\r\n    postclaimvariation(cv: Dto.ClaimVariation): Observable<any> {\r\n        return this.auth.post(`${staff}/claimvariation`, cv);\r\n    }\r\n\r\n    posttravelclaim(claim: Dto.TravelClaim): Observable<any> {\r\n        return this.auth.post(`${staff}/travelclaim`, claim);\r\n    }\r\n\r\n    postclientnote(cnote: Dto.ClientNote): Observable<any> {\r\n        return this.auth.post(`${staff}/clientnote`, cnote);\r\n    }\r\n\r\n    postrecordincident(incident: Dto.RecordIncident): Observable<any> {\r\n        return this.auth.post(`${staff}/incident`, incident);\r\n    }\r\n\r\n    updaterosternote(note: Dto.RosterNote): Observable<any> {\r\n        return this.auth.put(`${staff}/notes`, note);\r\n    }\r\n\r\n    updateusername(staffVal: Dto.Staffs): Observable<any> {\r\n        return this.auth.put(`${staff}/user/name`, staffVal);\r\n    }\r\n\r\n    postleave(entry: Dto.LeaveEntry): Observable<any> {\r\n        return this.auth.post(`${staff}/leave`, entry);\r\n    }\r\n}","import { Injectable, Input } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\nimport { GlobalService } from './global.service';\r\n\r\nconst timesheet: string = \"api/timesheet\";\r\n\r\ndeclare var Dto: any;\r\n@Injectable()\r\nexport class TimeSheetService {\r\n\r\n    constructor(\r\n        public http: HttpClient,\r\n        public auth: AuthService,\r\n        public globalS: GlobalService\r\n    ) { }\r\n\r\n    getclosedate(name: string): Observable<any>{\r\n        return this.auth.get(`${timesheet}/closedate/${name}`);\r\n    }\r\n\r\n    getpayunits(payType: string): Observable<any>{\r\n        return this.auth.get(`${timesheet}/pay-units/${payType}`);\r\n    }\r\n\r\n    getbillingrate(data: any): Observable<any>{\r\n        return this.auth.get(`${timesheet}/billingrate`, data);\r\n    }\r\n\r\n    updateshiftquery(recordNo: number): Observable<any>{\r\n        return this.auth.put(`${timesheet}/shift/query/${recordNo}`);\r\n    }\r\n\r\n    updateshiftapproved(recordNo: number): Observable<any>{\r\n        return this.auth.put(`${timesheet}/shift/approve/${recordNo}`);\r\n    }\r\n\r\n    updatetimeoverlap(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/time-overlap`, data);\r\n    }\r\n\r\n    getusersettings(name: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/user/settings/${name}`);\r\n    }\r\n\r\n    getquotelist(data: any): Observable<any> {\r\n        return this.auth.get(`${timesheet}/quote/list`, data);\r\n    }\r\n\r\n    getquotedetails(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/quote/details/${id}`);\r\n    }\r\n\r\n    updatepackagesupplement(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/packagesupplement`, data);\r\n    }\r\n\r\n    getactiveservices(data: any): Observable<any> {\r\n        return this.auth.get(`${timesheet}/active-services`, data);\r\n    }\r\n\r\n    updatetactiveservices(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/active-services`, data);\r\n    }\r\n\r\n    getPDFReport(data: any): Observable<any> {\r\n        return this.auth.get(`${timesheet}/pdfreport`, data);\r\n    }\r\n\r\n    getreportpdfpath(data: any) {\r\n        const headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\r\n        const formData = new HttpParams({\r\n            fromObject: {\r\n                SqlStmt: `${data.SqlStmt}`,\r\n                reportPath: `${data.reportPath}`,\r\n                reportName: `${data.reportName}`,\r\n                parameters: `${data.parameters}`\r\n            }\r\n        });\r\n        return this.http.post('http://45.77.37.207:4141/steph/Timesheet.asmx/get_pdf_Report', formData, { headers: headers || headers, responseType: 'text' });\r\n    }\r\n\r\n    getAllocateDefaults(uname: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/unallocate-defaults/${uname}`);\r\n    }\r\n\r\n    getcomputetimesheet(data: any): Observable<any> {\r\n        return this.auth.get(`${timesheet}/compute-timesheet`, data);\r\n    }\r\n\r\n    posttimesheet(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/timesheet`, data);\r\n    }\r\n\r\n    postsamplereport(data: any) {\r\n        return this.auth.post(`${timesheet}/sample-report`, data);\r\n    }\r\n\r\n    pdfreport(data: any) {\r\n        return this.auth.post(`${timesheet}/pdfreport`, data);\r\n    }\r\n    getleavebalances(personID: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/leave-balances/${personID}`);\r\n    }\r\n\r\n    // getdocumentblob(data: any): Observable<any>{\r\n    //     return this.http.post(`${timesheet}/copy-mta-document`, data , { responseType: 'blob', reportProgress: true });\r\n    // }\r\n\r\n    putleaveapproved(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/leave-approved`, data);\r\n    }\r\n\r\n    putleaveentry(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/putOnLeave`, data);\r\n    }\r\n\r\n    postleaveentry(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/putOnLeave`, data);\r\n    }\r\n\r\n    posttermination(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/terminate`, data);\r\n    }\r\n\r\n    getservicetype(type: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/servicetype/${type}`)\r\n    }\r\n\r\n    removeShiftOverlap(data: any, interval: number): Observable<any> {\r\n        return this.auth.put(`${timesheet}/remove-shiftoverlap/${interval}`, data);\r\n    }\r\n\r\n    selectedApprove(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/selected-approve`, data);\r\n    }\r\n\r\n    unapproveAll(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/unapproved/all`, data);\r\n    }\r\n\r\n    approveAll(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/approve/all`, data);\r\n    }\r\n\r\n    deleteunapprovedall(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/delete-unapproved/all`, data);\r\n    }\r\n\r\n    getjobstatus(recordArr: Array<number>): Observable<any> {\r\n        return this.auth.post(`${timesheet}/jobstatus-timesheet`, recordArr);\r\n    }\r\n\r\n    /**\r\n     *  Get USERNAME by using AccountNo\r\n     */\r\n    getuname(accountNo: string) {\r\n        return this.auth.get(`${timesheet}/get-username/${accountNo}`)\r\n    }\r\n\r\n    /**\r\n     * Update Alerts and Issues - Profile Page\r\n     */\r\n\r\n    updatealertsissues(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/update/alerts`, data)\r\n    }\r\n\r\n    /**\r\n     *  Post Case Staff \r\n     */\r\n    postcasestaff(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/case-staff`, data)\r\n    }\r\n    /**\r\n     *  Update Case Staff \r\n     */\r\n    updatecasestaff(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/case-staff`, data)\r\n    }\r\n\r\n    /**\r\n     *  Delete Case Staff \r\n     */\r\n\r\n    deletecasestaff(recordNo: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/case-staff/${recordNo}`)\r\n    }\r\n\r\n    /**\r\n     * Get Case Staff\r\n     */\r\n\r\n    getcasestaff(recordNo: number): Observable<any> {\r\n        return this.auth.get(`${timesheet}/case-staff/${recordNo}`)\r\n    }\r\n\r\n    /**\r\n     * Intake Details > Funding > Fees\r\n     */\r\n    getintakefees(recordNo: number): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/funding/fees/${recordNo}`)\r\n    }\r\n\r\n    /**\r\n     * Intake Details > Funding  > Credits\r\n     */\r\n    getintakecredits(data: any): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/funding/credits`, data)\r\n    }\r\n\r\n    /**\r\n     * Intake Details > Funding  > Documents\r\n     */\r\n    getintakedocuments(data: any): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/funding/documents`, data)\r\n    }\r\n\r\n    /**\r\n     * Intake Details > Funding > Program Details\r\n     */\r\n\r\n    getprogramdetails(recordNo: number) {\r\n        return this.auth.get(`${timesheet}/intake/funding/program-details/${recordNo}`);\r\n    }\r\n\r\n    postprogramdetails(data: any) {\r\n        return this.auth.post(`${timesheet}/intake/funding/program-details/post`, data);\r\n    }\r\n\r\n    updateprogramdetails(data: any) {\r\n        return this.auth.put(`${timesheet}/intake/funding/program-details/update`, data);\r\n    }\r\n\r\n    /**\r\n     * Nudge Time\r\n     */\r\n\r\n    updatenudgetime(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/nudgetime`, data)\r\n    }\r\n\r\n    /**\r\n     * Cut Roster\r\n     */\r\n\r\n    postcutroster(roster: Array<any>): Observable<any> {\r\n        return this.auth.post(`${timesheet}/cut-roster`, roster)\r\n    }\r\n\r\n    /**\r\n     * Copy Roster\r\n     */\r\n\r\n    postcopyroster(roster: Array<any>): Observable<any> {\r\n        return this.auth.post(`${timesheet}/copy-roster`, roster)\r\n    }\r\n\r\n\r\n    /**\r\n     *  Day And Time\r\n     */\r\n    postdaytime(time: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/change-day-time`, time)\r\n    }\r\n\r\n\r\n    /**\r\n     * Audit History\r\n     */\r\n\r\n    getaudithistory(recordNo: number): Observable<any> {\r\n        return this.auth.get(`${timesheet}/audit-history/${recordNo}`)\r\n    }\r\n\r\n\r\n    /**\r\n     * Data Set\r\n     */\r\n\r\n    getdataset(recordNo: number): Observable<any> {\r\n        return this.auth.get(`${timesheet}/dataset/${recordNo}`)\r\n    }\r\n\r\n\r\n    /**\r\n     * Extra Information\r\n     */\r\n\r\n    getextrainformation(recordNo: number): Observable<any> {\r\n        return this.auth.get(`${timesheet}/extra-info/${recordNo}`)\r\n    }\r\n\r\n    /**\r\n     * Tasks\r\n     */\r\n\r\n    gettasks(recordNo: number): Observable<any> {\r\n        return this.auth.get(`${timesheet}/tasks/${recordNo}`)\r\n    }\r\n\r\n    /**\r\n     * Service Notes\r\n     */\r\n\r\n    getservicenotes(recordNo: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/service-notes/${recordNo}`)\r\n    }\r\n\r\n\r\n    /**\r\n     *  Staff Details\r\n     */\r\n\r\n    getstaffdetails(accountName: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/staff-details/${accountName}`)\r\n    }\r\n\r\n\r\n    /**\r\n     * Allocate Resource\r\n     */\r\n\r\n    updateResource(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/resource`, data)\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Caselaod\r\n     */\r\n\r\n    updatecaseload(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/caseload`, data)\r\n    }\r\n\r\n    /** */\r\n\r\n    /**\r\n     * Pay\r\n     */\r\n\r\n    updateposition(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/pay/position`, data)\r\n    }\r\n\r\n    updatecommencement(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/pay/commencement`, data)\r\n    }\r\n\r\n    updatepayroll(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/pay/payroll`, data)\r\n    }\r\n\r\n    updateworkhours(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/pay/workhours`, data)\r\n    }\r\n    /** */\r\n\r\n    /**\r\n     * Insurance & Pension\r\n     */\r\n\r\n    getpension(personID: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/pension/${personID}`)\r\n    }\r\n\r\n    postpension(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/pension`, data)\r\n    }\r\n\r\n    updatepension(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/pension`, data)\r\n    }\r\n\r\n    deletespension(recordNo: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/pension/${recordNo}`)\r\n    }\r\n    /** */\r\n\r\n    /**\r\n     * Services\r\n     */\r\n\r\n    getservicedata(recordNo: number): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/service-data/${recordNo}`)\r\n    }\r\n\r\n    deleteintakeservicecompetency(recordNo: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/intake/services/competency/${recordNo}`)\r\n    }\r\n\r\n    /** */\r\n\r\n    /**\r\n     * Staff\r\n     */\r\n\r\n    postintakestaff(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/intake/staff`, data)\r\n    }\r\n\r\n    updateintakestaff(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/intake/staff`, data)\r\n    }\r\n\r\n    deleteintakestaff(recordNo: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/intake/staff/${recordNo}`)\r\n    }\r\n\r\n    /** */\r\n\r\n    /**\r\n     *  Competency\r\n     */\r\n\r\n    postintakecompetency(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/intake/competency`, data)\r\n    }\r\n\r\n    updateintakecompetency(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/intake/competency`, data)\r\n    }\r\n\r\n    deleteintakecompetency(recordNo: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/intake/competency/${recordNo}`)\r\n    }\r\n\r\n    de\r\n    /** */\r\n\r\n    /**\r\n     * Goals\r\n     */\r\n\r\n    postgoals(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/intake/goals`, data)\r\n    }\r\n\r\n    updategoals(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/intake/goals`, data)\r\n    }\r\n\r\n    deletegoals(recordNo: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/intake/goals/${recordNo}`)\r\n    }\r\n\r\n    /** */\r\n\r\n    /**\r\n     * Branches\r\n     */\r\n\r\n    postbranches(data: any) {\r\n        return this.auth.post(`${timesheet}/intake/branches`, data)\r\n    }\r\n\r\n    updatebranches(data: any) {\r\n        return this.auth.put(`${timesheet}/intake/branches`, data)\r\n    }\r\n\r\n    deletebranches(recordNo: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/intake/branches/${recordNo}`)\r\n    }\r\n\r\n    /** */\r\n\r\n    /**\r\n     * Preference\r\n     */\r\n\r\n    postrecipientpreference(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/intake/recipient-preference`, data)\r\n    }\r\n\r\n    updateusrecipientpreference(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/intake/recipient-preference`, data)\r\n    }\r\n\r\n    deleterecipientpreference(recordNo: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/intake/recipient-preference/${recordNo}`)\r\n    }\r\n\r\n    /**\r\n     * User Group\r\n     */\r\n\r\n    postusergroup(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/intake/user-group`, data)\r\n    }\r\n\r\n    updateusergroup(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/intake/user-group`, data)\r\n    }\r\n\r\n    deleteusergroup(recordNo: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/intake/user-group/${recordNo}`)\r\n    }\r\n\r\n    /**\r\n     * Consents\r\n     */\r\n\r\n    getconsents(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/consents/${id}`)\r\n    }\r\n\r\n    postconsents(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/intake/consents`, data)\r\n    }\r\n\r\n    updateconsents(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/intake/consents`, data)\r\n    }\r\n\r\n    deleteconsents(recordNo: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/intake/consents/${recordNo}`)\r\n    }\r\n\r\n    /** */\r\n\r\n    /**\r\n     * Insurance\r\n     */\r\n\r\n    getinsurance(personID: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/insurance/${personID}`)\r\n    }\r\n\r\n    updateinsurance(data: any, personID: string): Observable<any> {\r\n        return this.auth.put(`${timesheet}/insurance/${personID}`, data)\r\n    }\r\n\r\n    /** */\r\n\r\n    /**\r\n     * Reminders Recipient\r\n     */\r\n\r\n    getremindersrecipient(id: string): Observable<any>{\r\n        return this.auth.get(`${timesheet}/recipient/reminders/${id}`);\r\n    }\r\n\r\n    postremindersrecipient(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/recipient/reminders`, data)\r\n    }\r\n\r\n    updateremindersrecipient(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/recipient/reminders`, data)\r\n    }\r\n\r\n    deleteremindersrecipient(recordNo: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/recipient/reminders/${recordNo}`)\r\n    }\r\n\r\n    /** */\r\n\r\n    /**\r\n     *  Reminders Staff\r\n     */\r\n\r\n\r\n    getreminders(name: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/staff/reminders/${name}`)\r\n    }\r\n\r\n    postreminders(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/staff/reminders`, data)\r\n    }\r\n\r\n    deletereminders(recordNo: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/staff/reminders/${recordNo}`)\r\n    }\r\n\r\n    updatereminders(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/staff/reminders`, data)\r\n    }\r\n\r\n    /** */\r\n\r\n    /** Groupings & Preferences */\r\n\r\n    getuserdefined1(personID: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/staff/userdefined-1/${personID}`)\r\n    }\r\n\r\n    postuserdefined1(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/staff/userdefined-1`, data)\r\n    }\r\n\r\n    deleteshareduserdefined(recordNo: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/staff/userdefined-shared/${recordNo}`)\r\n    }\r\n\r\n    updateshareduserdefined(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/staff/userdefined-shared`, data);\r\n    }\r\n\r\n    getuserdefined2(personID: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/staff/userdefined-2/${personID}`)\r\n    }\r\n\r\n    postuserdefined2(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/staff/userdefined-2`, data)\r\n    }\r\n\r\n\r\n    /** */\r\n\r\n    /**\r\n     * \r\n     * Staff Positions \r\n     */\r\n\r\n    getstaffpositions(personID: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/staff/positions/${personID}`)\r\n    }\r\n\r\n    poststaffpositions(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/staff/positions`, data)\r\n    }\r\n\r\n    updatestaffpositions(data: any, recordNo: number): Observable<any> {\r\n        return this.auth.put(`${timesheet}/staff/positions/${recordNo}`, data)\r\n    }\r\n\r\n    deletestaffpositions(recordNo: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/staff/positions/${recordNo}`)\r\n    }\r\n\r\n    /** */\r\n\r\n    /**\r\n     * Primary Address\r\n     */\r\n\r\n    updateprimaryaddress(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/primaryaddress`, data)\r\n    }\r\n\r\n    /** */\r\n\r\n    /**\r\n     * Primary Phone\r\n     */\r\n\r\n    updateprimaryphone(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/primaryphone`, data)\r\n    }\r\n\r\n    /**\r\n     *  OP Note Populate List\r\n     */\r\n\r\n    getcategoryop(): Observable<any> {\r\n        return this.auth.get(`${timesheet}/category-opnote`)\r\n    }\r\n\r\n    getprogramop(personID: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/program-opnote/${personID}`)\r\n    }\r\n\r\n    getdisciplineop(): Observable<any> {\r\n        return this.auth.get(`${timesheet}/discipline-opnote`)\r\n    }\r\n\r\n    getcaredomainop(): Observable<any> {\r\n        return this.auth.get(`${timesheet}/caredomain-opnote`)\r\n    }\r\n\r\n    getmanagerop(): Observable<any> {\r\n        return this.auth.get(`${timesheet}/manager-opnote`)\r\n    }\r\n\r\n    /** */\r\n\r\n    getreport(): Observable<any> {\r\n        return this.auth.get('api/report/report')\r\n    }\r\n\r\n    getnotes(name: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/notes/${name}`)\r\n    }\r\n\r\n    getloans(name: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/loan/${name}`)\r\n    }\r\n\r\n    getrecipientdetails(name: string = null): Observable<any> {\r\n        return name == null ? this.auth.get(`${timesheet}/recipients/details`)\r\n            : this.auth.get(`${timesheet}/recipients/details/${name}`)\r\n    }\r\n\r\n    getopnotes(name: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/opnotes/${name}`)\r\n    }\r\n\r\n    postopnote(data: any, personID: string): Observable<any> {\r\n        return this.auth.post(`${timesheet}/staff/opnotes/${personID}`, data)\r\n    }\r\n\r\n    updateopnote(data: any, recordNo: number): Observable<any> {\r\n        return this.auth.put(`${timesheet}/staff/opnotes/${recordNo}`, data)\r\n    }\r\n\r\n    deleteopnote(id: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/staff/opnotes/${id}`)\r\n    }\r\n\r\n    gethrnotes(name: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/hrnotes/${name}`)\r\n    }\r\n\r\n    deletehrnotes(id: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/staff/hrnotes/${id}`)\r\n    }\r\n\r\n    posthrnotes(data: any, id: string): Observable<any> {\r\n        return this.auth.post(`${timesheet}/staff/hrnotes/${id}`, data)\r\n    }\r\n\r\n    updatehrnotes(data: any, id: number): Observable<any> {\r\n        return this.auth.put(`${timesheet}/staff/hrnotes/${id}`, data)\r\n    }\r\n\r\n    getrosters(sdate: string, edate: string, servicetype: string): Observable<any> {\r\n        return this.auth.get(`api/report/rosters?sdate=${sdate}&edate=${edate}&servicetype=${servicetype}`)\r\n    }\r\n\r\n    getcompetenciesall(): Observable<any> {\r\n        return this.auth.get(`${timesheet}/competencies-list/all`)\r\n    }\r\n\r\n    getcontactskinrecipient(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/recipient/contacts/kin/${id}`)\r\n    }\r\n\r\n    postcontactskinrecipientdetails(data: any, name: string): Observable<any> {\r\n        return this.auth.post(`${timesheet}/recipient/contacts/kin/details/${name}`, data)\r\n    }\r\n\r\n    getcontactskinrecipientdetails(id: number): Observable<any> {\r\n        return this.auth.get(`${timesheet}/recipient/contacts/kin/details/${id}`)\r\n    }\r\n\r\n    updatecontactskinrecipientdetails(data: any, id: number): Observable<any> {\r\n        return this.auth.put(`${timesheet}/recipient/contacts/kin/details/${id}`, data)\r\n    }\r\n\r\n    getcontactskinstaff(name: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/staff/contacts/kin/${name}`)\r\n    }\r\n\r\n    getcontactskinstaffdetails(id: number): Observable<any> {\r\n        return this.auth.get(`${timesheet}/staff/contacts/kin/details/${id}`)\r\n    }\r\n\r\n    postcontactskinstaffdetails(data: any, name: string): Observable<any> {\r\n        return this.auth.post(`${timesheet}/staff/contacts/kin/details/${name}`, data)\r\n    }\r\n\r\n    updatecontactskinstaffdetails(data: any, id: number): Observable<any> {\r\n        return this.auth.put(`${timesheet}/staff/contacts/kin/details/${id}`, data)\r\n    }\r\n\r\n    deletecontactskin(id: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/contacts/kin/${id}`)\r\n    }\r\n\r\n    getshiftbooked(input: Dto.InputShiftBooked): Observable<any> {\r\n        return this.auth.get(`${timesheet}/shift/booked`, input)\r\n    }\r\n\r\n    getshiftspecific(input: Dto.InputShiftSpecific): Observable<any> {\r\n        return this.auth.get(`${timesheet}/shift/specific`, input)\r\n    }\r\n\r\n    gettimesheets(ts: Dto.GetTimesheet): Observable<any> {\r\n        return this.auth.get(`${timesheet}`, ts);\r\n    }\r\n\r\n    getfilteredstaff(input: Dto.InputFilter): Observable<any> {\r\n        return this.auth.get(`${timesheet}/staff/filtered`, input)\r\n    }\r\n\r\n    getfiltteredrecipient(input: Dto.InputFilter): Observable<any> {\r\n        return this.auth.get(`${timesheet}/recipient/filtered`, input)\r\n    }\r\n\r\n    getrecipients(rec: Dto.GetRecipient): Observable<any> {\r\n        return this.auth.get(`${timesheet}/recipients`, rec)\r\n    }\r\n\r\n    getstaff(staff: Dto.GetStaff): Observable<any> {\r\n        return this.auth.get(`${timesheet}/staffs`, staff)\r\n    }\r\n\r\n    getdaymanager(dto: Dto.DayManager): Observable<any> {\r\n        return this.auth.get(`${timesheet}/dmanager`, dto)\r\n    }\r\n\r\n    getlistcategories(): Observable<any> {\r\n        return this.auth.get(`${timesheet}/categories`)\r\n    }\r\n\r\n    getlistservices(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/services/${id}`)\r\n    }\r\n\r\n    getactivitytype(): Observable<any> {\r\n        return this.auth.get(`${timesheet}/activity`)\r\n    }\r\n\r\n    getpaytype(): Observable<any> {\r\n        return this.auth.get(`${timesheet}/paytype`)\r\n    }\r\n\r\n    getitemloans(): Observable<any> {\r\n        return this.auth.get(`${timesheet}/loan/items`)\r\n    }\r\n\r\n    getoutputtype(): Observable<any> {\r\n        return this.auth.get(`${timesheet}/output`)\r\n    }\r\n\r\n    getprogramtype(): Observable<any> {\r\n        return this.auth.get(`${timesheet}/program`)\r\n    }\r\n\r\n    getcompetencies(name: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/competencies/${name}`)\r\n    }\r\n\r\n    postcompetencies(data: any, id: string): Observable<any> {\r\n        return this.auth.post(`${timesheet}/competencies/${id}`, data)\r\n    }\r\n\r\n    deletecompetency(id: number): Observable<any> {\r\n        return this.auth.delete(`${timesheet}/staff/competency/${id}`)\r\n    }\r\n\r\n    updatecompetency(data: any, id: number): Observable<any> {\r\n        return this.auth.put(`${timesheet}/competency/update/${id}`, data)\r\n    }\r\n\r\n    getincidentdetails(name: string, id: number): Observable<any> {\r\n        return this.auth.get(`${timesheet}/incidents/${name}/${id}`)\r\n    }\r\n\r\n    getincidents(name: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/incidents/${name}`)\r\n    }\r\n\r\n    getincidentlocation(): Observable<any> {\r\n        return this.auth.get(`${timesheet}/incident/location`)\r\n    }\r\n\r\n    getdocuments(name: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/documents/${name}`)\r\n    }\r\n\r\n    getleaveapplication(name: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/leaveapplication/${name}`)\r\n    }\r\n\r\n    updateleaveapplication(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/leaveapplication/${name}`, data)\r\n    }\r\n\r\n    getcoordinatoremail(email: Dto.CoordinatorEmail): Observable<any> {\r\n        return this.auth.get(`${timesheet}/coordinator/email`, email)\r\n    }\r\n\r\n    gettraining(name: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/training/${name}`)\r\n    }\r\n\r\n    addrecordincident(incident: Dto.RecordIncident): Observable<any> {\r\n        return this.auth.post(`${timesheet}/recordincident`, incident)\r\n    }\r\n\r\n    addclientnote(note: Dto.AddClientNote): Observable<any> {\r\n        return this.auth.post(`${timesheet}/client/note`, note)\r\n    }\r\n\r\n    updateoutputtype(input: Dto.RosterInput): Observable<any> {\r\n        return this.auth.put(`${timesheet}/outputtype`, input)\r\n    }\r\n\r\n    updaterosternote(note: Dto.UpdateNote): Observable<any> {\r\n        return this.auth.put(`${timesheet}/roster/note`, note)\r\n    }\r\n\r\n    updateprogram(input: Dto.RosterInput): Observable<any> {\r\n        return this.auth.put(`${timesheet}/program`, input)\r\n    }\r\n\r\n    updateactivity(input: Dto.RosterInput): Observable<any> {\r\n        return this.auth.put(`${timesheet}/activity`, input)\r\n    }\r\n\r\n    updatepaytype(input: Dto.RosterInput): Observable<any> {\r\n        return this.auth.put(`${timesheet}/paytype`, input)\r\n    }\r\n\r\n    updatebillamount(input: Dto.RosterInput): Observable<any> {\r\n        return this.auth.put(`${timesheet}/billamount`, input)\r\n    }\r\n\r\n    updatebillquantity(input: Dto.RosterInput): Observable<any> {\r\n        return this.auth.put(`${timesheet}/billquantity`, input)\r\n    }\r\n\r\n    updatepayquantity(input: Dto.RosterInput): Observable<any> {\r\n        return this.auth.put(`${timesheet}/payquantity`, input)\r\n    }\r\n\r\n    updatesetunitcost(input: Dto.RosterInput): Observable<any> {\r\n        return this.auth.put(`${timesheet}/setunitcost`, input)\r\n    }\r\n\r\n    updateapproveroster(id: number): Observable<any> {\r\n        return this.auth.post(`${timesheet}/approved/roster`, id)\r\n    }\r\n\r\n    updateclaimvariation(cv: Dto.ClaimVariation): Observable<any> {\r\n        return this.auth.post(`${timesheet}/claimvariation`, cv)\r\n    }\r\n\r\n    updateunapproveroster(id: number): Observable<any> {\r\n        return this.auth.put(`${timesheet}/unapprove/roster`, id)\r\n    }\r\n\r\n    updateallocatestaff(id: number, accountName: Dto.InputAllocateStaff): Observable<any> {\r\n        return this.auth.put(`${timesheet}/allocatestaff/${id}`, accountName)\r\n    }\r\n\r\n    updatepassword(user: Dto.ApplicationUser): Observable<any> {\r\n        return this.auth.put(`${timesheet}/password/update`, user);\r\n    }\r\n\r\n    updatepasswordadmin(user: Dto.ApplicationUser): Observable<any> {\r\n        return this.auth.put(`${timesheet}/password/admin/update`, user);\r\n    }\r\n\r\n    deleterosterlist(params: Array<number>): Observable<any> {\r\n        return this.auth.post(`${timesheet}/roster/list`, params)\r\n    }\r\n\r\n    deleteshift(recordArr: Array<number>): Observable<any> {\r\n        return this.auth.post(`${timesheet}/delete/shifts`, recordArr)\r\n    }\r\n\r\n    deleteleaveapplication(recordNo: number): Observable<any> {\r\n        return this.auth.post(`${timesheet}/leaveapplication`, recordNo)\r\n    }\r\n\r\n    /**\r\n     * Intake Tab\r\n     */\r\n\r\n    getbranches(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/branches/${id}`)\r\n    }\r\n\r\n    getfunding(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/funding/${id}`)\r\n    }\r\n\r\n    getgoals(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/goals/${id}`)\r\n    }\r\n\r\n    getplans(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/plans/${id}`)\r\n    }\r\n\r\n    getcareplans(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/careplans/${id}`)\r\n    }\r\n\r\n    getintakeservices(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/services/${id}`)\r\n    }\r\n\r\n    postintakeservices(data: any): Observable<any> {\r\n        return this.auth.post(`${timesheet}/intake/services`, data)\r\n    }\r\n\r\n    updateintakeservices(data: any): Observable<any> {\r\n        return this.auth.put(`${timesheet}/intake/services`, data)\r\n    }\r\n\r\n    getplacements(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/placements/${id}`)\r\n    }\r\n\r\n    getexcludedstaff(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/excludedstaff/${id}`)\r\n    }\r\n\r\n    getincludedstaff(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/includedstaff/${id}`)\r\n    }\r\n\r\n    gethealthalerts(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/healthalerts/${id}`)\r\n    }\r\n\r\n    updatehealthalerts(alert: string, personID: string): Observable<any> {\r\n        return this.auth.put(`${timesheet}/intake/healthalerts/${personID}`, JSON.stringify(alert))\r\n    }\r\n\r\n    getrosteralerts(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/rosteralerts/${id}`)\r\n    }\r\n\r\n    updaterosteralerts(notes: string, personID: string): Observable<any> {\r\n        return this.auth.put(`${timesheet}/intake/rosteralerts/${personID}`, JSON.stringify(notes))\r\n    }\r\n\r\n    getgenderpreferences(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/genderpreferences/${id}`)\r\n    }\r\n\r\n    getspecificcompetencies(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/specific/competencies/${id}`)\r\n    }\r\n\r\n    getgrouptypes(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/group/types/${id}`)\r\n    }\r\n\r\n    getgrouppreferences(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/intake/group/preferences/${id}`)\r\n    }\r\n\r\n    /**\r\n     * END - Intake Tab\r\n     */\r\n\r\n    /**\r\n     * Note Tab - Staff\r\n     */\r\n\r\n    getnotesmiscellaneous(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/notes/miscellaneous/${id}`)\r\n    }\r\n\r\n    getnotesloans(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/notes/loans/${id}`)\r\n    }\r\n\r\n    /**\r\n     * End Note Tab\r\n     */\r\n\r\n    /** \r\n     * Pay Tab - Staff \r\n     */\r\n\r\n    getpaydetails(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/pay/${id}`);\r\n    }\r\n    /**      \r\n     * End - Pay Tab\r\n     */\r\n    updatemiscellaneous(note: Dto.MiscellaneousNote): Observable<any> {\r\n        return this.auth.put(`${timesheet}/notes/miscellaneous`, note)\r\n    }\r\n\r\n    updatetimeandattendance(attendance: Dto.AttendanceStaff): Observable<any> {\r\n        return this.auth.put(`${timesheet}/attendance/staff`, attendance)\r\n    }\r\n\r\n    getattendancestaff(id: string): Observable<any> {\r\n        return this.auth.get(`${timesheet}/attendance/staff/${id}`)\r\n    }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpRequest, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\nconst upload: string = \"api/upload\";\r\nconst fileV2: string = \"api/v2/file\";\r\n\r\n@Injectable()\r\nexport class UploadService {\r\n   constructor(\r\n      public http: HttpClient,\r\n      public auth: AuthService\r\n   ) { }\r\n\r\n   getdocumentblob(data: any): Observable<any> {\r\n      // return this.http.post(`${upload}/copy-mta-document`, data , { responseType: 'blob', reportProgress: true });\r\n      return this.http.post(`${upload}/copy-mta-document`, data);\r\n   }\r\n\r\n   postprofilePic(data: any): Observable<any> {\r\n      return this.http.post(`${upload}/profile`, data);\r\n   }\r\n\r\n   postdocumenttemplate(data: any): Observable<any> {\r\n      return this.http.post(`${upload}/document/template`, data);\r\n   }\r\n\r\n   getdocumenttemplate(): Observable<any> {\r\n      return this.http.get(`${upload}/document/template`);\r\n   }\r\n\r\n   upload(data: any, personID: string): Observable<any> {\r\n      return this.http.post(`${upload}/upload/document/${personID}`, data);\r\n   }\r\n\r\n   getMedia(personID: string): Observable<any> {\r\n      return this.auth.get(`${upload}/media/${personID}`);\r\n   }\r\n\r\n   uploadMedia(data: any, personID: string): Observable<any> {\r\n      return this.http.post(`${upload}/media/${personID}`, data);\r\n   }\r\n\r\n   download(data: any): Observable<any> {\r\n      return this.http.post(`${upload}/download/document`, data, { responseType: 'blob', reportProgress: true })\r\n   }\r\n\r\n   delete(personID: string, file: Dto.FileForm): Observable<any> {\r\n      return this.auth.delete(`${upload}/delete/document/${personID}`, file)\r\n   }\r\n\r\n   staffdocuments(user: string): Observable<any> {\r\n      return this.auth.get(`${upload}/documents/staff/${user}`)\r\n   }\r\n\r\n   clientdocuments(user: string): Observable<any> {\r\n      return this.auth.get(`${upload}/documents/client/${user}`)\r\n   }\r\n\r\n   checkfiles(files: File[], personID: string): Observable<any> {\r\n      const formData = new FormData()\r\n      for (var file of files)\r\n         formData.append(file.name, file)\r\n\r\n      let params = new HttpParams();\r\n\r\n      const options = {\r\n         params: params,\r\n         reportProgress: true,\r\n      };\r\n\r\n      const req = new HttpRequest('POST', `api/upload/check/filetypes/${personID}`, formData, options);\r\n\r\n      return this.http.request(req);\r\n   }\r\n\r\n   uploadProfilePicture(file: FormData) {\r\n      return this.auth.uploadFile(`${upload}/profile`, file);\r\n   }\r\n\r\n\r\n   // VERSION 2 API -----------------------------------------------------------------------------------------------------------------------------------\r\n\r\n   getFileDocuments(name: string, view: string): Observable<any> {\r\n      return this.auth.get(`${fileV2}/${name}/${view}`)\r\n   }\r\n\r\n   deleteFileDocuments(name: string, file: Dto.FileForm): Observable<any>{\r\n      return this.auth.delete(`${fileV2}/${name}`, file);\r\n   }\r\n\r\n   downloadFileDocuments(data: any): Observable<any> {\r\n      return this.http.post(`${fileV2}/download`, data, { responseType: 'blob', reportProgress: true });\r\n   }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}